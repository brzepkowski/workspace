(* Module for axiomatizing type "short_short_integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__short_short_integer
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int

 type short_short_integer "bounded_type" 
 
 function first 
   :int =
  ( -128 )
 
 function last 
   :int =
  127
 
 predicate in_range
   (x : int)  =
  ( ( first <= x ) /\ ( x <= last ) )
 
 clone export "ada__model".Static_Discrete with
 type t = short_short_integer, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "short_integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__short_integer
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int

 type short_integer "bounded_type" 
 
 function first 
   :int =
  ( -32768 )
 
 function last 
   :int =
  32767
 
 predicate in_range
   (x : int)  =
  ( ( first <= x ) /\ ( x <= last ) )
 
 clone export "ada__model".Static_Discrete with
 type t = short_integer, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__integer
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int

 type integer "bounded_type" 
 
 function first 
   :int =
  ( -2147483648 )
 
 function last 
   :int =
  2147483647
 
 predicate in_range
   (x : int)  =
  ( ( first <= x ) /\ ( x <= last ) )
 
 clone export "ada__model".Static_Discrete with
 type t = integer, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "long_integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__long_integer
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int

 type long_integer "bounded_type" 
 
 function first 
   :int =
  ( -2147483648 )
 
 function last 
   :int =
  2147483647
 
 predicate in_range
   (x : int)  =
  ( ( first <= x ) /\ ( x <= last ) )
 
 clone export "ada__model".Static_Discrete with
 type t = long_integer, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "long_long_integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__long_long_integer
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int

 type long_long_integer "bounded_type" 
 
 function first 
   :int =
  ( -9223372036854775808 )
 
 function last 
   :int =
  9223372036854775807
 
 predicate in_range
   (x : int)  =
  ( ( first <= x ) /\ ( x <= last ) )
 
 clone export "ada__model".Static_Discrete with
 type t = long_long_integer, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "natural", created in Gnat2Why.Types.Translate_Type *)
module Standard__natural
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int

 type natural "bounded_type" 
 
 function first 
   :int =
  0
 
 function last 
   :int =
  2147483647
 
 predicate in_range
   (x : int)  =
  ( ( first <= x ) /\ ( x <= last ) )
 
 clone export "ada__model".Static_Discrete with
 type t = natural, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "positive", created in Gnat2Why.Types.Translate_Type *)
module Standard__positive
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int

 type positive "bounded_type" 
 
 function first 
   :int =
  1
 
 function last 
   :int =
  2147483647
 
 predicate in_range
   (x : int)  =
  ( ( first <= x ) /\ ( x <= last ) )
 
 clone export "ada__model".Static_Discrete with
 type t = positive, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "short_float", created in Gnat2Why.Types.Translate_Type *)
module Standard__short_float
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Floating
 use import "real".RealInfix

 type short_float "bounded_type" 
 
 function first 
   :real =
  (-.340282346638528859811704183484516925440.0)
 
 function last 
   :real =
  (340282346638528859811704183484516925440.0)
 
 predicate in_range
   (x : real)  =
  ( ( first <=. x ) /\ ( x <=. last ) )
 
 clone export "ada__model".Static_Floating_Point with
 type t = short_float, 
 function round_real_tmp = Floating.round_single, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "float", created in Gnat2Why.Types.Translate_Type *)
module Standard__float
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Floating
 use import "real".RealInfix

 type float "bounded_type" 
 
 function first 
   :real =
  (-.340282346638528859811704183484516925440.0)
 
 function last 
   :real =
  (340282346638528859811704183484516925440.0)
 
 predicate in_range
   (x : real)  =
  ( ( first <=. x ) /\ ( x <=. last ) )
 
 clone export "ada__model".Static_Floating_Point with
 type t = float, 
 function round_real_tmp = Floating.round_single, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "long_float", created in Gnat2Why.Types.Translate_Type *)
module Standard__long_float
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Floating
 use import "real".RealInfix

 type long_float "bounded_type" 
 
 function first 
   :real =
  (-.179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.0)
 
 function last 
   :real =
  (179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.0)
 
 predicate in_range
   (x : real)  =
  ( ( first <=. x ) /\ ( x <=. last ) )
 
 clone export "ada__model".Static_Floating_Point with
 type t = long_float, 
 function round_real_tmp = Floating.round_double, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "long_long_float", created in Gnat2Why.Types.Translate_Type *)
module Standard__long_long_float
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Floating
 use import "real".RealInfix

 type long_long_float "bounded_type" 
 
 function first 
   :real =
  (-.1189731495357231765021263853030970205169063322294624200440323733891737005522970722616410290336528882853545697807495577314427443153670288434198125573853743678673593200706973263201915918282961524365529510646791086614311790632169778838896134786560600399148753433211454911160088679845154866512852340149773037600009125479393966223151383622417838542743917838138717805889487540575168226347659235576974805113725649020884855222494791399377585026011773549180099796226026859508558883608159846900235645132346594476384939859276456284579661772930407806609229102715046085388087959327781622986827547830768080040150694942303411728957777100335714010559775242124057347007386251660110828379119623008469277200965153500208474470792443848545912886723000619085126472111951361467527633519562927597957250278002980795904193139603021470997035276467445530922022679656280991498232083329641241038509239184734786121921697210543484287048353408113042573002216421348917347174234800714880751002064390517234247656004721768096486107994943415703476320643558624207443504424380566136017608837478165389027809576975977286860071487028287955567141404632615832623602762896316173978484254486860609948270867968048078702511858930838546584223040908805996294594586201903766048446790926002225410530775901065760671347200125846406957030257138960983757998926954553052368560758683179223113639519468850880771872104705203957587480013143131444254943919940175753169339392366881856189129931729104252921236835159922322050998001677102784035360140829296398115122877768135706045789343535451696539561254048846447169786893211671087229088082778350518228857646062218739702851655083720992349483334435228984751232753726636066213902281264706234075352071724058665079518217303463782631353393706774901950197841690441824738063162828586857741432581165364040218402724913393320949219498422442730427019873044536620350262386957804682003601447291997123095530057206141866974852846856186514832715974481203121946751686379343096189615107330065552421485195201762858595091051839472502863871632494167613804996319791441870254302706758495192008837915169401581740046711477877201459644461175204059453504764721807975761111720846273639279600339670470037613374509553184150073796412605047923251661354841291884211340823015473304754067072818763503617332908005951896325207071673904547777129682265206225651439919376804400292380903112437912614776255964694221981375146967079446870358004392507659451618379811859392049544036114915310782251072691486979809240946772142727012404377187409216756613634938900451232351668146089322400697993176017805338191849981933008410985993938760292601390911414526003720284872132411955424282101831204216104467404621635336900583664606591156298764745525068145003932941404131495400677602951005962253022823003631473824681059648442441324864573137437595096416168048024129351876204668135636877532814675538798871771836512893947195335061885003267607354388673368002074387849657014576090349857571243045102038730494854256702479339322809110526041538528994849203991091946129912491633289917998094380337879522093131466946149705939664152375949285890960489916121944989986384837022486672249148924678410206183364627416969576307632480235587975245253737035433882960862753427740016333434055083537048507374544819754722228975281083020898682633020285259923084168054539687911418297629988964576482765287504562854924265165217750799516259669229114977788962356670956627138482018191348321687995863652637620978285070099337294396784639879024914514222742527006363942327998483976739987154418554201562244154926653014515504685489258620276085761837129763358761215382565129633538141663949516556000264159186554850057052611431952919918807954522394649627635630178580896692226406235382898535867595990647008385687123810329591926494846250768992258419305480763620215089022149220528069842018350840586938493815498909445461977893029113576516775406232278298314033473276603952231603422824717528181818844304880921321933550869873395861276073670866652375555675803171490108477320096424318780070008797346032906278943553743564448851907191616455141155761939399690767415156402826543664026760095087523945507341556135867933066031744720924446513532366647649735400851967040771103640538150073486891798364049570606189535005089840913826869535090066783324472578712196604415284924840041850932811908963634175739897166596000759487800619164094854338758520657116541072260996288150123144377944008749301944744330784388995701842710004808305012177123560622895076269042856800047718893158089358515593863176652948089031267747029662545110861548958395087796755464137944895960527975209874813839762578592105756284401759349324162148339565350189196811389091843795734703269406342890087805846940352453479398080674273236297887100867175802531561302356064878709259865288416350972529537091114317204887747405539054009425375424119317944175137064689643861517718849867010341532542385911089624710885385808688837777258648564145934262121086647588489260031762345960769508849149662444156604419552086811989770240.0)
 
 function last 
   :real =
  (1189731495357231765021263853030970205169063322294624200440323733891737005522970722616410290336528882853545697807495577314427443153670288434198125573853743678673593200706973263201915918282961524365529510646791086614311790632169778838896134786560600399148753433211454911160088679845154866512852340149773037600009125479393966223151383622417838542743917838138717805889487540575168226347659235576974805113725649020884855222494791399377585026011773549180099796226026859508558883608159846900235645132346594476384939859276456284579661772930407806609229102715046085388087959327781622986827547830768080040150694942303411728957777100335714010559775242124057347007386251660110828379119623008469277200965153500208474470792443848545912886723000619085126472111951361467527633519562927597957250278002980795904193139603021470997035276467445530922022679656280991498232083329641241038509239184734786121921697210543484287048353408113042573002216421348917347174234800714880751002064390517234247656004721768096486107994943415703476320643558624207443504424380566136017608837478165389027809576975977286860071487028287955567141404632615832623602762896316173978484254486860609948270867968048078702511858930838546584223040908805996294594586201903766048446790926002225410530775901065760671347200125846406957030257138960983757998926954553052368560758683179223113639519468850880771872104705203957587480013143131444254943919940175753169339392366881856189129931729104252921236835159922322050998001677102784035360140829296398115122877768135706045789343535451696539561254048846447169786893211671087229088082778350518228857646062218739702851655083720992349483334435228984751232753726636066213902281264706234075352071724058665079518217303463782631353393706774901950197841690441824738063162828586857741432581165364040218402724913393320949219498422442730427019873044536620350262386957804682003601447291997123095530057206141866974852846856186514832715974481203121946751686379343096189615107330065552421485195201762858595091051839472502863871632494167613804996319791441870254302706758495192008837915169401581740046711477877201459644461175204059453504764721807975761111720846273639279600339670470037613374509553184150073796412605047923251661354841291884211340823015473304754067072818763503617332908005951896325207071673904547777129682265206225651439919376804400292380903112437912614776255964694221981375146967079446870358004392507659451618379811859392049544036114915310782251072691486979809240946772142727012404377187409216756613634938900451232351668146089322400697993176017805338191849981933008410985993938760292601390911414526003720284872132411955424282101831204216104467404621635336900583664606591156298764745525068145003932941404131495400677602951005962253022823003631473824681059648442441324864573137437595096416168048024129351876204668135636877532814675538798871771836512893947195335061885003267607354388673368002074387849657014576090349857571243045102038730494854256702479339322809110526041538528994849203991091946129912491633289917998094380337879522093131466946149705939664152375949285890960489916121944989986384837022486672249148924678410206183364627416969576307632480235587975245253737035433882960862753427740016333434055083537048507374544819754722228975281083020898682633020285259923084168054539687911418297629988964576482765287504562854924265165217750799516259669229114977788962356670956627138482018191348321687995863652637620978285070099337294396784639879024914514222742527006363942327998483976739987154418554201562244154926653014515504685489258620276085761837129763358761215382565129633538141663949516556000264159186554850057052611431952919918807954522394649627635630178580896692226406235382898535867595990647008385687123810329591926494846250768992258419305480763620215089022149220528069842018350840586938493815498909445461977893029113576516775406232278298314033473276603952231603422824717528181818844304880921321933550869873395861276073670866652375555675803171490108477320096424318780070008797346032906278943553743564448851907191616455141155761939399690767415156402826543664026760095087523945507341556135867933066031744720924446513532366647649735400851967040771103640538150073486891798364049570606189535005089840913826869535090066783324472578712196604415284924840041850932811908963634175739897166596000759487800619164094854338758520657116541072260996288150123144377944008749301944744330784388995701842710004808305012177123560622895076269042856800047718893158089358515593863176652948089031267747029662545110861548958395087796755464137944895960527975209874813839762578592105756284401759349324162148339565350189196811389091843795734703269406342890087805846940352453479398080674273236297887100867175802531561302356064878709259865288416350972529537091114317204887747405539054009425375424119317944175137064689643861517718849867010341532542385911089624710885385808688837777258648564145934262121086647588489260031762345960769508849149662444156604419552086811989770240.0)
 
 predicate in_range
   (x : real)  =
  ( ( first <=. x ) /\ ( x <=. last ) )
 
 clone export "ada__model".Static_Floating_Point with
 type t = long_long_float, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "character", created in Gnat2Why.Types.Translate_Type *)
module Standard__character
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int

 type character "bounded_type" 
 
 function first 
   :int =
  0
 
 function last 
   :int =
  255
 
 predicate in_range
   (x : int)  =
  ( ( first <= x ) /\ ( x <= last ) )
 
 clone export "ada__model".Static_Discrete with
 type t = character, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "wide_character", created in Gnat2Why.Types.Translate_Type *)
module Standard__wide_character
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int

 type wide_character "bounded_type" 
 
 function first 
   :int =
  0
 
 function last 
   :int =
  65535
 
 predicate in_range
   (x : int)  =
  ( ( first <= x ) /\ ( x <= last ) )
 
 clone export "ada__model".Static_Discrete with
 type t = wide_character, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "wide_wide_character", created in Gnat2Why.Types.Translate_Type *)
module Standard__wide_wide_character
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int

 type wide_wide_character "bounded_type" 
 
 function first 
   :int =
  0
 
 function last 
   :int =
  2147483647
 
 predicate in_range
   (x : int)  =
  ( ( first <= x ) /\ ( x <= last ) )
 
 clone export "ada__model".Static_Discrete with
 type t = wide_wide_character, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "string", created in Gnat2Why.Types.Translate_Type *)
module Standard__string
 use import "_gnatprove_standard".Main
 use        Standard__positive
 use        Standard__character
 use        Standard__integer
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Array__1

 clone export "ada__model".Unconstr_Array with
 type component_type = Standard__character.character, 
 type base_type = Standard__integer.integer, 
 function to_int = Standard__integer.to_int, 
 predicate in_range_base = Standard__integer.in_range, 
 predicate in_range = Standard__positive.in_range
 
 type string  = 
  __t
 
 function to_string 
   (x : __image)  :string
 
 function from_string 
   (x : string)  :__image
 
 clone export "ada__model".Array_Comparison_Axiom with
 type component_type = Standard__character.character, 
 function to_int = Standard__character.to_int

end

(* Module for axiomatizing type "wide_string", created in Gnat2Why.Types.Translate_Type *)
module Standard__wide_string
 use import "_gnatprove_standard".Main
 use        Standard__positive
 use        Standard__wide_character
 use        Standard__integer
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Array__1

 clone export "ada__model".Unconstr_Array with
 type component_type = Standard__wide_character.wide_character, 
 type base_type = Standard__integer.integer, 
 function to_int = Standard__integer.to_int, 
 predicate in_range_base = Standard__integer.in_range, 
 predicate in_range = Standard__positive.in_range
 
 type wide_string  = 
  __t
 
 clone export "ada__model".Array_Comparison_Axiom with
 type component_type = Standard__wide_character.wide_character, 
 function to_int = Standard__wide_character.to_int

end

(* Module for axiomatizing type "wide_wide_string", created in Gnat2Why.Types.Translate_Type *)
module Standard__wide_wide_string
 use import "_gnatprove_standard".Main
 use        Standard__positive
 use        Standard__wide_wide_character
 use        Standard__integer
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Array__1

 clone export "ada__model".Unconstr_Array with
 type component_type = Standard__wide_wide_character.wide_wide_character, 
 type base_type = Standard__integer.integer, 
 function to_int = Standard__integer.to_int, 
 predicate in_range_base = Standard__integer.in_range, 
 predicate in_range = Standard__positive.in_range
 
 type wide_wide_string  = 
  __t
 
 clone export "ada__model".Array_Comparison_Axiom with
 type component_type = Standard__wide_wide_character.wide_wide_character, 
 function to_int = Standard__wide_wide_character.to_int

end

(* Module for axiomatizing type "duration", created in Gnat2Why.Types.Translate_Type *)
module Standard__duration
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int

 type duration "bounded_type" 
 
 function first 
   :__fixed =
  ( -9223372036854775808 )
 
 function last 
   :__fixed =
  9223372036854775807
 
 function inv_small 
   :__fixed =
  1000000000
 
 predicate in_range
   (x : __fixed)  =
  ( ( first <= x ) /\ ( x <= last ) )
 
 clone export "ada__model".Static_Fixed_Point with
 type t = duration, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 function inv_small = inv_small

end

(* Module for axiomatizing type "integer_8", created in Gnat2Why.Types.Translate_Type *)
module Standard__integer_8
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int

 type integer_8 "bounded_type" 
 
 function first 
   :int =
  ( -128 )
 
 function last 
   :int =
  127
 
 predicate in_range
   (x : int)  =
  ( ( first <= x ) /\ ( x <= last ) )
 
 clone export "ada__model".Static_Discrete with
 type t = integer_8, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "integer_16", created in Gnat2Why.Types.Translate_Type *)
module Standard__integer_16
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int

 type integer_16 "bounded_type" 
 
 function first 
   :int =
  ( -32768 )
 
 function last 
   :int =
  32767
 
 predicate in_range
   (x : int)  =
  ( ( first <= x ) /\ ( x <= last ) )
 
 clone export "ada__model".Static_Discrete with
 type t = integer_16, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "integer_32", created in Gnat2Why.Types.Translate_Type *)
module Standard__integer_32
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int

 type integer_32 "bounded_type" 
 
 function first 
   :int =
  ( -2147483648 )
 
 function last 
   :int =
  2147483647
 
 predicate in_range
   (x : int)  =
  ( ( first <= x ) /\ ( x <= last ) )
 
 clone export "ada__model".Static_Discrete with
 type t = integer_32, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "integer_64", created in Gnat2Why.Types.Translate_Type *)
module Standard__integer_64
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int

 type integer_64 "bounded_type" 
 
 function first 
   :int =
  ( -9223372036854775808 )
 
 function last 
   :int =
  9223372036854775807
 
 predicate in_range
   (x : int)  =
  ( ( first <= x ) /\ ( x <= last ) )
 
 clone export "ada__model".Static_Discrete with
 type t = integer_64, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "universal_integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__universal_integer
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int

 type universal_integer "bounded_type" 
 
 function first 
   :int =
  ( -9223372036854775808 )
 
 function last 
   :int =
  9223372036854775807
 
 predicate in_range
   (x : int)  =
  ( ( first <= x ) /\ ( x <= last ) )
 
 clone export "ada__model".Static_Discrete with
 type t = universal_integer, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "universal_real", created in Gnat2Why.Types.Translate_Type *)
module Standard__universal_real
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Floating
 use import "real".RealInfix

 type universal_real "bounded_type" 
 
 function first 
   :real =
  (-.1189731495357231765021263853030970205169063322294624200440323733891737005522970722616410290336528882853545697807495577314427443153670288434198125573853743678673593200706973263201915918282961524365529510646791086614311790632169778838896134786560600399148753433211454911160088679845154866512852340149773037600009125479393966223151383622417838542743917838138717805889487540575168226347659235576974805113725649020884855222494791399377585026011773549180099796226026859508558883608159846900235645132346594476384939859276456284579661772930407806609229102715046085388087959327781622986827547830768080040150694942303411728957777100335714010559775242124057347007386251660110828379119623008469277200965153500208474470792443848545912886723000619085126472111951361467527633519562927597957250278002980795904193139603021470997035276467445530922022679656280991498232083329641241038509239184734786121921697210543484287048353408113042573002216421348917347174234800714880751002064390517234247656004721768096486107994943415703476320643558624207443504424380566136017608837478165389027809576975977286860071487028287955567141404632615832623602762896316173978484254486860609948270867968048078702511858930838546584223040908805996294594586201903766048446790926002225410530775901065760671347200125846406957030257138960983757998926954553052368560758683179223113639519468850880771872104705203957587480013143131444254943919940175753169339392366881856189129931729104252921236835159922322050998001677102784035360140829296398115122877768135706045789343535451696539561254048846447169786893211671087229088082778350518228857646062218739702851655083720992349483334435228984751232753726636066213902281264706234075352071724058665079518217303463782631353393706774901950197841690441824738063162828586857741432581165364040218402724913393320949219498422442730427019873044536620350262386957804682003601447291997123095530057206141866974852846856186514832715974481203121946751686379343096189615107330065552421485195201762858595091051839472502863871632494167613804996319791441870254302706758495192008837915169401581740046711477877201459644461175204059453504764721807975761111720846273639279600339670470037613374509553184150073796412605047923251661354841291884211340823015473304754067072818763503617332908005951896325207071673904547777129682265206225651439919376804400292380903112437912614776255964694221981375146967079446870358004392507659451618379811859392049544036114915310782251072691486979809240946772142727012404377187409216756613634938900451232351668146089322400697993176017805338191849981933008410985993938760292601390911414526003720284872132411955424282101831204216104467404621635336900583664606591156298764745525068145003932941404131495400677602951005962253022823003631473824681059648442441324864573137437595096416168048024129351876204668135636877532814675538798871771836512893947195335061885003267607354388673368002074387849657014576090349857571243045102038730494854256702479339322809110526041538528994849203991091946129912491633289917998094380337879522093131466946149705939664152375949285890960489916121944989986384837022486672249148924678410206183364627416969576307632480235587975245253737035433882960862753427740016333434055083537048507374544819754722228975281083020898682633020285259923084168054539687911418297629988964576482765287504562854924265165217750799516259669229114977788962356670956627138482018191348321687995863652637620978285070099337294396784639879024914514222742527006363942327998483976739987154418554201562244154926653014515504685489258620276085761837129763358761215382565129633538141663949516556000264159186554850057052611431952919918807954522394649627635630178580896692226406235382898535867595990647008385687123810329591926494846250768992258419305480763620215089022149220528069842018350840586938493815498909445461977893029113576516775406232278298314033473276603952231603422824717528181818844304880921321933550869873395861276073670866652375555675803171490108477320096424318780070008797346032906278943553743564448851907191616455141155761939399690767415156402826543664026760095087523945507341556135867933066031744720924446513532366647649735400851967040771103640538150073486891798364049570606189535005089840913826869535090066783324472578712196604415284924840041850932811908963634175739897166596000759487800619164094854338758520657116541072260996288150123144377944008749301944744330784388995701842710004808305012177123560622895076269042856800047718893158089358515593863176652948089031267747029662545110861548958395087796755464137944895960527975209874813839762578592105756284401759349324162148339565350189196811389091843795734703269406342890087805846940352453479398080674273236297887100867175802531561302356064878709259865288416350972529537091114317204887747405539054009425375424119317944175137064689643861517718849867010341532542385911089624710885385808688837777258648564145934262121086647588489260031762345960769508849149662444156604419552086811989770240.0)
 
 function last 
   :real =
  (1189731495357231765021263853030970205169063322294624200440323733891737005522970722616410290336528882853545697807495577314427443153670288434198125573853743678673593200706973263201915918282961524365529510646791086614311790632169778838896134786560600399148753433211454911160088679845154866512852340149773037600009125479393966223151383622417838542743917838138717805889487540575168226347659235576974805113725649020884855222494791399377585026011773549180099796226026859508558883608159846900235645132346594476384939859276456284579661772930407806609229102715046085388087959327781622986827547830768080040150694942303411728957777100335714010559775242124057347007386251660110828379119623008469277200965153500208474470792443848545912886723000619085126472111951361467527633519562927597957250278002980795904193139603021470997035276467445530922022679656280991498232083329641241038509239184734786121921697210543484287048353408113042573002216421348917347174234800714880751002064390517234247656004721768096486107994943415703476320643558624207443504424380566136017608837478165389027809576975977286860071487028287955567141404632615832623602762896316173978484254486860609948270867968048078702511858930838546584223040908805996294594586201903766048446790926002225410530775901065760671347200125846406957030257138960983757998926954553052368560758683179223113639519468850880771872104705203957587480013143131444254943919940175753169339392366881856189129931729104252921236835159922322050998001677102784035360140829296398115122877768135706045789343535451696539561254048846447169786893211671087229088082778350518228857646062218739702851655083720992349483334435228984751232753726636066213902281264706234075352071724058665079518217303463782631353393706774901950197841690441824738063162828586857741432581165364040218402724913393320949219498422442730427019873044536620350262386957804682003601447291997123095530057206141866974852846856186514832715974481203121946751686379343096189615107330065552421485195201762858595091051839472502863871632494167613804996319791441870254302706758495192008837915169401581740046711477877201459644461175204059453504764721807975761111720846273639279600339670470037613374509553184150073796412605047923251661354841291884211340823015473304754067072818763503617332908005951896325207071673904547777129682265206225651439919376804400292380903112437912614776255964694221981375146967079446870358004392507659451618379811859392049544036114915310782251072691486979809240946772142727012404377187409216756613634938900451232351668146089322400697993176017805338191849981933008410985993938760292601390911414526003720284872132411955424282101831204216104467404621635336900583664606591156298764745525068145003932941404131495400677602951005962253022823003631473824681059648442441324864573137437595096416168048024129351876204668135636877532814675538798871771836512893947195335061885003267607354388673368002074387849657014576090349857571243045102038730494854256702479339322809110526041538528994849203991091946129912491633289917998094380337879522093131466946149705939664152375949285890960489916121944989986384837022486672249148924678410206183364627416969576307632480235587975245253737035433882960862753427740016333434055083537048507374544819754722228975281083020898682633020285259923084168054539687911418297629988964576482765287504562854924265165217750799516259669229114977788962356670956627138482018191348321687995863652637620978285070099337294396784639879024914514222742527006363942327998483976739987154418554201562244154926653014515504685489258620276085761837129763358761215382565129633538141663949516556000264159186554850057052611431952919918807954522394649627635630178580896692226406235382898535867595990647008385687123810329591926494846250768992258419305480763620215089022149220528069842018350840586938493815498909445461977893029113576516775406232278298314033473276603952231603422824717528181818844304880921321933550869873395861276073670866652375555675803171490108477320096424318780070008797346032906278943553743564448851907191616455141155761939399690767415156402826543664026760095087523945507341556135867933066031744720924446513532366647649735400851967040771103640538150073486891798364049570606189535005089840913826869535090066783324472578712196604415284924840041850932811908963634175739897166596000759487800619164094854338758520657116541072260996288150123144377944008749301944744330784388995701842710004808305012177123560622895076269042856800047718893158089358515593863176652948089031267747029662545110861548958395087796755464137944895960527975209874813839762578592105756284401759349324162148339565350189196811389091843795734703269406342890087805846940352453479398080674273236297887100867175802531561302356064878709259865288416350972529537091114317204887747405539054009425375424119317944175137064689643861517718849867010341532542385911089624710885385808688837777258648564145934262121086647588489260031762345960769508849149662444156604419552086811989770240.0)
 
 predicate in_range
   (x : real)  =
  ( ( first <=. x ) /\ ( x <=. last ) )
 
 clone export "ada__model".Static_Floating_Point with
 type t = universal_real, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "stream_element" defined at a-stream.ads:42, created in Gnat2Why.Types.Translate_Type *)
module Ada__streams__stream_element
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int

 type stream_element "bounded_type" 
 
 function first 
   :int =
  0
 
 function last 
   :int =
  255
 
 function attr__ATTRIBUTE_MODULUS 
   :int =
  256
 
 predicate in_range
   (x : int)  =
  ( ( first <= x ) /\ ( x <= last ) )
 
 clone export "ada__model".Static_Modular with
 type t = stream_element, 
 function first = first, 
 function last = last, 
 function attr__ATTRIBUTE_MODULUS = attr__ATTRIBUTE_MODULUS, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "Tstream_element_offsetB" defined at a-stream.ads:44, created in Gnat2Why.Types.Translate_Type *)
module Ada__streams__Tstream_element_offsetB
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int

 type tstream_element_offsetB "bounded_type" 
 
 function first 
   :int =
  ( -2147483648 )
 
 function last 
   :int =
  2147483647
 
 predicate in_range
   (x : int)  =
  ( ( first <= x ) /\ ( x <= last ) )
 
 clone export "ada__model".Static_Discrete with
 type t = tstream_element_offsetB, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "stream_element_offset" defined at a-stream.ads:44, created in Gnat2Why.Types.Translate_Type *)
module Ada__streams__stream_element_offset
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int

 type stream_element_offset "bounded_type" 
 
 function first 
   :int =
  ( -2147483648 )
 
 function last 
   :int =
  2147483647
 
 predicate in_range
   (x : int)  =
  ( ( first <= x ) /\ ( x <= last ) )
 
 clone export "ada__model".Static_Discrete with
 type t = stream_element_offset, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "stream_element_count" defined at a-stream.ads:48, created in Gnat2Why.Types.Translate_Type *)
module Ada__streams__stream_element_count
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int

 type stream_element_count "bounded_type" 
 
 function first 
   :int =
  0
 
 function last 
   :int =
  2147483647
 
 predicate in_range
   (x : int)  =
  ( ( first <= x ) /\ ( x <= last ) )
 
 clone export "ada__model".Static_Discrete with
 type t = stream_element_count, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "stream_element_array" defined at a-stream.ads:51, created in Gnat2Why.Types.Translate_Type *)
module Ada__streams__stream_element_array
 use import "_gnatprove_standard".Main
 use        Ada__streams__stream_element
 use        Ada__streams__stream_element_offset
 use        Ada__streams__Tstream_element_offsetB
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Array__1

 clone export "ada__model".Unconstr_Array with
 type component_type = Ada__streams__stream_element.stream_element, 
 type base_type = Ada__streams__Tstream_element_offsetB.tstream_element_offsetB, 
 function to_int = Ada__streams__Tstream_element_offsetB.to_int, 
 predicate in_range_base = Ada__streams__Tstream_element_offsetB.in_range, 
 predicate in_range = Ada__streams__stream_element_offset.in_range
 
 type stream_element_array  = 
  __t
 
 clone export "ada__model".Array_Comparison_Axiom with
 type component_type = Ada__streams__stream_element.stream_element, 
 function to_int = Ada__streams__stream_element.to_int

end

(* Module for defining the constant "v" defined at a-stream.ads:79, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__streams__write_sea__v
 use import "_gnatprove_standard".Main
 use        Ada__streams__stream_element_array
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Array__1

 function v 
   :Ada__streams__stream_element_array.stream_element_array

end

(* Module giving an empty axiom for the entity "v" defined at a-stream.ads:79, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__streams__write_sea__v__axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "name" defined at system.ads:43, created in Gnat2Why.Types.Translate_Type *)
module System__name
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int

 type name "bounded_type" 
 
 function first 
   :int =
  0
 
 function last 
   :int =
  0
 
 predicate in_range
   (x : int)  =
  ( ( first <= x ) /\ ( x <= last ) )
 
 clone export "ada__model".Static_Discrete with
 type t = name, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for defining the constant "system_name" defined at system.ads:44, created in Gnat2Why.Decls.Translate_Constant *)
module System__system_name
 use import "_gnatprove_standard".Main
 use        System__name
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function system_name 
   :System__name.name

end

(* Module for axiomatizing type "address" defined at system.ads:113, created in Gnat2Why.Types.Translate_Type *)
module System__address
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int

 type address "bounded_type" 
 
 function first 
   :int =
  0
 
 function last 
   :int =
  4294967295
 
 function attr__ATTRIBUTE_MODULUS 
   :int =
  4294967296
 
 predicate in_range
   (x : int)  =
  ( ( first <= x ) /\ ( x <= last ) )
 
 clone export "ada__model".Static_Modular with
 type t = address, 
 function first = first, 
 function last = last, 
 function attr__ATTRIBUTE_MODULUS = attr__ATTRIBUTE_MODULUS, 
 predicate in_range = in_range

end

(* Module for defining the constant "null_address" defined at system.ads:66, created in Gnat2Why.Decls.Translate_Constant *)
module System__null_address
 use import "_gnatprove_standard".Main
 use        System__address
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function null_address 
   :System__address.address

end

(* Module for defining the constant "left" defined at system.ads:74, created in Gnat2Why.Decls.Translate_Constant *)
module System__Olt__left
 use import "_gnatprove_standard".Main
 use        System__address
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function left 
   :System__address.address

end

(* Module giving an empty axiom for the entity "left" defined at system.ads:74, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__Olt__left__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "right" defined at system.ads:74, created in Gnat2Why.Decls.Translate_Constant *)
module System__Olt__right
 use import "_gnatprove_standard".Main
 use        System__address
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function right 
   :System__address.address

end

(* Module giving an empty axiom for the entity "right" defined at system.ads:74, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__Olt__right__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "Olt" defined at system.ads:74, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__Olt
 use import "_gnatprove_standard".Main
 use        System__address
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function olt 
   (left : System__address.address) (right : System__address.address)  :bool
 
 val olt 
   (left : System__address.address) (right : System__address.address)  :bool
  requires { true }
  ensures { ( result = (olt left right) ) }


end

(* Module giving an empty axiom for the entity "Olt" defined at system.ads:74, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__Olt__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "left" defined at system.ads:75, created in Gnat2Why.Decls.Translate_Constant *)
module System__Ole__left
 use import "_gnatprove_standard".Main
 use        System__address
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function left 
   :System__address.address

end

(* Module giving an empty axiom for the entity "left" defined at system.ads:75, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__Ole__left__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "right" defined at system.ads:75, created in Gnat2Why.Decls.Translate_Constant *)
module System__Ole__right
 use import "_gnatprove_standard".Main
 use        System__address
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function right 
   :System__address.address

end

(* Module giving an empty axiom for the entity "right" defined at system.ads:75, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__Ole__right__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "Ole" defined at system.ads:75, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__Ole
 use import "_gnatprove_standard".Main
 use        System__address
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function ole 
   (left : System__address.address) (right : System__address.address)  :bool
 
 val ole 
   (left : System__address.address) (right : System__address.address)  :bool
  requires { true }
  ensures { ( result = (ole left right) ) }


end

(* Module giving an empty axiom for the entity "Ole" defined at system.ads:75, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__Ole__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "left" defined at system.ads:76, created in Gnat2Why.Decls.Translate_Constant *)
module System__Ogt__left
 use import "_gnatprove_standard".Main
 use        System__address
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function left 
   :System__address.address

end

(* Module giving an empty axiom for the entity "left" defined at system.ads:76, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__Ogt__left__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "right" defined at system.ads:76, created in Gnat2Why.Decls.Translate_Constant *)
module System__Ogt__right
 use import "_gnatprove_standard".Main
 use        System__address
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function right 
   :System__address.address

end

(* Module giving an empty axiom for the entity "right" defined at system.ads:76, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__Ogt__right__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "Ogt" defined at system.ads:76, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__Ogt
 use import "_gnatprove_standard".Main
 use        System__address
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function ogt 
   (left : System__address.address) (right : System__address.address)  :bool
 
 val ogt 
   (left : System__address.address) (right : System__address.address)  :bool
  requires { true }
  ensures { ( result = (ogt left right) ) }


end

(* Module giving an empty axiom for the entity "Ogt" defined at system.ads:76, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__Ogt__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "left" defined at system.ads:77, created in Gnat2Why.Decls.Translate_Constant *)
module System__Oge__left
 use import "_gnatprove_standard".Main
 use        System__address
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function left 
   :System__address.address

end

(* Module giving an empty axiom for the entity "left" defined at system.ads:77, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__Oge__left__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "right" defined at system.ads:77, created in Gnat2Why.Decls.Translate_Constant *)
module System__Oge__right
 use import "_gnatprove_standard".Main
 use        System__address
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function right 
   :System__address.address

end

(* Module giving an empty axiom for the entity "right" defined at system.ads:77, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__Oge__right__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "Oge" defined at system.ads:77, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__Oge
 use import "_gnatprove_standard".Main
 use        System__address
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function oge 
   (left : System__address.address) (right : System__address.address)  :bool
 
 val oge 
   (left : System__address.address) (right : System__address.address)  :bool
  requires { true }
  ensures { ( result = (oge left right) ) }


end

(* Module giving an empty axiom for the entity "Oge" defined at system.ads:77, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__Oge__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "left" defined at system.ads:78, created in Gnat2Why.Decls.Translate_Constant *)
module System__Oeq__left
 use import "_gnatprove_standard".Main
 use        System__address
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function left 
   :System__address.address

end

(* Module giving an empty axiom for the entity "left" defined at system.ads:78, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__Oeq__left__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "right" defined at system.ads:78, created in Gnat2Why.Decls.Translate_Constant *)
module System__Oeq__right
 use import "_gnatprove_standard".Main
 use        System__address
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function right 
   :System__address.address

end

(* Module giving an empty axiom for the entity "right" defined at system.ads:78, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__Oeq__right__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "Oeq" defined at system.ads:78, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__Oeq
 use import "_gnatprove_standard".Main
 use        System__address
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function oeq 
   (left : System__address.address) (right : System__address.address)  :bool
 
 val oeq 
   (left : System__address.address) (right : System__address.address)  :bool
  requires { true }
  ensures { ( result = (oeq left right) ) }


end

(* Module giving an empty axiom for the entity "Oeq" defined at system.ads:78, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__Oeq__axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "bit_order" defined at system.ads:88, created in Gnat2Why.Types.Translate_Type *)
module System__bit_order
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int

 type bit_order "bounded_type" 
 
 function first 
   :int =
  0
 
 function last 
   :int =
  1
 
 predicate in_range
   (x : int)  =
  ( ( first <= x ) /\ ( x <= last ) )
 
 clone export "ada__model".Static_Discrete with
 type t = bit_order, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for defining the constant "default_bit_order" defined at system.ads:89, created in Gnat2Why.Decls.Translate_Constant *)
module System__default_bit_order
 use import "_gnatprove_standard".Main
 use        System__bit_order
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function default_bit_order 
   :System__bit_order.bit_order

end

(* Module for defining the constant "max_priority" defined at system.ads:102, created in Gnat2Why.Decls.Translate_Constant *)
module System__max_priority
 use import "_gnatprove_standard".Main
 use        Standard__positive
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function max_priority 
   :Standard__positive.positive

end

(* Module for defining the constant "max_interrupt_priority" defined at system.ads:103, created in Gnat2Why.Decls.Translate_Constant *)
module System__max_interrupt_priority
 use import "_gnatprove_standard".Main
 use        Standard__positive
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function max_interrupt_priority 
   :Standard__positive.positive

end

(* Module for axiomatizing type "any_priority" defined at system.ads:105, created in Gnat2Why.Types.Translate_Type *)
module System__any_priority
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int

 type any_priority "bounded_type" 
 
 function first 
   :int =
  0
 
 function last 
   :int =
  98
 
 predicate in_range
   (x : int)  =
  ( ( first <= x ) /\ ( x <= last ) )
 
 clone export "ada__model".Static_Discrete with
 type t = any_priority, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "priority" defined at system.ads:106, created in Gnat2Why.Types.Translate_Type *)
module System__priority
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int

 type priority "bounded_type" 
 
 function first 
   :int =
  0
 
 function last 
   :int =
  97
 
 predicate in_range
   (x : int)  =
  ( ( first <= x ) /\ ( x <= last ) )
 
 clone export "ada__model".Static_Discrete with
 type t = priority, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "interrupt_priority" defined at system.ads:107, created in Gnat2Why.Types.Translate_Type *)
module System__interrupt_priority
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int

 type interrupt_priority "bounded_type" 
 
 function first 
   :int =
  98
 
 function last 
   :int =
  98
 
 predicate in_range
   (x : int)  =
  ( ( first <= x ) /\ ( x <= last ) )
 
 clone export "ada__model".Static_Discrete with
 type t = interrupt_priority, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for defining the constant "default_priority" defined at system.ads:109, created in Gnat2Why.Decls.Translate_Constant *)
module System__default_priority
 use import "_gnatprove_standard".Main
 use        System__priority
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function default_priority 
   :System__priority.priority

end

(* Module for defining the constant "backend_divide_checks" defined at system.ads:126, created in Gnat2Why.Decls.Translate_Constant *)
module System__backend_divide_checks
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Boolean

 function backend_divide_checks 
   :bool

end

(* Module for defining the constant "backend_overflow_checks" defined at system.ads:127, created in Gnat2Why.Decls.Translate_Constant *)
module System__backend_overflow_checks
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Boolean

 function backend_overflow_checks 
   :bool

end

(* Module for defining the constant "command_line_args" defined at system.ads:128, created in Gnat2Why.Decls.Translate_Constant *)
module System__command_line_args
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Boolean

 function command_line_args 
   :bool

end

(* Module for defining the constant "configurable_run_time" defined at system.ads:129, created in Gnat2Why.Decls.Translate_Constant *)
module System__configurable_run_time
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Boolean

 function configurable_run_time 
   :bool

end

(* Module for defining the constant "denorm" defined at system.ads:130, created in Gnat2Why.Decls.Translate_Constant *)
module System__denorm
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Boolean

 function denorm 
   :bool

end

(* Module for defining the constant "duration_32_bits" defined at system.ads:131, created in Gnat2Why.Decls.Translate_Constant *)
module System__duration_32_bits
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Boolean

 function duration_32_bits 
   :bool

end

(* Module for defining the constant "exit_status_supported" defined at system.ads:132, created in Gnat2Why.Decls.Translate_Constant *)
module System__exit_status_supported
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Boolean

 function exit_status_supported 
   :bool

end

(* Module for defining the constant "fractional_fixed_ops" defined at system.ads:133, created in Gnat2Why.Decls.Translate_Constant *)
module System__fractional_fixed_ops
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Boolean

 function fractional_fixed_ops 
   :bool

end

(* Module for defining the constant "frontend_layout" defined at system.ads:134, created in Gnat2Why.Decls.Translate_Constant *)
module System__frontend_layout
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Boolean

 function frontend_layout 
   :bool

end

(* Module for defining the constant "machine_overflows" defined at system.ads:135, created in Gnat2Why.Decls.Translate_Constant *)
module System__machine_overflows
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Boolean

 function machine_overflows 
   :bool

end

(* Module for defining the constant "machine_rounds" defined at system.ads:136, created in Gnat2Why.Decls.Translate_Constant *)
module System__machine_rounds
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Boolean

 function machine_rounds 
   :bool

end

(* Module for defining the constant "preallocated_stacks" defined at system.ads:137, created in Gnat2Why.Decls.Translate_Constant *)
module System__preallocated_stacks
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Boolean

 function preallocated_stacks 
   :bool

end

(* Module for defining the constant "signed_zeros" defined at system.ads:138, created in Gnat2Why.Decls.Translate_Constant *)
module System__signed_zeros
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Boolean

 function signed_zeros 
   :bool

end

(* Module for defining the constant "stack_check_default" defined at system.ads:139, created in Gnat2Why.Decls.Translate_Constant *)
module System__stack_check_default
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Boolean

 function stack_check_default 
   :bool

end

(* Module for defining the constant "stack_check_probes" defined at system.ads:140, created in Gnat2Why.Decls.Translate_Constant *)
module System__stack_check_probes
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Boolean

 function stack_check_probes 
   :bool

end

(* Module for defining the constant "stack_check_limits" defined at system.ads:141, created in Gnat2Why.Decls.Translate_Constant *)
module System__stack_check_limits
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Boolean

 function stack_check_limits 
   :bool

end

(* Module for defining the constant "support_aggregates" defined at system.ads:142, created in Gnat2Why.Decls.Translate_Constant *)
module System__support_aggregates
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Boolean

 function support_aggregates 
   :bool

end

(* Module for defining the constant "support_atomic_primitives" defined at system.ads:143, created in Gnat2Why.Decls.Translate_Constant *)
module System__support_atomic_primitives
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Boolean

 function support_atomic_primitives 
   :bool

end

(* Module for defining the constant "support_composite_assign" defined at system.ads:144, created in Gnat2Why.Decls.Translate_Constant *)
module System__support_composite_assign
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Boolean

 function support_composite_assign 
   :bool

end

(* Module for defining the constant "support_composite_compare" defined at system.ads:145, created in Gnat2Why.Decls.Translate_Constant *)
module System__support_composite_compare
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Boolean

 function support_composite_compare 
   :bool

end

(* Module for defining the constant "support_long_shifts" defined at system.ads:146, created in Gnat2Why.Decls.Translate_Constant *)
module System__support_long_shifts
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Boolean

 function support_long_shifts 
   :bool

end

(* Module for defining the constant "always_compatible_rep" defined at system.ads:147, created in Gnat2Why.Decls.Translate_Constant *)
module System__always_compatible_rep
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Boolean

 function always_compatible_rep 
   :bool

end

(* Module for defining the constant "suppress_standard_library" defined at system.ads:148, created in Gnat2Why.Decls.Translate_Constant *)
module System__suppress_standard_library
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Boolean

 function suppress_standard_library 
   :bool

end

(* Module for defining the constant "use_ada_main_program_name" defined at system.ads:149, created in Gnat2Why.Decls.Translate_Constant *)
module System__use_ada_main_program_name
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Boolean

 function use_ada_main_program_name 
   :bool

end

(* Module for defining the constant "zcx_by_default" defined at system.ads:150, created in Gnat2Why.Decls.Translate_Constant *)
module System__zcx_by_default
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Boolean

 function zcx_by_default 
   :bool

end

(* Module for axiomatizing type "Ttask_storage_sizeB" defined at s-parame.ads:58, created in Gnat2Why.Types.Translate_Type *)
module System__parameters__Ttask_storage_sizeB
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int

 type ttask_storage_sizeB "bounded_type" 
 
 function first 
   :int =
  ( -2147483648 )
 
 function last 
   :int =
  2147483647
 
 predicate in_range
   (x : int)  =
  ( ( first <= x ) /\ ( x <= last ) )
 
 clone export "ada__model".Static_Discrete with
 type t = ttask_storage_sizeB, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "task_storage_size" defined at s-parame.ads:58, created in Gnat2Why.Types.Translate_Type *)
module System__parameters__task_storage_size
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int

 type task_storage_size "bounded_type" 
 
 function first 
   :int =
  ( -2147483648 )
 
 function last 
   :int =
  2147483647
 
 predicate in_range
   (x : int)  =
  ( ( first <= x ) /\ ( x <= last ) )
 
 clone export "ada__model".Static_Discrete with
 type t = task_storage_size, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "Tsize_typeB" defined at s-parame.ads:61, created in Gnat2Why.Types.Translate_Type *)
module System__parameters__Tsize_typeB
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int

 type tsize_typeB "bounded_type" 
 
 function first 
   :int =
  ( -2147483648 )
 
 function last 
   :int =
  2147483647
 
 predicate in_range
   (x : int)  =
  ( ( first <= x ) /\ ( x <= last ) )
 
 clone export "ada__model".Static_Discrete with
 type t = tsize_typeB, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "size_type" defined at s-parame.ads:61, created in Gnat2Why.Types.Translate_Type *)
module System__parameters__size_type
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int

 type size_type "bounded_type" 
 
 function first 
   :int =
  ( -2147483648 )
 
 function last 
   :int =
  2147483647
 
 predicate in_range
   (x : int)  =
  ( ( first <= x ) /\ ( x <= last ) )
 
 clone export "ada__model".Static_Discrete with
 type t = size_type, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for defining the constant "unspecified_size" defined at s-parame.ads:64, created in Gnat2Why.Decls.Translate_Constant *)
module System__parameters__unspecified_size
 use import "_gnatprove_standard".Main
 use        System__parameters__size_type
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function unspecified_size 
   :System__parameters__size_type.size_type

end

(* Module for axiomatizing type "percentage" defined at s-parame.ads:67, created in Gnat2Why.Types.Translate_Type *)
module System__parameters__percentage
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int

 type percentage "bounded_type" 
 
 function first 
   :int =
  ( -1 )
 
 function last 
   :int =
  100
 
 predicate in_range
   (x : int)  =
  ( ( first <= x ) /\ ( x <= last ) )
 
 clone export "ada__model".Static_Discrete with
 type t = percentage, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for defining the constant "dynamic" defined at s-parame.ads:68, created in Gnat2Why.Decls.Translate_Constant *)
module System__parameters__dynamic
 use import "_gnatprove_standard".Main
 use        System__parameters__size_type
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function dynamic 
   :System__parameters__size_type.size_type

end

(* Module for defining the constant "sec_stack_percentage" defined at s-parame.ads:75, created in Gnat2Why.Decls.Translate_Constant *)
module System__parameters__sec_stack_percentage
 use import "_gnatprove_standard".Main
 use        System__parameters__percentage
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function sec_stack_percentage 
   :System__parameters__percentage.percentage

end

(* Module for defining the constant "sec_stack_dynamic" defined at s-parame.ads:78, created in Gnat2Why.Decls.Translate_Constant *)
module System__parameters__sec_stack_dynamic
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Boolean

 function sec_stack_dynamic 
   :bool

end

(* Module for declaring a program function (and possibly a logic function) for "default_stack_size" defined at s-parame.ads:81, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__parameters__default_stack_size
 use import "_gnatprove_standard".Main
 use        System__parameters__size_type
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function default_stack_size 
   (__void_param : unit)  :System__parameters__size_type.size_type
 
 val default_stack_size 
   (__void_param : unit)  :System__parameters__size_type.size_type
  requires { true }
  ensures { ( result = (default_stack_size ()) ) }


end

(* Module giving an empty axiom for the entity "default_stack_size" defined at s-parame.ads:81, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__parameters__default_stack_size__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "minimum_stack_size" defined at s-parame.ads:84, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__parameters__minimum_stack_size
 use import "_gnatprove_standard".Main
 use        System__parameters__size_type
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function minimum_stack_size 
   (__void_param : unit)  :System__parameters__size_type.size_type
 
 val minimum_stack_size 
   (__void_param : unit)  :System__parameters__size_type.size_type
  requires { true }
  ensures { ( result = (minimum_stack_size ()) ) }


end

(* Module giving an empty axiom for the entity "minimum_stack_size" defined at s-parame.ads:84, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__parameters__minimum_stack_size__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "size" defined at s-parame.ads:87, created in Gnat2Why.Decls.Translate_Constant *)
module System__parameters__adjust_storage_size__size
 use import "_gnatprove_standard".Main
 use        System__parameters__size_type
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function size 
   :System__parameters__size_type.size_type

end

(* Module giving an empty axiom for the entity "size" defined at s-parame.ads:87, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__parameters__adjust_storage_size__size__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "adjust_storage_size" defined at s-parame.ads:87, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__parameters__adjust_storage_size
 use import "_gnatprove_standard".Main
 use        System__parameters__size_type
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function adjust_storage_size 
   (size : int)  :System__parameters__size_type.size_type
 
 val adjust_storage_size 
   (size : int)  :System__parameters__size_type.size_type
  requires { true }
  ensures { ( result = (adjust_storage_size size) ) }


end

(* Module giving an empty axiom for the entity "adjust_storage_size" defined at s-parame.ads:87, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__parameters__adjust_storage_size__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "default_env_stack_size" defined at s-parame.ads:96, created in Gnat2Why.Decls.Translate_Constant *)
module System__parameters__default_env_stack_size
 use import "_gnatprove_standard".Main
 use        System__parameters__size_type
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function default_env_stack_size 
   :System__parameters__size_type.size_type

end

(* Module for defining the constant "stack_grows_down" defined at s-parame.ads:101, created in Gnat2Why.Decls.Translate_Constant *)
module System__parameters__stack_grows_down
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Boolean

 function stack_grows_down 
   :bool

end

(* Module for axiomatizing type "c_address" defined at s-parame.ads:116, created in Gnat2Why.Types.Translate_Type *)
module System__parameters__c_address
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int

 type c_address "bounded_type" 
 
 function first 
   :int =
  0
 
 function last 
   :int =
  4294967295
 
 function attr__ATTRIBUTE_MODULUS 
   :int =
  0
 
 predicate in_range
   (x : int)  =
  ( ( first <= x ) /\ ( x <= last ) )
 
 clone export "ada__model".Static_Modular with
 type t = c_address, 
 function first = first, 
 function last = last, 
 function attr__ATTRIBUTE_MODULUS = attr__ATTRIBUTE_MODULUS, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "T1s" defined at s-parame.ads:121, created in Gnat2Why.Types.Translate_Type *)
module System__parameters__T1s
 use import "_gnatprove_standard".Main
 use        Standard__character
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Array__1

 function first 
   :int =
  1
 
 function last 
   :int =
  13
 
 clone export "ada__model".Constr_Array with
 type component_type = Standard__character.character, 
 function first = first, 
 function last = last
 
 type t1s  = 
  __t
 
 clone export "ada__model".Array_Comparison_Axiom with
 type component_type = Standard__character.character, 
 function to_int = Standard__character.to_int

end

(* Module for defining the constant "c_malloc_linkname" defined at s-parame.ads:121, created in Gnat2Why.Decls.Translate_Constant *)
module System__parameters__c_malloc_linkname
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Array__1

 function c_malloc_linkname 
   :Standard__string.string

end

(* Module for defining a value for string literal  defined at s-parame.ads:121, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___main_0
 use import "_gnatprove_standard".Main
 use        System__parameters__T1s
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Array__1

 function temp___main_0 
   :System__parameters__T1s.t1s

end

(* Module for defining the constant "garbage_collected" defined at s-parame.ads:144, created in Gnat2Why.Decls.Translate_Constant *)
module System__parameters__garbage_collected
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Boolean

 function garbage_collected 
   :bool

end

(* Module for defining the constant "single_lock" defined at s-parame.ads:159, created in Gnat2Why.Decls.Translate_Constant *)
module System__parameters__single_lock
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Boolean

 function single_lock 
   :bool

end

(* Module for defining the constant "no_abort" defined at s-parame.ads:172, created in Gnat2Why.Decls.Translate_Constant *)
module System__parameters__no_abort
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Boolean

 function no_abort 
   :bool

end

(* Module for defining the constant "runtime_traces" defined at s-parame.ads:193, created in Gnat2Why.Decls.Translate_Constant *)
module System__parameters__runtime_traces
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Boolean

 function runtime_traces 
   :bool

end

(* Module for axiomatizing type "chars" defined at s-crtl.ads:41, created in Gnat2Why.Types.Translate_Type *)
module System__crtl__chars
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int

 type chars "bounded_type" 
 
 function first 
   :int =
  0
 
 function last 
   :int =
  4294967295
 
 function attr__ATTRIBUTE_MODULUS 
   :int =
  0
 
 predicate in_range
   (x : int)  =
  ( ( first <= x ) /\ ( x <= last ) )
 
 clone export "ada__model".Static_Modular with
 type t = chars, 
 function first = first, 
 function last = last, 
 function attr__ATTRIBUTE_MODULUS = attr__ATTRIBUTE_MODULUS, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "dirs" defined at s-crtl.ads:47, created in Gnat2Why.Types.Translate_Type *)
module System__crtl__dirs
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int

 type dirs "bounded_type" 
 
 function first 
   :int =
  0
 
 function last 
   :int =
  4294967295
 
 function attr__ATTRIBUTE_MODULUS 
   :int =
  0
 
 predicate in_range
   (x : int)  =
  ( ( first <= x ) /\ ( x <= last ) )
 
 clone export "ada__model".Static_Modular with
 type t = dirs, 
 function first = first, 
 function last = last, 
 function attr__ATTRIBUTE_MODULUS = attr__ATTRIBUTE_MODULUS, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "files" defined at s-crtl.ads:50, created in Gnat2Why.Types.Translate_Type *)
module System__crtl__files
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int

 type files "bounded_type" 
 
 function first 
   :int =
  0
 
 function last 
   :int =
  4294967295
 
 function attr__ATTRIBUTE_MODULUS 
   :int =
  0
 
 predicate in_range
   (x : int)  =
  ( ( first <= x ) /\ ( x <= last ) )
 
 clone export "ada__model".Static_Modular with
 type t = files, 
 function first = first, 
 function last = last, 
 function attr__ATTRIBUTE_MODULUS = attr__ATTRIBUTE_MODULUS, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "int" defined at s-crtl.ads:53, created in Gnat2Why.Types.Translate_Type *)
module System__crtl__int
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int

 type int__ "bounded_type" 
 
 function first 
   :int =
  ( -2147483648 )
 
 function last 
   :int =
  2147483647
 
 predicate in_range
   (x : int)  =
  ( ( first <= x ) /\ ( x <= last ) )
 
 clone export "ada__model".Static_Discrete with
 type t = int__, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "TlongB" defined at s-crtl.ads:55, created in Gnat2Why.Types.Translate_Type *)
module System__crtl__TlongB
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int

 type tlongB "bounded_type" 
 
 function first 
   :int =
  ( -2147483648 )
 
 function last 
   :int =
  2147483647
 
 predicate in_range
   (x : int)  =
  ( ( first <= x ) /\ ( x <= last ) )
 
 clone export "ada__model".Static_Discrete with
 type t = tlongB, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "long" defined at s-crtl.ads:55, created in Gnat2Why.Types.Translate_Type *)
module System__crtl__long
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int

 type long "bounded_type" 
 
 function first 
   :int =
  ( -2147483648 )
 
 function last 
   :int =
  2147483647
 
 predicate in_range
   (x : int)  =
  ( ( first <= x ) /\ ( x <= last ) )
 
 clone export "ada__model".Static_Discrete with
 type t = long, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "off_t" defined at s-crtl.ads:58, created in Gnat2Why.Types.Translate_Type *)
module System__crtl__off_t
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int

 type off_t "bounded_type" 
 
 function first 
   :int =
  ( -2147483648 )
 
 function last 
   :int =
  2147483647
 
 predicate in_range
   (x : int)  =
  ( ( first <= x ) /\ ( x <= last ) )
 
 clone export "ada__model".Static_Discrete with
 type t = off_t, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "size_t" defined at s-crtl.ads:60, created in Gnat2Why.Types.Translate_Type *)
module System__crtl__size_t
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int

 type size_t "bounded_type" 
 
 function first 
   :int =
  0
 
 function last 
   :int =
  4294967295
 
 function attr__ATTRIBUTE_MODULUS 
   :int =
  4294967296
 
 predicate in_range
   (x : int)  =
  ( ( first <= x ) /\ ( x <= last ) )
 
 clone export "ada__model".Static_Modular with
 type t = size_t, 
 function first = first, 
 function last = last, 
 function attr__ATTRIBUTE_MODULUS = attr__ATTRIBUTE_MODULUS, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "Tssize_tB" defined at s-crtl.ads:62, created in Gnat2Why.Types.Translate_Type *)
module System__crtl__Tssize_tB
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int

 type tssize_tB "bounded_type" 
 
 function first 
   :int =
  ( -2147483648 )
 
 function last 
   :int =
  2147483647
 
 predicate in_range
   (x : int)  =
  ( ( first <= x ) /\ ( x <= last ) )
 
 clone export "ada__model".Static_Discrete with
 type t = tssize_tB, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "ssize_t" defined at s-crtl.ads:62, created in Gnat2Why.Types.Translate_Type *)
module System__crtl__ssize_t
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int

 type ssize_t "bounded_type" 
 
 function first 
   :int =
  ( -2147483648 )
 
 function last 
   :int =
  2147483647
 
 predicate in_range
   (x : int)  =
  ( ( first <= x ) /\ ( x <= last ) )
 
 clone export "ada__model".Static_Discrete with
 type t = ssize_t, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "filename_encoding" defined at s-crtl.ads:65, created in Gnat2Why.Types.Translate_Type *)
module System__crtl__filename_encoding
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int

 type filename_encoding "bounded_type" 
 
 function first 
   :int =
  0
 
 function last 
   :int =
  2
 
 predicate in_range
   (x : int)  =
  ( ( first <= x ) /\ ( x <= last ) )
 
 clone export "ada__model".Static_Discrete with
 type t = filename_encoding, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for defining the constant "a" defined at s-crtl.ads:78, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__strlen__a
 use import "_gnatprove_standard".Main
 use        System__address
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function a 
   :System__address.address

end

(* Module giving an empty axiom for the entity "a" defined at s-crtl.ads:78, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__strlen__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "strlen" defined at s-crtl.ads:78, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__strlen
 use import "_gnatprove_standard".Main
 use        System__address
 use        System__crtl__size_t
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function strlen 
   (a : System__address.address)  :System__crtl__size_t.size_t
 
 val strlen 
   (a : System__address.address)  :System__crtl__size_t.size_t
  requires { true }
  ensures { ( result = (strlen a) ) }


end

(* Module giving an empty axiom for the entity "strlen" defined at s-crtl.ads:78, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__strlen__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "dest" defined at s-crtl.ads:81, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__strncpy__dest
 use import "_gnatprove_standard".Main
 use        System__address
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function dest 
   :System__address.address

end

(* Module giving an empty axiom for the entity "dest" defined at s-crtl.ads:81, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__strncpy__dest__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "src" defined at s-crtl.ads:81, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__strncpy__src
 use import "_gnatprove_standard".Main
 use        System__address
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function src 
   :System__address.address

end

(* Module giving an empty axiom for the entity "src" defined at s-crtl.ads:81, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__strncpy__src__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "n" defined at s-crtl.ads:81, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__strncpy__n
 use import "_gnatprove_standard".Main
 use        System__crtl__size_t
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function n 
   :System__crtl__size_t.size_t

end

(* Module giving an empty axiom for the entity "n" defined at s-crtl.ads:81, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__strncpy__n__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "a" defined at s-crtl.ads:88, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__atoi__a
 use import "_gnatprove_standard".Main
 use        System__address
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function a 
   :System__address.address

end

(* Module giving an empty axiom for the entity "a" defined at s-crtl.ads:88, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__atoi__a__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "atoi" defined at s-crtl.ads:88, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__atoi
 use import "_gnatprove_standard".Main
 use        Standard__integer
 use        System__address
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function atoi 
   (a : System__address.address)  :Standard__integer.integer
 
 val atoi 
   (a : System__address.address)  :Standard__integer.integer
  requires { true }
  ensures { ( result = (atoi a) ) }


end

(* Module giving an empty axiom for the entity "atoi" defined at s-crtl.ads:88, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__atoi__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "stream" defined at s-crtl.ads:91, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__clearerr__stream
 use import "_gnatprove_standard".Main
 use        System__crtl__files
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function stream 
   :System__crtl__files.files

end

(* Module giving an empty axiom for the entity "stream" defined at s-crtl.ads:91, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__clearerr__stream__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "handle" defined at s-crtl.ads:94, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__dup__handle
 use import "_gnatprove_standard".Main
 use        System__crtl__int
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function handle 
   :System__crtl__int.int__

end

(* Module giving an empty axiom for the entity "handle" defined at s-crtl.ads:94, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__dup__handle__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "dup" defined at s-crtl.ads:94, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__dup
 use import "_gnatprove_standard".Main
 use        System__crtl__int
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function dup 
   (handle : int)  :System__crtl__int.int__
 
 val dup 
   (handle : int)  :System__crtl__int.int__
  requires { true }
  ensures { ( result = (dup handle) ) }


end

(* Module giving an empty axiom for the entity "dup" defined at s-crtl.ads:94, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__dup__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "from" defined at s-crtl.ads:97, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__dup2__from
 use import "_gnatprove_standard".Main
 use        System__crtl__int
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function from 
   :System__crtl__int.int__

end

(* Module giving an empty axiom for the entity "from" defined at s-crtl.ads:97, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__dup2__from__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "to" defined at s-crtl.ads:97, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__dup2__to
 use import "_gnatprove_standard".Main
 use        System__crtl__int
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function to__ 
   :System__crtl__int.int__

end

(* Module giving an empty axiom for the entity "to" defined at s-crtl.ads:97, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__dup2__to__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "dup2" defined at s-crtl.ads:97, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__dup2
 use import "_gnatprove_standard".Main
 use        System__crtl__int
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function dup2 
   (from : int) (to__ : int)  :System__crtl__int.int__
 
 val dup2 
   (from : int) (to__ : int)  :System__crtl__int.int__
  requires { true }
  ensures { ( result = (dup2 from to__) ) }


end

(* Module giving an empty axiom for the entity "dup2" defined at s-crtl.ads:97, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__dup2__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "stream" defined at s-crtl.ads:100, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__fclose__stream
 use import "_gnatprove_standard".Main
 use        System__crtl__files
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function stream 
   :System__crtl__files.files

end

(* Module giving an empty axiom for the entity "stream" defined at s-crtl.ads:100, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__fclose__stream__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "fclose" defined at s-crtl.ads:100, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__fclose
 use import "_gnatprove_standard".Main
 use        System__crtl__int
 use        System__crtl__files
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function fclose 
   (stream : System__crtl__files.files)  :System__crtl__int.int__
 
 val fclose 
   (stream : System__crtl__files.files)  :System__crtl__int.int__
  requires { true }
  ensures { ( result = (fclose stream) ) }


end

(* Module giving an empty axiom for the entity "fclose" defined at s-crtl.ads:100, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__fclose__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "handle" defined at s-crtl.ads:103, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__fdopen__handle
 use import "_gnatprove_standard".Main
 use        System__crtl__int
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function handle 
   :System__crtl__int.int__

end

(* Module giving an empty axiom for the entity "handle" defined at s-crtl.ads:103, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__fdopen__handle__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "mode" defined at s-crtl.ads:103, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__fdopen__mode
 use import "_gnatprove_standard".Main
 use        System__crtl__chars
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function mode 
   :System__crtl__chars.chars

end

(* Module giving an empty axiom for the entity "mode" defined at s-crtl.ads:103, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__fdopen__mode__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "fdopen" defined at s-crtl.ads:103, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__fdopen
 use import "_gnatprove_standard".Main
 use        System__crtl__chars
 use        System__crtl__files
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function fdopen 
   (handle : int) (mode : System__crtl__chars.chars)  :System__crtl__files.files
 
 val fdopen 
   (handle : int) (mode : System__crtl__chars.chars)  :System__crtl__files.files
  requires { true }
  ensures { ( result = (fdopen handle mode) ) }


end

(* Module giving an empty axiom for the entity "fdopen" defined at s-crtl.ads:103, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__fdopen__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "stream" defined at s-crtl.ads:106, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__fflush__stream
 use import "_gnatprove_standard".Main
 use        System__crtl__files
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function stream 
   :System__crtl__files.files

end

(* Module giving an empty axiom for the entity "stream" defined at s-crtl.ads:106, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__fflush__stream__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "fflush" defined at s-crtl.ads:106, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__fflush
 use import "_gnatprove_standard".Main
 use        System__crtl__int
 use        System__crtl__files
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function fflush 
   (stream : System__crtl__files.files)  :System__crtl__int.int__
 
 val fflush 
   (stream : System__crtl__files.files)  :System__crtl__int.int__
  requires { true }
  ensures { ( result = (fflush stream) ) }


end

(* Module giving an empty axiom for the entity "fflush" defined at s-crtl.ads:106, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__fflush__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "stream" defined at s-crtl.ads:109, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__fgetc__stream
 use import "_gnatprove_standard".Main
 use        System__crtl__files
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function stream 
   :System__crtl__files.files

end

(* Module giving an empty axiom for the entity "stream" defined at s-crtl.ads:109, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__fgetc__stream__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "fgetc" defined at s-crtl.ads:109, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__fgetc
 use import "_gnatprove_standard".Main
 use        System__crtl__int
 use        System__crtl__files
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function fgetc 
   (stream : System__crtl__files.files)  :System__crtl__int.int__
 
 val fgetc 
   (stream : System__crtl__files.files)  :System__crtl__int.int__
  requires { true }
  ensures { ( result = (fgetc stream) ) }


end

(* Module giving an empty axiom for the entity "fgetc" defined at s-crtl.ads:109, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__fgetc__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "strng" defined at s-crtl.ads:112, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__fgets__strng
 use import "_gnatprove_standard".Main
 use        System__crtl__chars
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function strng 
   :System__crtl__chars.chars

end

(* Module giving an empty axiom for the entity "strng" defined at s-crtl.ads:112, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__fgets__strng__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "n" defined at s-crtl.ads:112, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__fgets__n
 use import "_gnatprove_standard".Main
 use        System__crtl__int
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function n 
   :System__crtl__int.int__

end

(* Module giving an empty axiom for the entity "n" defined at s-crtl.ads:112, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__fgets__n__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "stream" defined at s-crtl.ads:112, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__fgets__stream
 use import "_gnatprove_standard".Main
 use        System__crtl__files
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function stream 
   :System__crtl__files.files

end

(* Module giving an empty axiom for the entity "stream" defined at s-crtl.ads:112, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__fgets__stream__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "fgets" defined at s-crtl.ads:112, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__fgets
 use import "_gnatprove_standard".Main
 use        System__crtl__chars
 use        System__crtl__files
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function fgets 
   (strng : System__crtl__chars.chars) (n : int) (stream : System__crtl__files.files)  :System__crtl__chars.chars
 
 val fgets 
   (strng : System__crtl__chars.chars) (n : int) (stream : System__crtl__files.files)  :System__crtl__chars.chars
  requires { true }
  ensures { ( result = (fgets strng n stream) ) }


end

(* Module giving an empty axiom for the entity "fgets" defined at s-crtl.ads:112, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__fgets__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "filename" defined at s-crtl.ads:116, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__fopen__filename
 use import "_gnatprove_standard".Main
 use        System__crtl__chars
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function filename 
   :System__crtl__chars.chars

end

(* Module giving an empty axiom for the entity "filename" defined at s-crtl.ads:116, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__fopen__filename__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "mode" defined at s-crtl.ads:117, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__fopen__mode
 use import "_gnatprove_standard".Main
 use        System__crtl__chars
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function mode 
   :System__crtl__chars.chars

end

(* Module giving an empty axiom for the entity "mode" defined at s-crtl.ads:117, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__fopen__mode__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "encoding" defined at s-crtl.ads:118, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__fopen__encoding
 use import "_gnatprove_standard".Main
 use        System__crtl__filename_encoding
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function encoding 
   :System__crtl__filename_encoding.filename_encoding

end

(* Module giving an empty axiom for the entity "encoding" defined at s-crtl.ads:118, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__fopen__encoding__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "vms_form" defined at s-crtl.ads:119, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__fopen__vms_form
 use import "_gnatprove_standard".Main
 use        System__crtl__chars
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function vms_form 
   :System__crtl__chars.chars

end

(* Module giving an empty axiom for the entity "vms_form" defined at s-crtl.ads:119, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__fopen__vms_form__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "fopen" defined at s-crtl.ads:115, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__fopen
 use import "_gnatprove_standard".Main
 use        System__crtl__chars
 use        System__crtl__files
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function fopen 
   (filename : System__crtl__chars.chars) (mode : System__crtl__chars.chars) (encoding : int) (vms_form : System__crtl__chars.chars)  :System__crtl__files.files
 
 val fopen 
   (filename : System__crtl__chars.chars) (mode : System__crtl__chars.chars) (encoding : int) (vms_form : System__crtl__chars.chars)  :System__crtl__files.files
  requires { true }
  ensures { ( result = (fopen filename mode encoding vms_form) ) }


end

(* Module giving an empty axiom for the entity "fopen" defined at s-crtl.ads:115, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__fopen__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "c" defined at s-crtl.ads:122, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__fputc__c
 use import "_gnatprove_standard".Main
 use        System__crtl__int
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function c 
   :System__crtl__int.int__

end

(* Module giving an empty axiom for the entity "c" defined at s-crtl.ads:122, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__fputc__c__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "stream" defined at s-crtl.ads:122, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__fputc__stream
 use import "_gnatprove_standard".Main
 use        System__crtl__files
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function stream 
   :System__crtl__files.files

end

(* Module giving an empty axiom for the entity "stream" defined at s-crtl.ads:122, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__fputc__stream__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "fputc" defined at s-crtl.ads:122, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__fputc
 use import "_gnatprove_standard".Main
 use        System__crtl__int
 use        System__crtl__files
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function fputc 
   (c : int) (stream : System__crtl__files.files)  :System__crtl__int.int__
 
 val fputc 
   (c : int) (stream : System__crtl__files.files)  :System__crtl__int.int__
  requires { true }
  ensures { ( result = (fputc c stream) ) }


end

(* Module giving an empty axiom for the entity "fputc" defined at s-crtl.ads:122, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__fputc__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "c" defined at s-crtl.ads:125, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__fputwc__c
 use import "_gnatprove_standard".Main
 use        System__crtl__int
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function c 
   :System__crtl__int.int__

end

(* Module giving an empty axiom for the entity "c" defined at s-crtl.ads:125, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__fputwc__c__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "stream" defined at s-crtl.ads:125, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__fputwc__stream
 use import "_gnatprove_standard".Main
 use        System__crtl__files
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function stream 
   :System__crtl__files.files

end

(* Module giving an empty axiom for the entity "stream" defined at s-crtl.ads:125, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__fputwc__stream__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "fputwc" defined at s-crtl.ads:125, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__fputwc
 use import "_gnatprove_standard".Main
 use        System__crtl__int
 use        System__crtl__files
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function fputwc 
   (c : int) (stream : System__crtl__files.files)  :System__crtl__int.int__
 
 val fputwc 
   (c : int) (stream : System__crtl__files.files)  :System__crtl__int.int__
  requires { true }
  ensures { ( result = (fputwc c stream) ) }


end

(* Module giving an empty axiom for the entity "fputwc" defined at s-crtl.ads:125, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__fputwc__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "strng" defined at s-crtl.ads:128, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__fputs__strng
 use import "_gnatprove_standard".Main
 use        System__crtl__chars
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function strng 
   :System__crtl__chars.chars

end

(* Module giving an empty axiom for the entity "strng" defined at s-crtl.ads:128, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__fputs__strng__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "stream" defined at s-crtl.ads:128, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__fputs__stream
 use import "_gnatprove_standard".Main
 use        System__crtl__files
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function stream 
   :System__crtl__files.files

end

(* Module giving an empty axiom for the entity "stream" defined at s-crtl.ads:128, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__fputs__stream__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "fputs" defined at s-crtl.ads:128, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__fputs
 use import "_gnatprove_standard".Main
 use        System__crtl__int
 use        System__crtl__chars
 use        System__crtl__files
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function fputs 
   (strng : System__crtl__chars.chars) (stream : System__crtl__files.files)  :System__crtl__int.int__
 
 val fputs 
   (strng : System__crtl__chars.chars) (stream : System__crtl__files.files)  :System__crtl__int.int__
  requires { true }
  ensures { ( result = (fputs strng stream) ) }


end

(* Module giving an empty axiom for the entity "fputs" defined at s-crtl.ads:128, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__fputs__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "ptr" defined at s-crtl.ads:131, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__free__ptr
 use import "_gnatprove_standard".Main
 use        System__address
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function ptr 
   :System__address.address

end

(* Module giving an empty axiom for the entity "ptr" defined at s-crtl.ads:131, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__free__ptr__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "filename" defined at s-crtl.ads:135, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__freopen__filename
 use import "_gnatprove_standard".Main
 use        System__crtl__chars
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function filename 
   :System__crtl__chars.chars

end

(* Module giving an empty axiom for the entity "filename" defined at s-crtl.ads:135, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__freopen__filename__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "mode" defined at s-crtl.ads:136, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__freopen__mode
 use import "_gnatprove_standard".Main
 use        System__crtl__chars
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function mode 
   :System__crtl__chars.chars

end

(* Module giving an empty axiom for the entity "mode" defined at s-crtl.ads:136, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__freopen__mode__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "stream" defined at s-crtl.ads:137, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__freopen__stream
 use import "_gnatprove_standard".Main
 use        System__crtl__files
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function stream 
   :System__crtl__files.files

end

(* Module giving an empty axiom for the entity "stream" defined at s-crtl.ads:137, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__freopen__stream__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "encoding" defined at s-crtl.ads:138, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__freopen__encoding
 use import "_gnatprove_standard".Main
 use        System__crtl__filename_encoding
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function encoding 
   :System__crtl__filename_encoding.filename_encoding

end

(* Module giving an empty axiom for the entity "encoding" defined at s-crtl.ads:138, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__freopen__encoding__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "vms_form" defined at s-crtl.ads:139, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__freopen__vms_form
 use import "_gnatprove_standard".Main
 use        System__crtl__chars
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function vms_form 
   :System__crtl__chars.chars

end

(* Module giving an empty axiom for the entity "vms_form" defined at s-crtl.ads:139, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__freopen__vms_form__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "freopen" defined at s-crtl.ads:134, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__freopen
 use import "_gnatprove_standard".Main
 use        System__crtl__chars
 use        System__crtl__files
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function freopen 
   (filename : System__crtl__chars.chars) (mode : System__crtl__chars.chars) (stream : System__crtl__files.files) (encoding : int) (vms_form : System__crtl__chars.chars)  :System__crtl__files.files
 
 val freopen 
   (filename : System__crtl__chars.chars) (mode : System__crtl__chars.chars) (stream : System__crtl__files.files) (encoding : int) (vms_form : System__crtl__chars.chars)  :System__crtl__files.files
  requires { true }
  ensures { ( result = (freopen filename mode stream encoding vms_form) ) }


end

(* Module giving an empty axiom for the entity "freopen" defined at s-crtl.ads:134, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__freopen__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "stream" defined at s-crtl.ads:143, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__fseek__stream
 use import "_gnatprove_standard".Main
 use        System__crtl__files
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function stream 
   :System__crtl__files.files

end

(* Module giving an empty axiom for the entity "stream" defined at s-crtl.ads:143, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__fseek__stream__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "offset" defined at s-crtl.ads:144, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__fseek__offset
 use import "_gnatprove_standard".Main
 use        System__crtl__long
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function offset 
   :System__crtl__long.long

end

(* Module giving an empty axiom for the entity "offset" defined at s-crtl.ads:144, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__fseek__offset__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "origin" defined at s-crtl.ads:145, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__fseek__origin
 use import "_gnatprove_standard".Main
 use        System__crtl__int
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function origin 
   :System__crtl__int.int__

end

(* Module giving an empty axiom for the entity "origin" defined at s-crtl.ads:145, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__fseek__origin__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "fseek" defined at s-crtl.ads:142, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__fseek
 use import "_gnatprove_standard".Main
 use        System__crtl__int
 use        System__crtl__files
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function fseek 
   (stream : System__crtl__files.files) (offset : int) (origin : int)  :System__crtl__int.int__
 
 val fseek 
   (stream : System__crtl__files.files) (offset : int) (origin : int)  :System__crtl__int.int__
  requires { true }
  ensures { ( result = (fseek stream offset origin) ) }


end

(* Module giving an empty axiom for the entity "fseek" defined at s-crtl.ads:142, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__fseek__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "stream" defined at s-crtl.ads:149, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__fseek64__stream
 use import "_gnatprove_standard".Main
 use        System__crtl__files
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function stream 
   :System__crtl__files.files

end

(* Module giving an empty axiom for the entity "stream" defined at s-crtl.ads:149, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__fseek64__stream__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "offset" defined at s-crtl.ads:150, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__fseek64__offset
 use import "_gnatprove_standard".Main
 use        System__crtl__ssize_t
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function offset 
   :System__crtl__ssize_t.ssize_t

end

(* Module giving an empty axiom for the entity "offset" defined at s-crtl.ads:150, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__fseek64__offset__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "origin" defined at s-crtl.ads:151, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__fseek64__origin
 use import "_gnatprove_standard".Main
 use        System__crtl__int
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function origin 
   :System__crtl__int.int__

end

(* Module giving an empty axiom for the entity "origin" defined at s-crtl.ads:151, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__fseek64__origin__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "fseek64" defined at s-crtl.ads:148, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__fseek64
 use import "_gnatprove_standard".Main
 use        System__crtl__int
 use        System__crtl__files
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function fseek64 
   (stream : System__crtl__files.files) (offset : int) (origin : int)  :System__crtl__int.int__
 
 val fseek64 
   (stream : System__crtl__files.files) (offset : int) (origin : int)  :System__crtl__int.int__
  requires { true }
  ensures { ( result = (fseek64 stream offset origin) ) }


end

(* Module giving an empty axiom for the entity "fseek64" defined at s-crtl.ads:148, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__fseek64__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "stream" defined at s-crtl.ads:154, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__ftell__stream
 use import "_gnatprove_standard".Main
 use        System__crtl__files
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function stream 
   :System__crtl__files.files

end

(* Module giving an empty axiom for the entity "stream" defined at s-crtl.ads:154, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__ftell__stream__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "ftell" defined at s-crtl.ads:154, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__ftell
 use import "_gnatprove_standard".Main
 use        System__crtl__long
 use        System__crtl__files
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function ftell 
   (stream : System__crtl__files.files)  :System__crtl__long.long
 
 val ftell 
   (stream : System__crtl__files.files)  :System__crtl__long.long
  requires { true }
  ensures { ( result = (ftell stream) ) }


end

(* Module giving an empty axiom for the entity "ftell" defined at s-crtl.ads:154, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__ftell__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "stream" defined at s-crtl.ads:157, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__ftell64__stream
 use import "_gnatprove_standard".Main
 use        System__crtl__files
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function stream 
   :System__crtl__files.files

end

(* Module giving an empty axiom for the entity "stream" defined at s-crtl.ads:157, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__ftell64__stream__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "ftell64" defined at s-crtl.ads:157, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__ftell64
 use import "_gnatprove_standard".Main
 use        System__crtl__ssize_t
 use        System__crtl__files
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function ftell64 
   (stream : System__crtl__files.files)  :System__crtl__ssize_t.ssize_t
 
 val ftell64 
   (stream : System__crtl__files.files)  :System__crtl__ssize_t.ssize_t
  requires { true }
  ensures { ( result = (ftell64 stream) ) }


end

(* Module giving an empty axiom for the entity "ftell64" defined at s-crtl.ads:157, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__ftell64__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "s" defined at s-crtl.ads:160, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__getenv__s
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Array__1

 function s 
   :Standard__string.string

end

(* Module giving an empty axiom for the entity "s" defined at s-crtl.ads:160, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__getenv__s__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "getenv" defined at s-crtl.ads:160, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__getenv
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        System__address
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Array__1

 function getenv 
   (s : Standard__string.string)  :System__address.address
 
 val getenv 
   (s : Standard__string.string)  :System__address.address
  requires { true }
  ensures { ( result = (getenv s) ) }


end

(* Module giving an empty axiom for the entity "getenv" defined at s-crtl.ads:160, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__getenv__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "handle" defined at s-crtl.ads:163, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__isatty__handle
 use import "_gnatprove_standard".Main
 use        System__crtl__int
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function handle 
   :System__crtl__int.int__

end

(* Module giving an empty axiom for the entity "handle" defined at s-crtl.ads:163, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__isatty__handle__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "isatty" defined at s-crtl.ads:163, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__isatty
 use import "_gnatprove_standard".Main
 use        System__crtl__int
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function isatty 
   (handle : int)  :System__crtl__int.int__
 
 val isatty 
   (handle : int)  :System__crtl__int.int__
  requires { true }
  ensures { ( result = (isatty handle) ) }


end

(* Module giving an empty axiom for the entity "isatty" defined at s-crtl.ads:163, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__isatty__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "fd" defined at s-crtl.ads:166, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__lseek__fd
 use import "_gnatprove_standard".Main
 use        System__crtl__int
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function fd 
   :System__crtl__int.int__

end

(* Module giving an empty axiom for the entity "fd" defined at s-crtl.ads:166, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__lseek__fd__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "offset" defined at s-crtl.ads:166, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__lseek__offset
 use import "_gnatprove_standard".Main
 use        System__crtl__off_t
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function offset 
   :System__crtl__off_t.off_t

end

(* Module giving an empty axiom for the entity "offset" defined at s-crtl.ads:166, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__lseek__offset__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "direction" defined at s-crtl.ads:166, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__lseek__direction
 use import "_gnatprove_standard".Main
 use        System__crtl__int
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function direction 
   :System__crtl__int.int__

end

(* Module giving an empty axiom for the entity "direction" defined at s-crtl.ads:166, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__lseek__direction__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "lseek" defined at s-crtl.ads:166, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__lseek
 use import "_gnatprove_standard".Main
 use        System__crtl__off_t
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function lseek 
   (fd : int) (offset : int) (direction : int)  :System__crtl__off_t.off_t
 
 val lseek 
   (fd : int) (offset : int) (direction : int)  :System__crtl__off_t.off_t
  requires { true }
  ensures { ( result = (lseek fd offset direction) ) }


end

(* Module giving an empty axiom for the entity "lseek" defined at s-crtl.ads:166, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__lseek__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "size" defined at s-crtl.ads:169, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__malloc__size
 use import "_gnatprove_standard".Main
 use        System__crtl__size_t
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function size 
   :System__crtl__size_t.size_t

end

(* Module giving an empty axiom for the entity "size" defined at s-crtl.ads:169, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__malloc__size__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "malloc" defined at s-crtl.ads:169, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__malloc
 use import "_gnatprove_standard".Main
 use        System__address
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function malloc 
   (size : int)  :System__address.address
 
 val malloc 
   (size : int)  :System__address.address
  requires { true }
  ensures { ( result = (malloc size) ) }


end

(* Module giving an empty axiom for the entity "malloc" defined at s-crtl.ads:169, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__malloc__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "s1" defined at s-crtl.ads:172, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__memcpy__s1
 use import "_gnatprove_standard".Main
 use        System__address
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function s1 
   :System__address.address

end

(* Module giving an empty axiom for the entity "s1" defined at s-crtl.ads:172, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__memcpy__s1__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "s2" defined at s-crtl.ads:172, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__memcpy__s2
 use import "_gnatprove_standard".Main
 use        System__address
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function s2 
   :System__address.address

end

(* Module giving an empty axiom for the entity "s2" defined at s-crtl.ads:172, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__memcpy__s2__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "n" defined at s-crtl.ads:172, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__memcpy__n
 use import "_gnatprove_standard".Main
 use        System__crtl__size_t
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function n 
   :System__crtl__size_t.size_t

end

(* Module giving an empty axiom for the entity "n" defined at s-crtl.ads:172, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__memcpy__n__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "s1" defined at s-crtl.ads:175, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__memmove__s1
 use import "_gnatprove_standard".Main
 use        System__address
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function s1 
   :System__address.address

end

(* Module giving an empty axiom for the entity "s1" defined at s-crtl.ads:175, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__memmove__s1__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "s2" defined at s-crtl.ads:175, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__memmove__s2
 use import "_gnatprove_standard".Main
 use        System__address
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function s2 
   :System__address.address

end

(* Module giving an empty axiom for the entity "s2" defined at s-crtl.ads:175, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__memmove__s2__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "n" defined at s-crtl.ads:175, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__memmove__n
 use import "_gnatprove_standard".Main
 use        System__crtl__size_t
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function n 
   :System__crtl__size_t.size_t

end

(* Module giving an empty axiom for the entity "n" defined at s-crtl.ads:175, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__memmove__n__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "template" defined at s-crtl.ads:178, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__mktemp__template
 use import "_gnatprove_standard".Main
 use        System__crtl__chars
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function template 
   :System__crtl__chars.chars

end

(* Module giving an empty axiom for the entity "template" defined at s-crtl.ads:178, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__mktemp__template__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "stream" defined at s-crtl.ads:181, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__pclose__stream
 use import "_gnatprove_standard".Main
 use        System__address
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function stream 
   :System__address.address

end

(* Module giving an empty axiom for the entity "stream" defined at s-crtl.ads:181, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__pclose__stream__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "pclose" defined at s-crtl.ads:181, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__pclose
 use import "_gnatprove_standard".Main
 use        System__address
 use        System__crtl__int
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function pclose 
   (stream : System__address.address)  :System__crtl__int.int__
 
 val pclose 
   (stream : System__address.address)  :System__crtl__int.int__
  requires { true }
  ensures { ( result = (pclose stream) ) }


end

(* Module giving an empty axiom for the entity "pclose" defined at s-crtl.ads:181, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__pclose__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "command" defined at s-crtl.ads:184, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__popen__command
 use import "_gnatprove_standard".Main
 use        System__address
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function command 
   :System__address.address

end

(* Module giving an empty axiom for the entity "command" defined at s-crtl.ads:184, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__popen__command__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "mode" defined at s-crtl.ads:184, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__popen__mode
 use import "_gnatprove_standard".Main
 use        System__address
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function mode 
   :System__address.address

end

(* Module giving an empty axiom for the entity "mode" defined at s-crtl.ads:184, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__popen__mode__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "popen" defined at s-crtl.ads:184, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__popen
 use import "_gnatprove_standard".Main
 use        System__address
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function popen 
   (command : System__address.address) (mode : System__address.address)  :System__address.address
 
 val popen 
   (command : System__address.address) (mode : System__address.address)  :System__address.address
  requires { true }
  ensures { ( result = (popen command mode) ) }


end

(* Module giving an empty axiom for the entity "popen" defined at s-crtl.ads:184, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__popen__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "ptr" defined at s-crtl.ads:188, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__realloc__ptr
 use import "_gnatprove_standard".Main
 use        System__address
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function ptr 
   :System__address.address

end

(* Module giving an empty axiom for the entity "ptr" defined at s-crtl.ads:188, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__realloc__ptr__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "size" defined at s-crtl.ads:188, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__realloc__size
 use import "_gnatprove_standard".Main
 use        System__crtl__size_t
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function size 
   :System__crtl__size_t.size_t

end

(* Module giving an empty axiom for the entity "size" defined at s-crtl.ads:188, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__realloc__size__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "realloc" defined at s-crtl.ads:187, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__realloc
 use import "_gnatprove_standard".Main
 use        System__address
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function realloc 
   (ptr : System__address.address) (size : int)  :System__address.address
 
 val realloc 
   (ptr : System__address.address) (size : int)  :System__address.address
  requires { true }
  ensures { ( result = (realloc ptr size) ) }


end

(* Module giving an empty axiom for the entity "realloc" defined at s-crtl.ads:187, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__realloc__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "stream" defined at s-crtl.ads:191, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__rewind__stream
 use import "_gnatprove_standard".Main
 use        System__crtl__files
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function stream 
   :System__crtl__files.files

end

(* Module giving an empty axiom for the entity "stream" defined at s-crtl.ads:191, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__rewind__stream__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "dir_name" defined at s-crtl.ads:194, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__rmdir__dir_name
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Array__1

 function dir_name 
   :Standard__string.string

end

(* Module giving an empty axiom for the entity "dir_name" defined at s-crtl.ads:194, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__rmdir__dir_name__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "rmdir" defined at s-crtl.ads:194, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__rmdir
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        System__crtl__int
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Array__1

 function rmdir 
   (dir_name : Standard__string.string)  :System__crtl__int.int__
 
 val rmdir 
   (dir_name : Standard__string.string)  :System__crtl__int.int__
  requires { true }
  ensures { ( result = (rmdir dir_name) ) }


end

(* Module giving an empty axiom for the entity "rmdir" defined at s-crtl.ads:194, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__rmdir__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "dir_name" defined at s-crtl.ads:197, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__chdir__dir_name
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Array__1

 function dir_name 
   :Standard__string.string

end

(* Module giving an empty axiom for the entity "dir_name" defined at s-crtl.ads:197, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__chdir__dir_name__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "chdir" defined at s-crtl.ads:197, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__chdir
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        System__crtl__int
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Array__1

 function chdir 
   (dir_name : Standard__string.string)  :System__crtl__int.int__
 
 val chdir 
   (dir_name : Standard__string.string)  :System__crtl__int.int__
  requires { true }
  ensures { ( result = (chdir dir_name) ) }


end

(* Module giving an empty axiom for the entity "chdir" defined at s-crtl.ads:197, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__chdir__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "dir_name" defined at s-crtl.ads:201, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__mkdir__dir_name
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Array__1

 function dir_name 
   :Standard__string.string

end

(* Module giving an empty axiom for the entity "dir_name" defined at s-crtl.ads:201, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__mkdir__dir_name__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "encoding" defined at s-crtl.ads:202, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__mkdir__encoding
 use import "_gnatprove_standard".Main
 use        System__crtl__filename_encoding
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function encoding 
   :System__crtl__filename_encoding.filename_encoding

end

(* Module giving an empty axiom for the entity "encoding" defined at s-crtl.ads:202, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__mkdir__encoding__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "mkdir" defined at s-crtl.ads:200, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__mkdir
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        System__crtl__int
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Array__1

 function mkdir 
   (dir_name : Standard__string.string) (encoding : int)  :System__crtl__int.int__
 
 val mkdir 
   (dir_name : Standard__string.string) (encoding : int)  :System__crtl__int.int__
  requires { true }
  ensures { ( result = (mkdir dir_name encoding) ) }


end

(* Module giving an empty axiom for the entity "mkdir" defined at s-crtl.ads:200, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__mkdir__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "stream" defined at s-crtl.ads:206, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__setvbuf__stream
 use import "_gnatprove_standard".Main
 use        System__crtl__files
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function stream 
   :System__crtl__files.files

end

(* Module giving an empty axiom for the entity "stream" defined at s-crtl.ads:206, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__setvbuf__stream__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "buffer" defined at s-crtl.ads:207, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__setvbuf__buffer
 use import "_gnatprove_standard".Main
 use        System__crtl__chars
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function buffer 
   :System__crtl__chars.chars

end

(* Module giving an empty axiom for the entity "buffer" defined at s-crtl.ads:207, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__setvbuf__buffer__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "mode" defined at s-crtl.ads:208, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__setvbuf__mode
 use import "_gnatprove_standard".Main
 use        System__crtl__int
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function mode 
   :System__crtl__int.int__

end

(* Module giving an empty axiom for the entity "mode" defined at s-crtl.ads:208, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__setvbuf__mode__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "size" defined at s-crtl.ads:209, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__setvbuf__size
 use import "_gnatprove_standard".Main
 use        System__crtl__size_t
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function size 
   :System__crtl__size_t.size_t

end

(* Module giving an empty axiom for the entity "size" defined at s-crtl.ads:209, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__setvbuf__size__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "setvbuf" defined at s-crtl.ads:205, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__setvbuf
 use import "_gnatprove_standard".Main
 use        System__crtl__int
 use        System__crtl__chars
 use        System__crtl__files
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function setvbuf 
   (stream : System__crtl__files.files) (buffer : System__crtl__chars.chars) (mode : int) (size : int)  :System__crtl__int.int__
 
 val setvbuf 
   (stream : System__crtl__files.files) (buffer : System__crtl__chars.chars) (mode : int) (size : int)  :System__crtl__int.int__
  requires { true }
  ensures { ( result = (setvbuf stream buffer mode size) ) }


end

(* Module giving an empty axiom for the entity "setvbuf" defined at s-crtl.ads:205, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__setvbuf__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "str" defined at s-crtl.ads:212, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__tmpnam__str
 use import "_gnatprove_standard".Main
 use        System__crtl__chars
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function str 
   :System__crtl__chars.chars

end

(* Module giving an empty axiom for the entity "str" defined at s-crtl.ads:212, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__tmpnam__str__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "tmpfile" defined at s-crtl.ads:215, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__tmpfile
 use import "_gnatprove_standard".Main
 use        System__crtl__files
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function tmpfile 
   (__void_param : unit)  :System__crtl__files.files
 
 val tmpfile 
   (__void_param : unit)  :System__crtl__files.files
  requires { true }
  ensures { ( result = (tmpfile ()) ) }


end

(* Module giving an empty axiom for the entity "tmpfile" defined at s-crtl.ads:215, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__tmpfile__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "c" defined at s-crtl.ads:218, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__ungetc__c
 use import "_gnatprove_standard".Main
 use        System__crtl__int
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function c 
   :System__crtl__int.int__

end

(* Module giving an empty axiom for the entity "c" defined at s-crtl.ads:218, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__ungetc__c__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "stream" defined at s-crtl.ads:218, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__ungetc__stream
 use import "_gnatprove_standard".Main
 use        System__crtl__files
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function stream 
   :System__crtl__files.files

end

(* Module giving an empty axiom for the entity "stream" defined at s-crtl.ads:218, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__ungetc__stream__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "ungetc" defined at s-crtl.ads:218, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__ungetc
 use import "_gnatprove_standard".Main
 use        System__crtl__int
 use        System__crtl__files
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function ungetc 
   (c : int) (stream : System__crtl__files.files)  :System__crtl__int.int__
 
 val ungetc 
   (c : int) (stream : System__crtl__files.files)  :System__crtl__int.int__
  requires { true }
  ensures { ( result = (ungetc c stream) ) }


end

(* Module giving an empty axiom for the entity "ungetc" defined at s-crtl.ads:218, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__ungetc__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "filename" defined at s-crtl.ads:221, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__unlink__filename
 use import "_gnatprove_standard".Main
 use        System__crtl__chars
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function filename 
   :System__crtl__chars.chars

end

(* Module giving an empty axiom for the entity "filename" defined at s-crtl.ads:221, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__unlink__filename__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "unlink" defined at s-crtl.ads:221, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__unlink
 use import "_gnatprove_standard".Main
 use        System__crtl__int
 use        System__crtl__chars
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function unlink 
   (filename : System__crtl__chars.chars)  :System__crtl__int.int__
 
 val unlink 
   (filename : System__crtl__chars.chars)  :System__crtl__int.int__
  requires { true }
  ensures { ( result = (unlink filename) ) }


end

(* Module giving an empty axiom for the entity "unlink" defined at s-crtl.ads:221, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__unlink__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "filename" defined at s-crtl.ads:224, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__open__filename
 use import "_gnatprove_standard".Main
 use        System__crtl__chars
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function filename 
   :System__crtl__chars.chars

end

(* Module giving an empty axiom for the entity "filename" defined at s-crtl.ads:224, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__open__filename__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "oflag" defined at s-crtl.ads:224, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__open__oflag
 use import "_gnatprove_standard".Main
 use        System__crtl__int
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function oflag 
   :System__crtl__int.int__

end

(* Module giving an empty axiom for the entity "oflag" defined at s-crtl.ads:224, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__open__oflag__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "open" defined at s-crtl.ads:224, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__open
 use import "_gnatprove_standard".Main
 use        System__crtl__int
 use        System__crtl__chars
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function open 
   (filename : System__crtl__chars.chars) (oflag : int)  :System__crtl__int.int__
 
 val open 
   (filename : System__crtl__chars.chars) (oflag : int)  :System__crtl__int.int__
  requires { true }
  ensures { ( result = (open filename oflag) ) }


end

(* Module giving an empty axiom for the entity "open" defined at s-crtl.ads:224, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__open__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "fd" defined at s-crtl.ads:227, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__close__fd
 use import "_gnatprove_standard".Main
 use        System__crtl__int
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function fd 
   :System__crtl__int.int__

end

(* Module giving an empty axiom for the entity "fd" defined at s-crtl.ads:227, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__close__fd__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "close" defined at s-crtl.ads:227, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__close
 use import "_gnatprove_standard".Main
 use        System__crtl__int
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function close 
   (fd : int)  :System__crtl__int.int__
 
 val close 
   (fd : int)  :System__crtl__int.int__
  requires { true }
  ensures { ( result = (close fd) ) }


end

(* Module giving an empty axiom for the entity "close" defined at s-crtl.ads:227, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__close__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "fd" defined at s-crtl.ads:230, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__read__fd
 use import "_gnatprove_standard".Main
 use        System__crtl__int
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function fd 
   :System__crtl__int.int__

end

(* Module giving an empty axiom for the entity "fd" defined at s-crtl.ads:230, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__read__fd__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "buffer" defined at s-crtl.ads:230, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__read__buffer
 use import "_gnatprove_standard".Main
 use        System__crtl__chars
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function buffer 
   :System__crtl__chars.chars

end

(* Module giving an empty axiom for the entity "buffer" defined at s-crtl.ads:230, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__read__buffer__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "count" defined at s-crtl.ads:230, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__read__count
 use import "_gnatprove_standard".Main
 use        System__crtl__size_t
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function count 
   :System__crtl__size_t.size_t

end

(* Module giving an empty axiom for the entity "count" defined at s-crtl.ads:230, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__read__count__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "read" defined at s-crtl.ads:230, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__read
 use import "_gnatprove_standard".Main
 use        System__crtl__ssize_t
 use        System__crtl__chars
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function read 
   (fd : int) (buffer : System__crtl__chars.chars) (count : int)  :System__crtl__ssize_t.ssize_t
 
 val read 
   (fd : int) (buffer : System__crtl__chars.chars) (count : int)  :System__crtl__ssize_t.ssize_t
  requires { true }
  ensures { ( result = (read fd buffer count) ) }


end

(* Module giving an empty axiom for the entity "read" defined at s-crtl.ads:230, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__read__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "fd" defined at s-crtl.ads:233, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__write__fd
 use import "_gnatprove_standard".Main
 use        System__crtl__int
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function fd 
   :System__crtl__int.int__

end

(* Module giving an empty axiom for the entity "fd" defined at s-crtl.ads:233, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__write__fd__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "buffer" defined at s-crtl.ads:233, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__write__buffer
 use import "_gnatprove_standard".Main
 use        System__crtl__chars
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function buffer 
   :System__crtl__chars.chars

end

(* Module giving an empty axiom for the entity "buffer" defined at s-crtl.ads:233, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__write__buffer__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "count" defined at s-crtl.ads:233, created in Gnat2Why.Decls.Translate_Constant *)
module System__crtl__write__count
 use import "_gnatprove_standard".Main
 use        System__crtl__size_t
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function count 
   :System__crtl__size_t.size_t

end

(* Module giving an empty axiom for the entity "count" defined at s-crtl.ads:233, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__write__count__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "write" defined at s-crtl.ads:233, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__write
 use import "_gnatprove_standard".Main
 use        System__crtl__ssize_t
 use        System__crtl__chars
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function write 
   (fd : int) (buffer : System__crtl__chars.chars) (count : int)  :System__crtl__ssize_t.ssize_t
 
 val write 
   (fd : int) (buffer : System__crtl__chars.chars) (count : int)  :System__crtl__ssize_t.ssize_t
  requires { true }
  ensures { ( result = (write fd buffer count) ) }


end

(* Module giving an empty axiom for the entity "write" defined at s-crtl.ads:233, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__write__axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "Tinteger_8B" defined at interfac.ads:45, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__Tinteger_8B
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int

 type tinteger_8B "bounded_type" 
 
 function first 
   :int =
  ( -128 )
 
 function last 
   :int =
  127
 
 predicate in_range
   (x : int)  =
  ( ( first <= x ) /\ ( x <= last ) )
 
 clone export "ada__model".Static_Discrete with
 type t = tinteger_8B, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "integer_8" defined at interfac.ads:45, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__integer_8
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int

 type integer_8 "bounded_type" 
 
 function first 
   :int =
  ( -128 )
 
 function last 
   :int =
  127
 
 predicate in_range
   (x : int)  =
  ( ( first <= x ) /\ ( x <= last ) )
 
 clone export "ada__model".Static_Discrete with
 type t = integer_8, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "Tinteger_16B" defined at interfac.ads:48, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__Tinteger_16B
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int

 type tinteger_16B "bounded_type" 
 
 function first 
   :int =
  ( -32768 )
 
 function last 
   :int =
  32767
 
 predicate in_range
   (x : int)  =
  ( ( first <= x ) /\ ( x <= last ) )
 
 clone export "ada__model".Static_Discrete with
 type t = tinteger_16B, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "integer_16" defined at interfac.ads:48, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__integer_16
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int

 type integer_16 "bounded_type" 
 
 function first 
   :int =
  ( -32768 )
 
 function last 
   :int =
  32767
 
 predicate in_range
   (x : int)  =
  ( ( first <= x ) /\ ( x <= last ) )
 
 clone export "ada__model".Static_Discrete with
 type t = integer_16, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "Tinteger_32B" defined at interfac.ads:51, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__Tinteger_32B
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int

 type tinteger_32B "bounded_type" 
 
 function first 
   :int =
  ( -2147483648 )
 
 function last 
   :int =
  2147483647
 
 predicate in_range
   (x : int)  =
  ( ( first <= x ) /\ ( x <= last ) )
 
 clone export "ada__model".Static_Discrete with
 type t = tinteger_32B, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "integer_32" defined at interfac.ads:51, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__integer_32
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int

 type integer_32 "bounded_type" 
 
 function first 
   :int =
  ( -2147483648 )
 
 function last 
   :int =
  2147483647
 
 predicate in_range
   (x : int)  =
  ( ( first <= x ) /\ ( x <= last ) )
 
 clone export "ada__model".Static_Discrete with
 type t = integer_32, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "Tinteger_64B" defined at interfac.ads:54, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__Tinteger_64B
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int

 type tinteger_64B "bounded_type" 
 
 function first 
   :int =
  ( -9223372036854775808 )
 
 function last 
   :int =
  9223372036854775807
 
 predicate in_range
   (x : int)  =
  ( ( first <= x ) /\ ( x <= last ) )
 
 clone export "ada__model".Static_Discrete with
 type t = tinteger_64B, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "integer_64" defined at interfac.ads:54, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__integer_64
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int

 type integer_64 "bounded_type" 
 
 function first 
   :int =
  ( -9223372036854775808 )
 
 function last 
   :int =
  9223372036854775807
 
 predicate in_range
   (x : int)  =
  ( ( first <= x ) /\ ( x <= last ) )
 
 clone export "ada__model".Static_Discrete with
 type t = integer_64, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "unsigned_8" defined at interfac.ads:57, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__unsigned_8
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int

 type unsigned_8 "bounded_type" 
 
 function first 
   :int =
  0
 
 function last 
   :int =
  255
 
 function attr__ATTRIBUTE_MODULUS 
   :int =
  256
 
 predicate in_range
   (x : int)  =
  ( ( first <= x ) /\ ( x <= last ) )
 
 clone export "ada__model".Static_Modular with
 type t = unsigned_8, 
 function first = first, 
 function last = last, 
 function attr__ATTRIBUTE_MODULUS = attr__ATTRIBUTE_MODULUS, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "unsigned_16" defined at interfac.ads:60, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__unsigned_16
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int

 type unsigned_16 "bounded_type" 
 
 function first 
   :int =
  0
 
 function last 
   :int =
  65535
 
 function attr__ATTRIBUTE_MODULUS 
   :int =
  65536
 
 predicate in_range
   (x : int)  =
  ( ( first <= x ) /\ ( x <= last ) )
 
 clone export "ada__model".Static_Modular with
 type t = unsigned_16, 
 function first = first, 
 function last = last, 
 function attr__ATTRIBUTE_MODULUS = attr__ATTRIBUTE_MODULUS, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "unsigned_32" defined at interfac.ads:63, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__unsigned_32
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int

 type unsigned_32 "bounded_type" 
 
 function first 
   :int =
  0
 
 function last 
   :int =
  4294967295
 
 function attr__ATTRIBUTE_MODULUS 
   :int =
  4294967296
 
 predicate in_range
   (x : int)  =
  ( ( first <= x ) /\ ( x <= last ) )
 
 clone export "ada__model".Static_Modular with
 type t = unsigned_32, 
 function first = first, 
 function last = last, 
 function attr__ATTRIBUTE_MODULUS = attr__ATTRIBUTE_MODULUS, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "unsigned_64" defined at interfac.ads:66, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__unsigned_64
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int

 type unsigned_64 "bounded_type" 
 
 function first 
   :int =
  0
 
 function last 
   :int =
  18446744073709551615
 
 function attr__ATTRIBUTE_MODULUS 
   :int =
  18446744073709551616
 
 predicate in_range
   (x : int)  =
  ( ( first <= x ) /\ ( x <= last ) )
 
 clone export "ada__model".Static_Modular with
 type t = unsigned_64, 
 function first = first, 
 function last = last, 
 function attr__ATTRIBUTE_MODULUS = attr__ATTRIBUTE_MODULUS, 
 predicate in_range = in_range

end

(* Module for defining the constant "value" defined at interfac.ads:70, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_left__value
 use import "_gnatprove_standard".Main
 use        Interfaces__unsigned_8
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function value 
   :Interfaces__unsigned_8.unsigned_8

end

(* Module giving an empty axiom for the entity "value" defined at interfac.ads:70, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_left__value__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at interfac.ads:71, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_left__amount
 use import "_gnatprove_standard".Main
 use        Standard__natural
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function amount 
   :Standard__natural.natural

end

(* Module giving an empty axiom for the entity "amount" defined at interfac.ads:71, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_left__amount__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "shift_left" defined at interfac.ads:69, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__shift_left
 use import "_gnatprove_standard".Main
 use        Interfaces__unsigned_8
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function shift_left 
   (value : int) (amount : int)  :Interfaces__unsigned_8.unsigned_8
 
 val shift_left 
   (value : int) (amount : int)  :Interfaces__unsigned_8.unsigned_8
  requires { true }
  ensures { ( result = (shift_left value amount) ) }


end

(* Module giving an empty axiom for the entity "shift_left" defined at interfac.ads:69, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_left__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at interfac.ads:74, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_right__value
 use import "_gnatprove_standard".Main
 use        Interfaces__unsigned_8
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function value 
   :Interfaces__unsigned_8.unsigned_8

end

(* Module giving an empty axiom for the entity "value" defined at interfac.ads:74, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_right__value__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at interfac.ads:75, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_right__amount
 use import "_gnatprove_standard".Main
 use        Standard__natural
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function amount 
   :Standard__natural.natural

end

(* Module giving an empty axiom for the entity "amount" defined at interfac.ads:75, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_right__amount__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "shift_right" defined at interfac.ads:73, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__shift_right
 use import "_gnatprove_standard".Main
 use        Interfaces__unsigned_8
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function shift_right 
   (value : int) (amount : int)  :Interfaces__unsigned_8.unsigned_8
 
 val shift_right 
   (value : int) (amount : int)  :Interfaces__unsigned_8.unsigned_8
  requires { true }
  ensures { ( result = (shift_right value amount) ) }


end

(* Module giving an empty axiom for the entity "shift_right" defined at interfac.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_right__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at interfac.ads:78, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_right_arithmetic__value
 use import "_gnatprove_standard".Main
 use        Interfaces__unsigned_8
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function value 
   :Interfaces__unsigned_8.unsigned_8

end

(* Module giving an empty axiom for the entity "value" defined at interfac.ads:78, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_right_arithmetic__value__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at interfac.ads:79, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_right_arithmetic__amount
 use import "_gnatprove_standard".Main
 use        Standard__natural
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function amount 
   :Standard__natural.natural

end

(* Module giving an empty axiom for the entity "amount" defined at interfac.ads:79, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_right_arithmetic__amount__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "shift_right_arithmetic" defined at interfac.ads:77, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__shift_right_arithmetic
 use import "_gnatprove_standard".Main
 use        Interfaces__unsigned_8
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function shift_right_arithmetic 
   (value : int) (amount : int)  :Interfaces__unsigned_8.unsigned_8
 
 val shift_right_arithmetic 
   (value : int) (amount : int)  :Interfaces__unsigned_8.unsigned_8
  requires { true }
  ensures { ( result = (shift_right_arithmetic value amount) ) }


end

(* Module giving an empty axiom for the entity "shift_right_arithmetic" defined at interfac.ads:77, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_right_arithmetic__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at interfac.ads:82, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__rotate_left__value
 use import "_gnatprove_standard".Main
 use        Interfaces__unsigned_8
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function value 
   :Interfaces__unsigned_8.unsigned_8

end

(* Module giving an empty axiom for the entity "value" defined at interfac.ads:82, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__rotate_left__value__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at interfac.ads:83, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__rotate_left__amount
 use import "_gnatprove_standard".Main
 use        Standard__natural
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function amount 
   :Standard__natural.natural

end

(* Module giving an empty axiom for the entity "amount" defined at interfac.ads:83, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__rotate_left__amount__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "rotate_left" defined at interfac.ads:81, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__rotate_left
 use import "_gnatprove_standard".Main
 use        Interfaces__unsigned_8
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function rotate_left 
   (value : int) (amount : int)  :Interfaces__unsigned_8.unsigned_8
 
 val rotate_left 
   (value : int) (amount : int)  :Interfaces__unsigned_8.unsigned_8
  requires { true }
  ensures { ( result = (rotate_left value amount) ) }


end

(* Module giving an empty axiom for the entity "rotate_left" defined at interfac.ads:81, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__rotate_left__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at interfac.ads:86, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__rotate_right__value
 use import "_gnatprove_standard".Main
 use        Interfaces__unsigned_8
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function value 
   :Interfaces__unsigned_8.unsigned_8

end

(* Module giving an empty axiom for the entity "value" defined at interfac.ads:86, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__rotate_right__value__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at interfac.ads:87, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__rotate_right__amount
 use import "_gnatprove_standard".Main
 use        Standard__natural
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function amount 
   :Standard__natural.natural

end

(* Module giving an empty axiom for the entity "amount" defined at interfac.ads:87, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__rotate_right__amount__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "rotate_right" defined at interfac.ads:85, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__rotate_right
 use import "_gnatprove_standard".Main
 use        Interfaces__unsigned_8
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function rotate_right 
   (value : int) (amount : int)  :Interfaces__unsigned_8.unsigned_8
 
 val rotate_right 
   (value : int) (amount : int)  :Interfaces__unsigned_8.unsigned_8
  requires { true }
  ensures { ( result = (rotate_right value amount) ) }


end

(* Module giving an empty axiom for the entity "rotate_right" defined at interfac.ads:85, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__rotate_right__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at interfac.ads:90, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_left__2__value
 use import "_gnatprove_standard".Main
 use        Interfaces__unsigned_16
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function value 
   :Interfaces__unsigned_16.unsigned_16

end

(* Module giving an empty axiom for the entity "value" defined at interfac.ads:90, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_left__2__value__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at interfac.ads:91, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_left__2__amount
 use import "_gnatprove_standard".Main
 use        Standard__natural
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function amount 
   :Standard__natural.natural

end

(* Module giving an empty axiom for the entity "amount" defined at interfac.ads:91, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_left__2__amount__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "shift_left__2" defined at interfac.ads:89, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__shift_left__2
 use import "_gnatprove_standard".Main
 use        Interfaces__unsigned_16
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function shift_left__2 
   (value : int) (amount : int)  :Interfaces__unsigned_16.unsigned_16
 
 val shift_left__2 
   (value : int) (amount : int)  :Interfaces__unsigned_16.unsigned_16
  requires { true }
  ensures { ( result = (shift_left__2 value amount) ) }


end

(* Module giving an empty axiom for the entity "shift_left__2" defined at interfac.ads:89, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_left__2__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at interfac.ads:94, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_right__2__value
 use import "_gnatprove_standard".Main
 use        Interfaces__unsigned_16
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function value 
   :Interfaces__unsigned_16.unsigned_16

end

(* Module giving an empty axiom for the entity "value" defined at interfac.ads:94, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_right__2__value__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at interfac.ads:95, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_right__2__amount
 use import "_gnatprove_standard".Main
 use        Standard__natural
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function amount 
   :Standard__natural.natural

end

(* Module giving an empty axiom for the entity "amount" defined at interfac.ads:95, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_right__2__amount__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "shift_right__2" defined at interfac.ads:93, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__shift_right__2
 use import "_gnatprove_standard".Main
 use        Interfaces__unsigned_16
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function shift_right__2 
   (value : int) (amount : int)  :Interfaces__unsigned_16.unsigned_16
 
 val shift_right__2 
   (value : int) (amount : int)  :Interfaces__unsigned_16.unsigned_16
  requires { true }
  ensures { ( result = (shift_right__2 value amount) ) }


end

(* Module giving an empty axiom for the entity "shift_right__2" defined at interfac.ads:93, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_right__2__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at interfac.ads:98, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_right_arithmetic__2__value
 use import "_gnatprove_standard".Main
 use        Interfaces__unsigned_16
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function value 
   :Interfaces__unsigned_16.unsigned_16

end

(* Module giving an empty axiom for the entity "value" defined at interfac.ads:98, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_right_arithmetic__2__value__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at interfac.ads:99, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_right_arithmetic__2__amount
 use import "_gnatprove_standard".Main
 use        Standard__natural
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function amount 
   :Standard__natural.natural

end

(* Module giving an empty axiom for the entity "amount" defined at interfac.ads:99, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_right_arithmetic__2__amount__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "shift_right_arithmetic__2" defined at interfac.ads:97, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__shift_right_arithmetic__2
 use import "_gnatprove_standard".Main
 use        Interfaces__unsigned_16
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function shift_right_arithmetic__2 
   (value : int) (amount : int)  :Interfaces__unsigned_16.unsigned_16
 
 val shift_right_arithmetic__2 
   (value : int) (amount : int)  :Interfaces__unsigned_16.unsigned_16
  requires { true }
  ensures { ( result = (shift_right_arithmetic__2 value amount) ) }


end

(* Module giving an empty axiom for the entity "shift_right_arithmetic__2" defined at interfac.ads:97, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_right_arithmetic__2__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at interfac.ads:102, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__rotate_left__2__value
 use import "_gnatprove_standard".Main
 use        Interfaces__unsigned_16
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function value 
   :Interfaces__unsigned_16.unsigned_16

end

(* Module giving an empty axiom for the entity "value" defined at interfac.ads:102, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__rotate_left__2__value__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at interfac.ads:103, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__rotate_left__2__amount
 use import "_gnatprove_standard".Main
 use        Standard__natural
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function amount 
   :Standard__natural.natural

end

(* Module giving an empty axiom for the entity "amount" defined at interfac.ads:103, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__rotate_left__2__amount__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "rotate_left__2" defined at interfac.ads:101, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__rotate_left__2
 use import "_gnatprove_standard".Main
 use        Interfaces__unsigned_16
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function rotate_left__2 
   (value : int) (amount : int)  :Interfaces__unsigned_16.unsigned_16
 
 val rotate_left__2 
   (value : int) (amount : int)  :Interfaces__unsigned_16.unsigned_16
  requires { true }
  ensures { ( result = (rotate_left__2 value amount) ) }


end

(* Module giving an empty axiom for the entity "rotate_left__2" defined at interfac.ads:101, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__rotate_left__2__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at interfac.ads:106, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__rotate_right__2__value
 use import "_gnatprove_standard".Main
 use        Interfaces__unsigned_16
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function value 
   :Interfaces__unsigned_16.unsigned_16

end

(* Module giving an empty axiom for the entity "value" defined at interfac.ads:106, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__rotate_right__2__value__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at interfac.ads:107, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__rotate_right__2__amount
 use import "_gnatprove_standard".Main
 use        Standard__natural
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function amount 
   :Standard__natural.natural

end

(* Module giving an empty axiom for the entity "amount" defined at interfac.ads:107, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__rotate_right__2__amount__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "rotate_right__2" defined at interfac.ads:105, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__rotate_right__2
 use import "_gnatprove_standard".Main
 use        Interfaces__unsigned_16
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function rotate_right__2 
   (value : int) (amount : int)  :Interfaces__unsigned_16.unsigned_16
 
 val rotate_right__2 
   (value : int) (amount : int)  :Interfaces__unsigned_16.unsigned_16
  requires { true }
  ensures { ( result = (rotate_right__2 value amount) ) }


end

(* Module giving an empty axiom for the entity "rotate_right__2" defined at interfac.ads:105, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__rotate_right__2__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at interfac.ads:110, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_left__3__value
 use import "_gnatprove_standard".Main
 use        Interfaces__unsigned_32
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function value 
   :Interfaces__unsigned_32.unsigned_32

end

(* Module giving an empty axiom for the entity "value" defined at interfac.ads:110, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_left__3__value__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at interfac.ads:111, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_left__3__amount
 use import "_gnatprove_standard".Main
 use        Standard__natural
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function amount 
   :Standard__natural.natural

end

(* Module giving an empty axiom for the entity "amount" defined at interfac.ads:111, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_left__3__amount__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "shift_left__3" defined at interfac.ads:109, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__shift_left__3
 use import "_gnatprove_standard".Main
 use        Interfaces__unsigned_32
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function shift_left__3 
   (value : int) (amount : int)  :Interfaces__unsigned_32.unsigned_32
 
 val shift_left__3 
   (value : int) (amount : int)  :Interfaces__unsigned_32.unsigned_32
  requires { true }
  ensures { ( result = (shift_left__3 value amount) ) }


end

(* Module giving an empty axiom for the entity "shift_left__3" defined at interfac.ads:109, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_left__3__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at interfac.ads:114, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_right__3__value
 use import "_gnatprove_standard".Main
 use        Interfaces__unsigned_32
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function value 
   :Interfaces__unsigned_32.unsigned_32

end

(* Module giving an empty axiom for the entity "value" defined at interfac.ads:114, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_right__3__value__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at interfac.ads:115, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_right__3__amount
 use import "_gnatprove_standard".Main
 use        Standard__natural
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function amount 
   :Standard__natural.natural

end

(* Module giving an empty axiom for the entity "amount" defined at interfac.ads:115, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_right__3__amount__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "shift_right__3" defined at interfac.ads:113, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__shift_right__3
 use import "_gnatprove_standard".Main
 use        Interfaces__unsigned_32
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function shift_right__3 
   (value : int) (amount : int)  :Interfaces__unsigned_32.unsigned_32
 
 val shift_right__3 
   (value : int) (amount : int)  :Interfaces__unsigned_32.unsigned_32
  requires { true }
  ensures { ( result = (shift_right__3 value amount) ) }


end

(* Module giving an empty axiom for the entity "shift_right__3" defined at interfac.ads:113, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_right__3__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at interfac.ads:118, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_right_arithmetic__3__value
 use import "_gnatprove_standard".Main
 use        Interfaces__unsigned_32
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function value 
   :Interfaces__unsigned_32.unsigned_32

end

(* Module giving an empty axiom for the entity "value" defined at interfac.ads:118, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_right_arithmetic__3__value__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at interfac.ads:119, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_right_arithmetic__3__amount
 use import "_gnatprove_standard".Main
 use        Standard__natural
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function amount 
   :Standard__natural.natural

end

(* Module giving an empty axiom for the entity "amount" defined at interfac.ads:119, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_right_arithmetic__3__amount__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "shift_right_arithmetic__3" defined at interfac.ads:117, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__shift_right_arithmetic__3
 use import "_gnatprove_standard".Main
 use        Interfaces__unsigned_32
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function shift_right_arithmetic__3 
   (value : int) (amount : int)  :Interfaces__unsigned_32.unsigned_32
 
 val shift_right_arithmetic__3 
   (value : int) (amount : int)  :Interfaces__unsigned_32.unsigned_32
  requires { true }
  ensures { ( result = (shift_right_arithmetic__3 value amount) ) }


end

(* Module giving an empty axiom for the entity "shift_right_arithmetic__3" defined at interfac.ads:117, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_right_arithmetic__3__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at interfac.ads:122, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__rotate_left__3__value
 use import "_gnatprove_standard".Main
 use        Interfaces__unsigned_32
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function value 
   :Interfaces__unsigned_32.unsigned_32

end

(* Module giving an empty axiom for the entity "value" defined at interfac.ads:122, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__rotate_left__3__value__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at interfac.ads:123, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__rotate_left__3__amount
 use import "_gnatprove_standard".Main
 use        Standard__natural
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function amount 
   :Standard__natural.natural

end

(* Module giving an empty axiom for the entity "amount" defined at interfac.ads:123, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__rotate_left__3__amount__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "rotate_left__3" defined at interfac.ads:121, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__rotate_left__3
 use import "_gnatprove_standard".Main
 use        Interfaces__unsigned_32
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function rotate_left__3 
   (value : int) (amount : int)  :Interfaces__unsigned_32.unsigned_32
 
 val rotate_left__3 
   (value : int) (amount : int)  :Interfaces__unsigned_32.unsigned_32
  requires { true }
  ensures { ( result = (rotate_left__3 value amount) ) }


end

(* Module giving an empty axiom for the entity "rotate_left__3" defined at interfac.ads:121, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__rotate_left__3__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at interfac.ads:126, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__rotate_right__3__value
 use import "_gnatprove_standard".Main
 use        Interfaces__unsigned_32
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function value 
   :Interfaces__unsigned_32.unsigned_32

end

(* Module giving an empty axiom for the entity "value" defined at interfac.ads:126, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__rotate_right__3__value__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at interfac.ads:127, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__rotate_right__3__amount
 use import "_gnatprove_standard".Main
 use        Standard__natural
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function amount 
   :Standard__natural.natural

end

(* Module giving an empty axiom for the entity "amount" defined at interfac.ads:127, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__rotate_right__3__amount__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "rotate_right__3" defined at interfac.ads:125, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__rotate_right__3
 use import "_gnatprove_standard".Main
 use        Interfaces__unsigned_32
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function rotate_right__3 
   (value : int) (amount : int)  :Interfaces__unsigned_32.unsigned_32
 
 val rotate_right__3 
   (value : int) (amount : int)  :Interfaces__unsigned_32.unsigned_32
  requires { true }
  ensures { ( result = (rotate_right__3 value amount) ) }


end

(* Module giving an empty axiom for the entity "rotate_right__3" defined at interfac.ads:125, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__rotate_right__3__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at interfac.ads:130, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_left__4__value
 use import "_gnatprove_standard".Main
 use        Interfaces__unsigned_64
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function value 
   :Interfaces__unsigned_64.unsigned_64

end

(* Module giving an empty axiom for the entity "value" defined at interfac.ads:130, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_left__4__value__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at interfac.ads:131, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_left__4__amount
 use import "_gnatprove_standard".Main
 use        Standard__natural
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function amount 
   :Standard__natural.natural

end

(* Module giving an empty axiom for the entity "amount" defined at interfac.ads:131, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_left__4__amount__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "shift_left__4" defined at interfac.ads:129, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__shift_left__4
 use import "_gnatprove_standard".Main
 use        Interfaces__unsigned_64
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function shift_left__4 
   (value : int) (amount : int)  :Interfaces__unsigned_64.unsigned_64
 
 val shift_left__4 
   (value : int) (amount : int)  :Interfaces__unsigned_64.unsigned_64
  requires { true }
  ensures { ( result = (shift_left__4 value amount) ) }


end

(* Module giving an empty axiom for the entity "shift_left__4" defined at interfac.ads:129, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_left__4__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at interfac.ads:134, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_right__4__value
 use import "_gnatprove_standard".Main
 use        Interfaces__unsigned_64
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function value 
   :Interfaces__unsigned_64.unsigned_64

end

(* Module giving an empty axiom for the entity "value" defined at interfac.ads:134, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_right__4__value__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at interfac.ads:135, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_right__4__amount
 use import "_gnatprove_standard".Main
 use        Standard__natural
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function amount 
   :Standard__natural.natural

end

(* Module giving an empty axiom for the entity "amount" defined at interfac.ads:135, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_right__4__amount__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "shift_right__4" defined at interfac.ads:133, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__shift_right__4
 use import "_gnatprove_standard".Main
 use        Interfaces__unsigned_64
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function shift_right__4 
   (value : int) (amount : int)  :Interfaces__unsigned_64.unsigned_64
 
 val shift_right__4 
   (value : int) (amount : int)  :Interfaces__unsigned_64.unsigned_64
  requires { true }
  ensures { ( result = (shift_right__4 value amount) ) }


end

(* Module giving an empty axiom for the entity "shift_right__4" defined at interfac.ads:133, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_right__4__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at interfac.ads:138, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_right_arithmetic__4__value
 use import "_gnatprove_standard".Main
 use        Interfaces__unsigned_64
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function value 
   :Interfaces__unsigned_64.unsigned_64

end

(* Module giving an empty axiom for the entity "value" defined at interfac.ads:138, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_right_arithmetic__4__value__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at interfac.ads:139, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__shift_right_arithmetic__4__amount
 use import "_gnatprove_standard".Main
 use        Standard__natural
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function amount 
   :Standard__natural.natural

end

(* Module giving an empty axiom for the entity "amount" defined at interfac.ads:139, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_right_arithmetic__4__amount__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "shift_right_arithmetic__4" defined at interfac.ads:137, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__shift_right_arithmetic__4
 use import "_gnatprove_standard".Main
 use        Interfaces__unsigned_64
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function shift_right_arithmetic__4 
   (value : int) (amount : int)  :Interfaces__unsigned_64.unsigned_64
 
 val shift_right_arithmetic__4 
   (value : int) (amount : int)  :Interfaces__unsigned_64.unsigned_64
  requires { true }
  ensures { ( result = (shift_right_arithmetic__4 value amount) ) }


end

(* Module giving an empty axiom for the entity "shift_right_arithmetic__4" defined at interfac.ads:137, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__shift_right_arithmetic__4__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at interfac.ads:142, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__rotate_left__4__value
 use import "_gnatprove_standard".Main
 use        Interfaces__unsigned_64
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function value 
   :Interfaces__unsigned_64.unsigned_64

end

(* Module giving an empty axiom for the entity "value" defined at interfac.ads:142, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__rotate_left__4__value__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at interfac.ads:143, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__rotate_left__4__amount
 use import "_gnatprove_standard".Main
 use        Standard__natural
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function amount 
   :Standard__natural.natural

end

(* Module giving an empty axiom for the entity "amount" defined at interfac.ads:143, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__rotate_left__4__amount__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "rotate_left__4" defined at interfac.ads:141, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__rotate_left__4
 use import "_gnatprove_standard".Main
 use        Interfaces__unsigned_64
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function rotate_left__4 
   (value : int) (amount : int)  :Interfaces__unsigned_64.unsigned_64
 
 val rotate_left__4 
   (value : int) (amount : int)  :Interfaces__unsigned_64.unsigned_64
  requires { true }
  ensures { ( result = (rotate_left__4 value amount) ) }


end

(* Module giving an empty axiom for the entity "rotate_left__4" defined at interfac.ads:141, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__rotate_left__4__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "value" defined at interfac.ads:146, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__rotate_right__4__value
 use import "_gnatprove_standard".Main
 use        Interfaces__unsigned_64
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function value 
   :Interfaces__unsigned_64.unsigned_64

end

(* Module giving an empty axiom for the entity "value" defined at interfac.ads:146, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__rotate_right__4__value__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "amount" defined at interfac.ads:147, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__rotate_right__4__amount
 use import "_gnatprove_standard".Main
 use        Standard__natural
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function amount 
   :Standard__natural.natural

end

(* Module giving an empty axiom for the entity "amount" defined at interfac.ads:147, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__rotate_right__4__amount__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "rotate_right__4" defined at interfac.ads:145, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__rotate_right__4
 use import "_gnatprove_standard".Main
 use        Interfaces__unsigned_64
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function rotate_right__4 
   (value : int) (amount : int)  :Interfaces__unsigned_64.unsigned_64
 
 val rotate_right__4 
   (value : int) (amount : int)  :Interfaces__unsigned_64.unsigned_64
  requires { true }
  ensures { ( result = (rotate_right__4 value amount) ) }


end

(* Module giving an empty axiom for the entity "rotate_right__4" defined at interfac.ads:145, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__rotate_right__4__axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "Tieee_float_32B" defined at interfac.ads:162, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__Tieee_float_32B
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Floating
 use import "real".RealInfix

 type tieee_float_32B "bounded_type" 
 
 function first 
   :real =
  (-.340282346638528859811704183484516925440.0)
 
 function last 
   :real =
  (340282346638528859811704183484516925440.0)
 
 predicate in_range
   (x : real)  =
  ( ( first <=. x ) /\ ( x <=. last ) )
 
 clone export "ada__model".Static_Floating_Point with
 type t = tieee_float_32B, 
 function round_real_tmp = Floating.round_single, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "ieee_float_32" defined at interfac.ads:162, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__ieee_float_32
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Floating
 use import "real".RealInfix

 type ieee_float_32 "bounded_type" 
 
 function first 
   :real =
  (-.340282346638528859811704183484516925440.0)
 
 function last 
   :real =
  (340282346638528859811704183484516925440.0)
 
 predicate in_range
   (x : real)  =
  ( ( first <=. x ) /\ ( x <=. last ) )
 
 clone export "ada__model".Static_Floating_Point with
 type t = ieee_float_32, 
 function round_real_tmp = Floating.round_single, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "Tieee_float_64B" defined at interfac.ads:166, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__Tieee_float_64B
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Floating
 use import "real".RealInfix

 type tieee_float_64B "bounded_type" 
 
 function first 
   :real =
  (-.179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.0)
 
 function last 
   :real =
  (179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.0)
 
 predicate in_range
   (x : real)  =
  ( ( first <=. x ) /\ ( x <=. last ) )
 
 clone export "ada__model".Static_Floating_Point with
 type t = tieee_float_64B, 
 function round_real_tmp = Floating.round_double, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "ieee_float_64" defined at interfac.ads:166, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__ieee_float_64
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Floating
 use import "real".RealInfix

 type ieee_float_64 "bounded_type" 
 
 function first 
   :real =
  (-.179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.0)
 
 function last 
   :real =
  (179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.0)
 
 predicate in_range
   (x : real)  =
  ( ( first <=. x ) /\ ( x <=. last ) )
 
 clone export "ada__model".Static_Floating_Point with
 type t = ieee_float_64, 
 function round_real_tmp = Floating.round_double, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "Tieee_extended_floatB" defined at interfac.ads:177, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__Tieee_extended_floatB
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Floating
 use import "real".RealInfix

 type tieee_extended_floatB "bounded_type" 
 
 function first 
   :real =
  (-.1189731495357231765021263853030970205169063322294624200440323733891737005522970722616410290336528882853545697807495577314427443153670288434198125573853743678673593200706973263201915918282961524365529510646791086614311790632169778838896134786560600399148753433211454911160088679845154866512852340149773037600009125479393966223151383622417838542743917838138717805889487540575168226347659235576974805113725649020884855222494791399377585026011773549180099796226026859508558883608159846900235645132346594476384939859276456284579661772930407806609229102715046085388087959327781622986827547830768080040150694942303411728957777100335714010559775242124057347007386251660110828379119623008469277200965153500208474470792443848545912886723000619085126472111951361467527633519562927597957250278002980795904193139603021470997035276467445530922022679656280991498232083329641241038509239184734786121921697210543484287048353408113042573002216421348917347174234800714880751002064390517234247656004721768096486107994943415703476320643558624207443504424380566136017608837478165389027809576975977286860071487028287955567141404632615832623602762896316173978484254486860609948270867968048078702511858930838546584223040908805996294594586201903766048446790926002225410530775901065760671347200125846406957030257138960983757998926954553052368560758683179223113639519468850880771872104705203957587480013143131444254943919940175753169339392366881856189129931729104252921236835159922322050998001677102784035360140829296398115122877768135706045789343535451696539561254048846447169786893211671087229088082778350518228857646062218739702851655083720992349483334435228984751232753726636066213902281264706234075352071724058665079518217303463782631353393706774901950197841690441824738063162828586857741432581165364040218402724913393320949219498422442730427019873044536620350262386957804682003601447291997123095530057206141866974852846856186514832715974481203121946751686379343096189615107330065552421485195201762858595091051839472502863871632494167613804996319791441870254302706758495192008837915169401581740046711477877201459644461175204059453504764721807975761111720846273639279600339670470037613374509553184150073796412605047923251661354841291884211340823015473304754067072818763503617332908005951896325207071673904547777129682265206225651439919376804400292380903112437912614776255964694221981375146967079446870358004392507659451618379811859392049544036114915310782251072691486979809240946772142727012404377187409216756613634938900451232351668146089322400697993176017805338191849981933008410985993938760292601390911414526003720284872132411955424282101831204216104467404621635336900583664606591156298764745525068145003932941404131495400677602951005962253022823003631473824681059648442441324864573137437595096416168048024129351876204668135636877532814675538798871771836512893947195335061885003267607354388673368002074387849657014576090349857571243045102038730494854256702479339322809110526041538528994849203991091946129912491633289917998094380337879522093131466946149705939664152375949285890960489916121944989986384837022486672249148924678410206183364627416969576307632480235587975245253737035433882960862753427740016333434055083537048507374544819754722228975281083020898682633020285259923084168054539687911418297629988964576482765287504562854924265165217750799516259669229114977788962356670956627138482018191348321687995863652637620978285070099337294396784639879024914514222742527006363942327998483976739987154418554201562244154926653014515504685489258620276085761837129763358761215382565129633538141663949516556000264159186554850057052611431952919918807954522394649627635630178580896692226406235382898535867595990647008385687123810329591926494846250768992258419305480763620215089022149220528069842018350840586938493815498909445461977893029113576516775406232278298314033473276603952231603422824717528181818844304880921321933550869873395861276073670866652375555675803171490108477320096424318780070008797346032906278943553743564448851907191616455141155761939399690767415156402826543664026760095087523945507341556135867933066031744720924446513532366647649735400851967040771103640538150073486891798364049570606189535005089840913826869535090066783324472578712196604415284924840041850932811908963634175739897166596000759487800619164094854338758520657116541072260996288150123144377944008749301944744330784388995701842710004808305012177123560622895076269042856800047718893158089358515593863176652948089031267747029662545110861548958395087796755464137944895960527975209874813839762578592105756284401759349324162148339565350189196811389091843795734703269406342890087805846940352453479398080674273236297887100867175802531561302356064878709259865288416350972529537091114317204887747405539054009425375424119317944175137064689643861517718849867010341532542385911089624710885385808688837777258648564145934262121086647588489260031762345960769508849149662444156604419552086811989770240.0)
 
 function last 
   :real =
  (1189731495357231765021263853030970205169063322294624200440323733891737005522970722616410290336528882853545697807495577314427443153670288434198125573853743678673593200706973263201915918282961524365529510646791086614311790632169778838896134786560600399148753433211454911160088679845154866512852340149773037600009125479393966223151383622417838542743917838138717805889487540575168226347659235576974805113725649020884855222494791399377585026011773549180099796226026859508558883608159846900235645132346594476384939859276456284579661772930407806609229102715046085388087959327781622986827547830768080040150694942303411728957777100335714010559775242124057347007386251660110828379119623008469277200965153500208474470792443848545912886723000619085126472111951361467527633519562927597957250278002980795904193139603021470997035276467445530922022679656280991498232083329641241038509239184734786121921697210543484287048353408113042573002216421348917347174234800714880751002064390517234247656004721768096486107994943415703476320643558624207443504424380566136017608837478165389027809576975977286860071487028287955567141404632615832623602762896316173978484254486860609948270867968048078702511858930838546584223040908805996294594586201903766048446790926002225410530775901065760671347200125846406957030257138960983757998926954553052368560758683179223113639519468850880771872104705203957587480013143131444254943919940175753169339392366881856189129931729104252921236835159922322050998001677102784035360140829296398115122877768135706045789343535451696539561254048846447169786893211671087229088082778350518228857646062218739702851655083720992349483334435228984751232753726636066213902281264706234075352071724058665079518217303463782631353393706774901950197841690441824738063162828586857741432581165364040218402724913393320949219498422442730427019873044536620350262386957804682003601447291997123095530057206141866974852846856186514832715974481203121946751686379343096189615107330065552421485195201762858595091051839472502863871632494167613804996319791441870254302706758495192008837915169401581740046711477877201459644461175204059453504764721807975761111720846273639279600339670470037613374509553184150073796412605047923251661354841291884211340823015473304754067072818763503617332908005951896325207071673904547777129682265206225651439919376804400292380903112437912614776255964694221981375146967079446870358004392507659451618379811859392049544036114915310782251072691486979809240946772142727012404377187409216756613634938900451232351668146089322400697993176017805338191849981933008410985993938760292601390911414526003720284872132411955424282101831204216104467404621635336900583664606591156298764745525068145003932941404131495400677602951005962253022823003631473824681059648442441324864573137437595096416168048024129351876204668135636877532814675538798871771836512893947195335061885003267607354388673368002074387849657014576090349857571243045102038730494854256702479339322809110526041538528994849203991091946129912491633289917998094380337879522093131466946149705939664152375949285890960489916121944989986384837022486672249148924678410206183364627416969576307632480235587975245253737035433882960862753427740016333434055083537048507374544819754722228975281083020898682633020285259923084168054539687911418297629988964576482765287504562854924265165217750799516259669229114977788962356670956627138482018191348321687995863652637620978285070099337294396784639879024914514222742527006363942327998483976739987154418554201562244154926653014515504685489258620276085761837129763358761215382565129633538141663949516556000264159186554850057052611431952919918807954522394649627635630178580896692226406235382898535867595990647008385687123810329591926494846250768992258419305480763620215089022149220528069842018350840586938493815498909445461977893029113576516775406232278298314033473276603952231603422824717528181818844304880921321933550869873395861276073670866652375555675803171490108477320096424318780070008797346032906278943553743564448851907191616455141155761939399690767415156402826543664026760095087523945507341556135867933066031744720924446513532366647649735400851967040771103640538150073486891798364049570606189535005089840913826869535090066783324472578712196604415284924840041850932811908963634175739897166596000759487800619164094854338758520657116541072260996288150123144377944008749301944744330784388995701842710004808305012177123560622895076269042856800047718893158089358515593863176652948089031267747029662545110861548958395087796755464137944895960527975209874813839762578592105756284401759349324162148339565350189196811389091843795734703269406342890087805846940352453479398080674273236297887100867175802531561302356064878709259865288416350972529537091114317204887747405539054009425375424119317944175137064689643861517718849867010341532542385911089624710885385808688837777258648564145934262121086647588489260031762345960769508849149662444156604419552086811989770240.0)
 
 predicate in_range
   (x : real)  =
  ( ( first <=. x ) /\ ( x <=. last ) )
 
 clone export "ada__model".Static_Floating_Point with
 type t = tieee_extended_floatB, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "ieee_extended_float" defined at interfac.ads:177, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__ieee_extended_float
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Floating
 use import "real".RealInfix

 type ieee_extended_float "bounded_type" 
 
 function first 
   :real =
  (-.1189731495357231765021263853030970205169063322294624200440323733891737005522970722616410290336528882853545697807495577314427443153670288434198125573853743678673593200706973263201915918282961524365529510646791086614311790632169778838896134786560600399148753433211454911160088679845154866512852340149773037600009125479393966223151383622417838542743917838138717805889487540575168226347659235576974805113725649020884855222494791399377585026011773549180099796226026859508558883608159846900235645132346594476384939859276456284579661772930407806609229102715046085388087959327781622986827547830768080040150694942303411728957777100335714010559775242124057347007386251660110828379119623008469277200965153500208474470792443848545912886723000619085126472111951361467527633519562927597957250278002980795904193139603021470997035276467445530922022679656280991498232083329641241038509239184734786121921697210543484287048353408113042573002216421348917347174234800714880751002064390517234247656004721768096486107994943415703476320643558624207443504424380566136017608837478165389027809576975977286860071487028287955567141404632615832623602762896316173978484254486860609948270867968048078702511858930838546584223040908805996294594586201903766048446790926002225410530775901065760671347200125846406957030257138960983757998926954553052368560758683179223113639519468850880771872104705203957587480013143131444254943919940175753169339392366881856189129931729104252921236835159922322050998001677102784035360140829296398115122877768135706045789343535451696539561254048846447169786893211671087229088082778350518228857646062218739702851655083720992349483334435228984751232753726636066213902281264706234075352071724058665079518217303463782631353393706774901950197841690441824738063162828586857741432581165364040218402724913393320949219498422442730427019873044536620350262386957804682003601447291997123095530057206141866974852846856186514832715974481203121946751686379343096189615107330065552421485195201762858595091051839472502863871632494167613804996319791441870254302706758495192008837915169401581740046711477877201459644461175204059453504764721807975761111720846273639279600339670470037613374509553184150073796412605047923251661354841291884211340823015473304754067072818763503617332908005951896325207071673904547777129682265206225651439919376804400292380903112437912614776255964694221981375146967079446870358004392507659451618379811859392049544036114915310782251072691486979809240946772142727012404377187409216756613634938900451232351668146089322400697993176017805338191849981933008410985993938760292601390911414526003720284872132411955424282101831204216104467404621635336900583664606591156298764745525068145003932941404131495400677602951005962253022823003631473824681059648442441324864573137437595096416168048024129351876204668135636877532814675538798871771836512893947195335061885003267607354388673368002074387849657014576090349857571243045102038730494854256702479339322809110526041538528994849203991091946129912491633289917998094380337879522093131466946149705939664152375949285890960489916121944989986384837022486672249148924678410206183364627416969576307632480235587975245253737035433882960862753427740016333434055083537048507374544819754722228975281083020898682633020285259923084168054539687911418297629988964576482765287504562854924265165217750799516259669229114977788962356670956627138482018191348321687995863652637620978285070099337294396784639879024914514222742527006363942327998483976739987154418554201562244154926653014515504685489258620276085761837129763358761215382565129633538141663949516556000264159186554850057052611431952919918807954522394649627635630178580896692226406235382898535867595990647008385687123810329591926494846250768992258419305480763620215089022149220528069842018350840586938493815498909445461977893029113576516775406232278298314033473276603952231603422824717528181818844304880921321933550869873395861276073670866652375555675803171490108477320096424318780070008797346032906278943553743564448851907191616455141155761939399690767415156402826543664026760095087523945507341556135867933066031744720924446513532366647649735400851967040771103640538150073486891798364049570606189535005089840913826869535090066783324472578712196604415284924840041850932811908963634175739897166596000759487800619164094854338758520657116541072260996288150123144377944008749301944744330784388995701842710004808305012177123560622895076269042856800047718893158089358515593863176652948089031267747029662545110861548958395087796755464137944895960527975209874813839762578592105756284401759349324162148339565350189196811389091843795734703269406342890087805846940352453479398080674273236297887100867175802531561302356064878709259865288416350972529537091114317204887747405539054009425375424119317944175137064689643861517718849867010341532542385911089624710885385808688837777258648564145934262121086647588489260031762345960769508849149662444156604419552086811989770240.0)
 
 function last 
   :real =
  (1189731495357231765021263853030970205169063322294624200440323733891737005522970722616410290336528882853545697807495577314427443153670288434198125573853743678673593200706973263201915918282961524365529510646791086614311790632169778838896134786560600399148753433211454911160088679845154866512852340149773037600009125479393966223151383622417838542743917838138717805889487540575168226347659235576974805113725649020884855222494791399377585026011773549180099796226026859508558883608159846900235645132346594476384939859276456284579661772930407806609229102715046085388087959327781622986827547830768080040150694942303411728957777100335714010559775242124057347007386251660110828379119623008469277200965153500208474470792443848545912886723000619085126472111951361467527633519562927597957250278002980795904193139603021470997035276467445530922022679656280991498232083329641241038509239184734786121921697210543484287048353408113042573002216421348917347174234800714880751002064390517234247656004721768096486107994943415703476320643558624207443504424380566136017608837478165389027809576975977286860071487028287955567141404632615832623602762896316173978484254486860609948270867968048078702511858930838546584223040908805996294594586201903766048446790926002225410530775901065760671347200125846406957030257138960983757998926954553052368560758683179223113639519468850880771872104705203957587480013143131444254943919940175753169339392366881856189129931729104252921236835159922322050998001677102784035360140829296398115122877768135706045789343535451696539561254048846447169786893211671087229088082778350518228857646062218739702851655083720992349483334435228984751232753726636066213902281264706234075352071724058665079518217303463782631353393706774901950197841690441824738063162828586857741432581165364040218402724913393320949219498422442730427019873044536620350262386957804682003601447291997123095530057206141866974852846856186514832715974481203121946751686379343096189615107330065552421485195201762858595091051839472502863871632494167613804996319791441870254302706758495192008837915169401581740046711477877201459644461175204059453504764721807975761111720846273639279600339670470037613374509553184150073796412605047923251661354841291884211340823015473304754067072818763503617332908005951896325207071673904547777129682265206225651439919376804400292380903112437912614776255964694221981375146967079446870358004392507659451618379811859392049544036114915310782251072691486979809240946772142727012404377187409216756613634938900451232351668146089322400697993176017805338191849981933008410985993938760292601390911414526003720284872132411955424282101831204216104467404621635336900583664606591156298764745525068145003932941404131495400677602951005962253022823003631473824681059648442441324864573137437595096416168048024129351876204668135636877532814675538798871771836512893947195335061885003267607354388673368002074387849657014576090349857571243045102038730494854256702479339322809110526041538528994849203991091946129912491633289917998094380337879522093131466946149705939664152375949285890960489916121944989986384837022486672249148924678410206183364627416969576307632480235587975245253737035433882960862753427740016333434055083537048507374544819754722228975281083020898682633020285259923084168054539687911418297629988964576482765287504562854924265165217750799516259669229114977788962356670956627138482018191348321687995863652637620978285070099337294396784639879024914514222742527006363942327998483976739987154418554201562244154926653014515504685489258620276085761837129763358761215382565129633538141663949516556000264159186554850057052611431952919918807954522394649627635630178580896692226406235382898535867595990647008385687123810329591926494846250768992258419305480763620215089022149220528069842018350840586938493815498909445461977893029113576516775406232278298314033473276603952231603422824717528181818844304880921321933550869873395861276073670866652375555675803171490108477320096424318780070008797346032906278943553743564448851907191616455141155761939399690767415156402826543664026760095087523945507341556135867933066031744720924446513532366647649735400851967040771103640538150073486891798364049570606189535005089840913826869535090066783324472578712196604415284924840041850932811908963634175739897166596000759487800619164094854338758520657116541072260996288150123144377944008749301944744330784388995701842710004808305012177123560622895076269042856800047718893158089358515593863176652948089031267747029662545110861548958395087796755464137944895960527975209874813839762578592105756284401759349324162148339565350189196811389091843795734703269406342890087805846940352453479398080674273236297887100867175802531561302356064878709259865288416350972529537091114317204887747405539054009425375424119317944175137064689643861517718849867010341532542385911089624710885385808688837777258648564145934262121086647588489260031762345960769508849149662444156604419552086811989770240.0)
 
 predicate in_range
   (x : real)  =
  ( ( first <=. x ) /\ ( x <=. last ) )
 
 clone export "ada__model".Static_Floating_Point with
 type t = ieee_extended_float, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "chars" defined at i-cstrea.ads:40, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c_streams__chars
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int

 type chars "bounded_type" 
 
 function first 
   :int =
  0
 
 function last 
   :int =
  4294967295
 
 function attr__ATTRIBUTE_MODULUS 
   :int =
  0
 
 predicate in_range
   (x : int)  =
  ( ( first <= x ) /\ ( x <= last ) )
 
 clone export "ada__model".Static_Modular with
 type t = chars, 
 function first = first, 
 function last = last, 
 function attr__ATTRIBUTE_MODULUS = attr__ATTRIBUTE_MODULUS, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "files" defined at i-cstrea.ads:41, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c_streams__files
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int

 type files "bounded_type" 
 
 function first 
   :int =
  0
 
 function last 
   :int =
  4294967295
 
 function attr__ATTRIBUTE_MODULUS 
   :int =
  0
 
 predicate in_range
   (x : int)  =
  ( ( first <= x ) /\ ( x <= last ) )
 
 clone export "ada__model".Static_Modular with
 type t = files, 
 function first = first, 
 function last = last, 
 function attr__ATTRIBUTE_MODULUS = attr__ATTRIBUTE_MODULUS, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "int" defined at i-cstrea.ads:42, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c_streams__int
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int

 type int__ "bounded_type" 
 
 function first 
   :int =
  ( -2147483648 )
 
 function last 
   :int =
  2147483647
 
 predicate in_range
   (x : int)  =
  ( ( first <= x ) /\ ( x <= last ) )
 
 clone export "ada__model".Static_Discrete with
 type t = int__, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "long" defined at i-cstrea.ads:43, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c_streams__long
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int

 type long "bounded_type" 
 
 function first 
   :int =
  ( -2147483648 )
 
 function last 
   :int =
  2147483647
 
 predicate in_range
   (x : int)  =
  ( ( first <= x ) /\ ( x <= last ) )
 
 clone export "ada__model".Static_Discrete with
 type t = long, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "size_t" defined at i-cstrea.ads:44, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c_streams__size_t
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int

 type size_t "bounded_type" 
 
 function first 
   :int =
  0
 
 function last 
   :int =
  4294967295
 
 function attr__ATTRIBUTE_MODULUS 
   :int =
  4294967296
 
 predicate in_range
   (x : int)  =
  ( ( first <= x ) /\ ( x <= last ) )
 
 clone export "ada__model".Static_Modular with
 type t = size_t, 
 function first = first, 
 function last = last, 
 function attr__ATTRIBUTE_MODULUS = attr__ATTRIBUTE_MODULUS, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "ssize_t" defined at i-cstrea.ads:45, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c_streams__ssize_t
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int

 type ssize_t "bounded_type" 
 
 function first 
   :int =
  ( -2147483648 )
 
 function last 
   :int =
  2147483647
 
 predicate in_range
   (x : int)  =
  ( ( first <= x ) /\ ( x <= last ) )
 
 clone export "ada__model".Static_Discrete with
 type t = ssize_t, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "voids" defined at i-cstrea.ads:46, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c_streams__voids
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int

 type voids "bounded_type" 
 
 function first 
   :int =
  0
 
 function last 
   :int =
  4294967295
 
 function attr__ATTRIBUTE_MODULUS 
   :int =
  0
 
 predicate in_range
   (x : int)  =
  ( ( first <= x ) /\ ( x <= last ) )
 
 clone export "ada__model".Static_Modular with
 type t = voids, 
 function first = first, 
 function last = last, 
 function attr__ATTRIBUTE_MODULUS = attr__ATTRIBUTE_MODULUS, 
 predicate in_range = in_range

end

(* Module for defining the constant "null_stream" defined at i-cstrea.ads:48, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__null_stream
 use import "_gnatprove_standard".Main
 use        Interfaces__c_streams__files
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function null_stream 
   :Interfaces__c_streams__files.files

end

(* Module for defining the constant "eof" defined at i-cstrea.ads:55, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__eof
 use import "_gnatprove_standard".Main
 use        Interfaces__c_streams__int
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function eof 
   :Interfaces__c_streams__int.int__

end

(* Module for defining the constant "iofbf" defined at i-cstrea.ads:58, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__iofbf
 use import "_gnatprove_standard".Main
 use        Interfaces__c_streams__int
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function iofbf 
   :Interfaces__c_streams__int.int__

end

(* Module for defining the constant "iolbf" defined at i-cstrea.ads:59, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__iolbf
 use import "_gnatprove_standard".Main
 use        Interfaces__c_streams__int
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function iolbf 
   :Interfaces__c_streams__int.int__

end

(* Module for defining the constant "ionbf" defined at i-cstrea.ads:60, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__ionbf
 use import "_gnatprove_standard".Main
 use        Interfaces__c_streams__int
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function ionbf 
   :Interfaces__c_streams__int.int__

end

(* Module for defining the constant "l_tmpnam" defined at i-cstrea.ads:63, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__l_tmpnam
 use import "_gnatprove_standard".Main
 use        Interfaces__c_streams__int
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function l_tmpnam 
   :Interfaces__c_streams__int.int__

end

(* Module for defining the constant "seek_cur" defined at i-cstrea.ads:66, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__seek_cur
 use import "_gnatprove_standard".Main
 use        Interfaces__c_streams__int
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function seek_cur 
   :Interfaces__c_streams__int.int__

end

(* Module for defining the constant "seek_end" defined at i-cstrea.ads:67, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__seek_end
 use import "_gnatprove_standard".Main
 use        Interfaces__c_streams__int
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function seek_end 
   :Interfaces__c_streams__int.int__

end

(* Module for defining the constant "seek_set" defined at i-cstrea.ads:68, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__seek_set
 use import "_gnatprove_standard".Main
 use        Interfaces__c_streams__int
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function seek_set 
   :Interfaces__c_streams__int.int__

end

(* Module for declaring a program function (and possibly a logic function) for "stdin" defined at i-cstrea.ads:71, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__c_streams__stdin
 use import "_gnatprove_standard".Main
 use        Interfaces__c_streams__files
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function stdin 
   (__void_param : unit)  :Interfaces__c_streams__files.files
 
 val stdin 
   (__void_param : unit)  :Interfaces__c_streams__files.files
  requires { true }
  ensures { ( result = (stdin ()) ) }


end

(* Module giving an empty axiom for the entity "stdin" defined at i-cstrea.ads:71, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__stdin__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "stdout" defined at i-cstrea.ads:72, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__c_streams__stdout
 use import "_gnatprove_standard".Main
 use        Interfaces__c_streams__files
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function stdout 
   (__void_param : unit)  :Interfaces__c_streams__files.files
 
 val stdout 
   (__void_param : unit)  :Interfaces__c_streams__files.files
  requires { true }
  ensures { ( result = (stdout ()) ) }


end

(* Module giving an empty axiom for the entity "stdout" defined at i-cstrea.ads:72, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__stdout__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "stderr" defined at i-cstrea.ads:73, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__c_streams__stderr
 use import "_gnatprove_standard".Main
 use        Interfaces__c_streams__files
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function stderr 
   (__void_param : unit)  :Interfaces__c_streams__files.files
 
 val stderr 
   (__void_param : unit)  :Interfaces__c_streams__files.files
  requires { true }
  ensures { ( result = (stderr ()) ) }


end

(* Module giving an empty axiom for the entity "stderr" defined at i-cstrea.ads:73, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__stderr__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "stream" defined at i-cstrea.ads:94, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__feof__stream
 use import "_gnatprove_standard".Main
 use        Interfaces__c_streams__files
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function stream 
   :Interfaces__c_streams__files.files

end

(* Module giving an empty axiom for the entity "stream" defined at i-cstrea.ads:94, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__feof__stream__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "feof" defined at i-cstrea.ads:94, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__c_streams__feof
 use import "_gnatprove_standard".Main
 use        Interfaces__c_streams__int
 use        Interfaces__c_streams__files
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function feof 
   (stream : Interfaces__c_streams__files.files)  :Interfaces__c_streams__int.int__
 
 val feof 
   (stream : Interfaces__c_streams__files.files)  :Interfaces__c_streams__int.int__
  requires { true }
  ensures { ( result = (feof stream) ) }


end

(* Module giving an empty axiom for the entity "feof" defined at i-cstrea.ads:94, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__feof__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "stream" defined at i-cstrea.ads:96, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__ferror__stream
 use import "_gnatprove_standard".Main
 use        Interfaces__c_streams__files
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function stream 
   :Interfaces__c_streams__files.files

end

(* Module giving an empty axiom for the entity "stream" defined at i-cstrea.ads:96, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__ferror__stream__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "ferror" defined at i-cstrea.ads:96, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__c_streams__ferror
 use import "_gnatprove_standard".Main
 use        Interfaces__c_streams__int
 use        Interfaces__c_streams__files
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function ferror 
   (stream : Interfaces__c_streams__files.files)  :Interfaces__c_streams__int.int__
 
 val ferror 
   (stream : Interfaces__c_streams__files.files)  :Interfaces__c_streams__int.int__
  requires { true }
  ensures { ( result = (ferror stream) ) }


end

(* Module giving an empty axiom for the entity "ferror" defined at i-cstrea.ads:96, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__ferror__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "stream" defined at i-cstrea.ads:105, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__fileno__stream
 use import "_gnatprove_standard".Main
 use        Interfaces__c_streams__files
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function stream 
   :Interfaces__c_streams__files.files

end

(* Module giving an empty axiom for the entity "stream" defined at i-cstrea.ads:105, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__fileno__stream__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "fileno" defined at i-cstrea.ads:105, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__c_streams__fileno
 use import "_gnatprove_standard".Main
 use        Interfaces__c_streams__int
 use        Interfaces__c_streams__files
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function fileno 
   (stream : Interfaces__c_streams__files.files)  :Interfaces__c_streams__int.int__
 
 val fileno 
   (stream : Interfaces__c_streams__files.files)  :Interfaces__c_streams__int.int__
  requires { true }
  ensures { ( result = (fileno stream) ) }


end

(* Module giving an empty axiom for the entity "fileno" defined at i-cstrea.ads:105, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__fileno__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "buffer" defined at i-cstrea.ads:129, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__fread__buffer
 use import "_gnatprove_standard".Main
 use        Interfaces__c_streams__voids
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function buffer 
   :Interfaces__c_streams__voids.voids

end

(* Module giving an empty axiom for the entity "buffer" defined at i-cstrea.ads:129, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__fread__buffer__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "size" defined at i-cstrea.ads:130, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__fread__size
 use import "_gnatprove_standard".Main
 use        Interfaces__c_streams__size_t
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function size 
   :Interfaces__c_streams__size_t.size_t

end

(* Module giving an empty axiom for the entity "size" defined at i-cstrea.ads:130, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__fread__size__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "count" defined at i-cstrea.ads:131, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__fread__count
 use import "_gnatprove_standard".Main
 use        Interfaces__c_streams__size_t
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function count 
   :Interfaces__c_streams__size_t.size_t

end

(* Module giving an empty axiom for the entity "count" defined at i-cstrea.ads:131, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__fread__count__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "stream" defined at i-cstrea.ads:132, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__fread__stream
 use import "_gnatprove_standard".Main
 use        Interfaces__c_streams__files
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function stream 
   :Interfaces__c_streams__files.files

end

(* Module giving an empty axiom for the entity "stream" defined at i-cstrea.ads:132, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__fread__stream__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "fread" defined at i-cstrea.ads:128, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__c_streams__fread
 use import "_gnatprove_standard".Main
 use        Interfaces__c_streams__size_t
 use        Interfaces__c_streams__files
 use        Interfaces__c_streams__voids
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function fread 
   (buffer : Interfaces__c_streams__voids.voids) (size : int) (count : int) (stream : Interfaces__c_streams__files.files)  :Interfaces__c_streams__size_t.size_t
 
 val fread 
   (buffer : Interfaces__c_streams__voids.voids) (size : int) (count : int) (stream : Interfaces__c_streams__files.files)  :Interfaces__c_streams__size_t.size_t
  requires { true }
  ensures { ( result = (fread buffer size count stream) ) }


end

(* Module giving an empty axiom for the entity "fread" defined at i-cstrea.ads:128, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__fread__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "buffer" defined at i-cstrea.ads:135, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__fread__2__buffer
 use import "_gnatprove_standard".Main
 use        Interfaces__c_streams__voids
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function buffer 
   :Interfaces__c_streams__voids.voids

end

(* Module giving an empty axiom for the entity "buffer" defined at i-cstrea.ads:135, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__fread__2__buffer__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "index" defined at i-cstrea.ads:136, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__fread__2__index
 use import "_gnatprove_standard".Main
 use        Interfaces__c_streams__size_t
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function index 
   :Interfaces__c_streams__size_t.size_t

end

(* Module giving an empty axiom for the entity "index" defined at i-cstrea.ads:136, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__fread__2__index__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "size" defined at i-cstrea.ads:137, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__fread__2__size
 use import "_gnatprove_standard".Main
 use        Interfaces__c_streams__size_t
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function size 
   :Interfaces__c_streams__size_t.size_t

end

(* Module giving an empty axiom for the entity "size" defined at i-cstrea.ads:137, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__fread__2__size__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "count" defined at i-cstrea.ads:138, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__fread__2__count
 use import "_gnatprove_standard".Main
 use        Interfaces__c_streams__size_t
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function count 
   :Interfaces__c_streams__size_t.size_t

end

(* Module giving an empty axiom for the entity "count" defined at i-cstrea.ads:138, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__fread__2__count__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "stream" defined at i-cstrea.ads:139, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__fread__2__stream
 use import "_gnatprove_standard".Main
 use        Interfaces__c_streams__files
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function stream 
   :Interfaces__c_streams__files.files

end

(* Module giving an empty axiom for the entity "stream" defined at i-cstrea.ads:139, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__fread__2__stream__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "fread__2" defined at i-cstrea.ads:134, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__c_streams__fread__2
 use import "_gnatprove_standard".Main
 use        Interfaces__c_streams__size_t
 use        Interfaces__c_streams__files
 use        Interfaces__c_streams__voids
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function fread__2 
   (buffer : Interfaces__c_streams__voids.voids) (index : int) (size : int) (count : int) (stream : Interfaces__c_streams__files.files)  :Interfaces__c_streams__size_t.size_t
 
 val fread__2 
   (buffer : Interfaces__c_streams__voids.voids) (index : int) (size : int) (count : int) (stream : Interfaces__c_streams__files.files)  :Interfaces__c_streams__size_t.size_t
  requires { true }
  ensures { ( result = (fread__2 buffer index size count stream) ) }


end

(* Module giving an empty axiom for the entity "fread__2" defined at i-cstrea.ads:134, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__fread__2__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "buffer" defined at i-cstrea.ads:173, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__fwrite__buffer
 use import "_gnatprove_standard".Main
 use        Interfaces__c_streams__voids
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function buffer 
   :Interfaces__c_streams__voids.voids

end

(* Module giving an empty axiom for the entity "buffer" defined at i-cstrea.ads:173, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__fwrite__buffer__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "size" defined at i-cstrea.ads:174, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__fwrite__size
 use import "_gnatprove_standard".Main
 use        Interfaces__c_streams__size_t
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function size 
   :Interfaces__c_streams__size_t.size_t

end

(* Module giving an empty axiom for the entity "size" defined at i-cstrea.ads:174, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__fwrite__size__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "count" defined at i-cstrea.ads:175, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__fwrite__count
 use import "_gnatprove_standard".Main
 use        Interfaces__c_streams__size_t
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function count 
   :Interfaces__c_streams__size_t.size_t

end

(* Module giving an empty axiom for the entity "count" defined at i-cstrea.ads:175, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__fwrite__count__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "stream" defined at i-cstrea.ads:176, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__fwrite__stream
 use import "_gnatprove_standard".Main
 use        Interfaces__c_streams__files
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function stream 
   :Interfaces__c_streams__files.files

end

(* Module giving an empty axiom for the entity "stream" defined at i-cstrea.ads:176, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__fwrite__stream__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "fwrite" defined at i-cstrea.ads:172, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__c_streams__fwrite
 use import "_gnatprove_standard".Main
 use        Interfaces__c_streams__size_t
 use        Interfaces__c_streams__files
 use        Interfaces__c_streams__voids
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function fwrite 
   (buffer : Interfaces__c_streams__voids.voids) (size : int) (count : int) (stream : Interfaces__c_streams__files.files)  :Interfaces__c_streams__size_t.size_t
 
 val fwrite 
   (buffer : Interfaces__c_streams__voids.voids) (size : int) (count : int) (stream : Interfaces__c_streams__files.files)  :Interfaces__c_streams__size_t.size_t
  requires { true }
  ensures { ( result = (fwrite buffer size count stream) ) }


end

(* Module giving an empty axiom for the entity "fwrite" defined at i-cstrea.ads:172, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__fwrite__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "stream" defined at i-cstrea.ads:186, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__setvbuf__stream
 use import "_gnatprove_standard".Main
 use        Interfaces__c_streams__files
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function stream 
   :Interfaces__c_streams__files.files

end

(* Module giving an empty axiom for the entity "stream" defined at i-cstrea.ads:186, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__setvbuf__stream__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "buffer" defined at i-cstrea.ads:187, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__setvbuf__buffer
 use import "_gnatprove_standard".Main
 use        Interfaces__c_streams__chars
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function buffer 
   :Interfaces__c_streams__chars.chars

end

(* Module giving an empty axiom for the entity "buffer" defined at i-cstrea.ads:187, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__setvbuf__buffer__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "mode" defined at i-cstrea.ads:188, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__setvbuf__mode
 use import "_gnatprove_standard".Main
 use        Interfaces__c_streams__int
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function mode 
   :Interfaces__c_streams__int.int__

end

(* Module giving an empty axiom for the entity "mode" defined at i-cstrea.ads:188, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__setvbuf__mode__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "size" defined at i-cstrea.ads:189, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__setvbuf__size
 use import "_gnatprove_standard".Main
 use        Interfaces__c_streams__size_t
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function size 
   :Interfaces__c_streams__size_t.size_t

end

(* Module giving an empty axiom for the entity "size" defined at i-cstrea.ads:189, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__setvbuf__size__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "setvbuf" defined at i-cstrea.ads:185, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__c_streams__setvbuf
 use import "_gnatprove_standard".Main
 use        Interfaces__c_streams__int
 use        Interfaces__c_streams__chars
 use        Interfaces__c_streams__files
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function setvbuf 
   (stream : Interfaces__c_streams__files.files) (buffer : Interfaces__c_streams__chars.chars) (mode : int) (size : int)  :Interfaces__c_streams__int.int__
 
 val setvbuf 
   (stream : Interfaces__c_streams__files.files) (buffer : Interfaces__c_streams__chars.chars) (mode : int) (size : int)  :Interfaces__c_streams__int.int__
  requires { true }
  ensures { ( result = (setvbuf stream buffer mode size) ) }


end

(* Module giving an empty axiom for the entity "setvbuf" defined at i-cstrea.ads:185, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__setvbuf__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "name" defined at i-cstrea.ads:213, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__file_exists__name
 use import "_gnatprove_standard".Main
 use        Interfaces__c_streams__chars
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function name 
   :Interfaces__c_streams__chars.chars

end

(* Module giving an empty axiom for the entity "name" defined at i-cstrea.ads:213, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__file_exists__name__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "file_exists" defined at i-cstrea.ads:213, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__c_streams__file_exists
 use import "_gnatprove_standard".Main
 use        Interfaces__c_streams__int
 use        Interfaces__c_streams__chars
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function file_exists 
   (name : Interfaces__c_streams__chars.chars)  :Interfaces__c_streams__int.int__
 
 val file_exists 
   (name : Interfaces__c_streams__chars.chars)  :Interfaces__c_streams__int.int__
  requires { true }
  ensures { ( result = (file_exists name) ) }


end

(* Module giving an empty axiom for the entity "file_exists" defined at i-cstrea.ads:213, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__file_exists__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "handle" defined at i-cstrea.ads:216, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__is_regular_file__handle
 use import "_gnatprove_standard".Main
 use        Interfaces__c_streams__int
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function handle 
   :Interfaces__c_streams__int.int__

end

(* Module giving an empty axiom for the entity "handle" defined at i-cstrea.ads:216, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__is_regular_file__handle__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "is_regular_file" defined at i-cstrea.ads:216, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__c_streams__is_regular_file
 use import "_gnatprove_standard".Main
 use        Interfaces__c_streams__int
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function is_regular_file 
   (handle : int)  :Interfaces__c_streams__int.int__
 
 val is_regular_file 
   (handle : int)  :Interfaces__c_streams__int.int__
  requires { true }
  ensures { ( result = (is_regular_file handle) ) }


end

(* Module giving an empty axiom for the entity "is_regular_file" defined at i-cstrea.ads:216, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__is_regular_file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "handle" defined at i-cstrea.ads:224, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__set_binary_mode__handle
 use import "_gnatprove_standard".Main
 use        Interfaces__c_streams__int
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function handle 
   :Interfaces__c_streams__int.int__

end

(* Module giving an empty axiom for the entity "handle" defined at i-cstrea.ads:224, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__set_binary_mode__handle__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "handle" defined at i-cstrea.ads:225, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__set_text_mode__handle
 use import "_gnatprove_standard".Main
 use        Interfaces__c_streams__int
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function handle 
   :Interfaces__c_streams__int.int__

end

(* Module giving an empty axiom for the entity "handle" defined at i-cstrea.ads:225, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__set_text_mode__handle__axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "content_encoding" defined at i-cstrea.ads:231, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c_streams__content_encoding
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int

 type content_encoding "bounded_type" 
 
 function first 
   :int =
  0
 
 function last 
   :int =
  5
 
 predicate in_range
   (x : int)  =
  ( ( first <= x ) /\ ( x <= last ) )
 
 clone export "ada__model".Static_Discrete with
 type t = content_encoding, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "text_content_encoding" defined at i-cstrea.ads:249, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c_streams__text_content_encoding
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int

 type text_content_encoding "bounded_type" 
 
 function first 
   :int =
  1
 
 function last 
   :int =
  5
 
 predicate in_range
   (x : int)  =
  ( ( first <= x ) /\ ( x <= last ) )
 
 clone export "ada__model".Static_Discrete with
 type t = text_content_encoding, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "non_default_text_content_encoding" defined at i-cstrea.ads:252, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__c_streams__non_default_text_content_encoding
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int

 type non_default_text_content_encoding "bounded_type" 
 
 function first 
   :int =
  2
 
 function last 
   :int =
  5
 
 predicate in_range
   (x : int)  =
  ( ( first <= x ) /\ ( x <= last ) )
 
 clone export "ada__model".Static_Discrete with
 type t = non_default_text_content_encoding, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for defining the constant "handle" defined at i-cstrea.ads:255, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__set_mode__handle
 use import "_gnatprove_standard".Main
 use        Interfaces__c_streams__int
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function handle 
   :Interfaces__c_streams__int.int__

end

(* Module giving an empty axiom for the entity "handle" defined at i-cstrea.ads:255, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__set_mode__handle__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "mode" defined at i-cstrea.ads:255, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__set_mode__mode
 use import "_gnatprove_standard".Main
 use        Interfaces__c_streams__content_encoding
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function mode 
   :Interfaces__c_streams__content_encoding.content_encoding

end

(* Module giving an empty axiom for the entity "mode" defined at i-cstrea.ads:255, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__set_mode__mode__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "nam" defined at i-cstrea.ads:263, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__full_name__nam
 use import "_gnatprove_standard".Main
 use        Interfaces__c_streams__chars
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function nam 
   :Interfaces__c_streams__chars.chars

end

(* Module giving an empty axiom for the entity "nam" defined at i-cstrea.ads:263, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__full_name__nam__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "buffer" defined at i-cstrea.ads:263, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__full_name__buffer
 use import "_gnatprove_standard".Main
 use        Interfaces__c_streams__chars
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function buffer 
   :Interfaces__c_streams__chars.chars

end

(* Module giving an empty axiom for the entity "buffer" defined at i-cstrea.ads:263, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__full_name__buffer__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "max_path_len" defined at i-cstrea.ads:271, created in Gnat2Why.Decls.Translate_Constant *)
module Interfaces__c_streams__max_path_len
 use import "_gnatprove_standard".Main
 use        Standard__integer
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function max_path_len 
   :Standard__integer.integer

end

(* Module for axiomatizing type "file_mode" defined at s-ficobl.ads:63, created in Gnat2Why.Types.Translate_Type *)
module System__file_control_block__file_mode
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int

 type file_mode "bounded_type" 
 
 function first 
   :int =
  0
 
 function last 
   :int =
  3
 
 predicate in_range
   (x : int)  =
  ( ( first <= x ) /\ ( x <= last ) )
 
 clone export "ada__model".Static_Discrete with
 type t = file_mode, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "read_file_mode" defined at s-ficobl.ads:64, created in Gnat2Why.Types.Translate_Type *)
module System__file_control_block__read_file_mode
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int

 type read_file_mode "bounded_type" 
 
 function first 
   :int =
  0
 
 function last 
   :int =
  1
 
 predicate in_range
   (x : int)  =
  ( ( first <= x ) /\ ( x <= last ) )
 
 clone export "ada__model".Static_Discrete with
 type t = read_file_mode, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "shared_status_type" defined at s-ficobl.ads:69, created in Gnat2Why.Types.Translate_Type *)
module System__file_control_block__shared_status_type
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int

 type shared_status_type "bounded_type" 
 
 function first 
   :int =
  0
 
 function last 
   :int =
  2
 
 predicate in_range
   (x : int)  =
  ( ( first <= x ) /\ ( x <= last ) )
 
 clone export "ada__model".Static_Discrete with
 type t = shared_status_type, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "Twc_encoding_methodB" defined at s-wchcon.ads:94, created in Gnat2Why.Types.Translate_Type *)
module System__wch_con__Twc_encoding_methodB
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int

 type twc_encoding_methodB "bounded_type" 
 
 function first 
   :int =
  ( -128 )
 
 function last 
   :int =
  127
 
 predicate in_range
   (x : int)  =
  ( ( first <= x ) /\ ( x <= last ) )
 
 clone export "ada__model".Static_Discrete with
 type t = twc_encoding_methodB, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "wc_encoding_method" defined at s-wchcon.ads:94, created in Gnat2Why.Types.Translate_Type *)
module System__wch_con__wc_encoding_method
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int

 type wc_encoding_method "bounded_type" 
 
 function first 
   :int =
  1
 
 function last 
   :int =
  6
 
 predicate in_range
   (x : int)  =
  ( ( first <= x ) /\ ( x <= last ) )
 
 clone export "ada__model".Static_Discrete with
 type t = wc_encoding_method, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for defining the constant "wcem_hex" defined at s-wchcon.ads:100, created in Gnat2Why.Decls.Translate_Constant *)
module System__wch_con__wcem_hex
 use import "_gnatprove_standard".Main
 use        System__wch_con__wc_encoding_method
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function wcem_hex 
   :System__wch_con__wc_encoding_method.wc_encoding_method

end

(* Module for defining the constant "wcem_upper" defined at s-wchcon.ads:108, created in Gnat2Why.Decls.Translate_Constant *)
module System__wch_con__wcem_upper
 use import "_gnatprove_standard".Main
 use        System__wch_con__wc_encoding_method
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function wcem_upper 
   :System__wch_con__wc_encoding_method.wc_encoding_method

end

(* Module for defining the constant "wcem_shift_jis" defined at s-wchcon.ads:117, created in Gnat2Why.Decls.Translate_Constant *)
module System__wch_con__wcem_shift_jis
 use import "_gnatprove_standard".Main
 use        System__wch_con__wc_encoding_method
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function wcem_shift_jis 
   :System__wch_con__wc_encoding_method.wc_encoding_method

end

(* Module for defining the constant "wcem_euc" defined at s-wchcon.ads:126, created in Gnat2Why.Decls.Translate_Constant *)
module System__wch_con__wcem_euc
 use import "_gnatprove_standard".Main
 use        System__wch_con__wc_encoding_method
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function wcem_euc 
   :System__wch_con__wc_encoding_method.wc_encoding_method

end

(* Module for defining the constant "wcem_utf8" defined at s-wchcon.ads:134, created in Gnat2Why.Decls.Translate_Constant *)
module System__wch_con__wcem_utf8
 use import "_gnatprove_standard".Main
 use        System__wch_con__wc_encoding_method
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function wcem_utf8 
   :System__wch_con__wc_encoding_method.wc_encoding_method

end

(* Module for defining the constant "wcem_brackets" defined at s-wchcon.ads:156, created in Gnat2Why.Decls.Translate_Constant *)
module System__wch_con__wcem_brackets
 use import "_gnatprove_standard".Main
 use        System__wch_con__wc_encoding_method
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function wcem_brackets 
   :System__wch_con__wc_encoding_method.wc_encoding_method

end

(* Module for axiomatizing type "Twc_encoding_lettersB" defined at s-wchcon.ads:169, created in Gnat2Why.Types.Translate_Type *)
module System__wch_con__Twc_encoding_lettersB
 use import "_gnatprove_standard".Main
 use        Standard__character
 use        System__wch_con__wc_encoding_method
 use        System__wch_con__Twc_encoding_methodB
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Array__1

 clone export "ada__model".Unconstr_Array with
 type component_type = Standard__character.character, 
 type base_type = System__wch_con__Twc_encoding_methodB.twc_encoding_methodB, 
 function to_int = System__wch_con__Twc_encoding_methodB.to_int, 
 predicate in_range_base = System__wch_con__Twc_encoding_methodB.in_range, 
 predicate in_range = System__wch_con__wc_encoding_method.in_range
 
 type twc_encoding_lettersB  = 
  __t
 
 clone export "ada__model".Array_Comparison_Axiom with
 type component_type = Standard__character.character, 
 function to_int = Standard__character.to_int

end

(* Module for axiomatizing type "Twc_encoding_lettersT" defined at s-wchcon.ads:169, created in Gnat2Why.Types.Translate_Type *)
module System__wch_con__Twc_encoding_lettersT
 use import "_gnatprove_standard".Main
 use        Standard__character
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Array__1

 function first 
   :int =
  1
 
 function last 
   :int =
  6
 
 clone export "ada__model".Constr_Array with
 type component_type = Standard__character.character, 
 function first = first, 
 function last = last
 
 type twc_encoding_lettersT  = 
  __t
 
 clone export "ada__model".Array_Comparison_Axiom with
 type component_type = Standard__character.character, 
 function to_int = Standard__character.to_int

end

(* Module for axiomatizing type "T3s" defined at s-wchcon.ads:170, created in Gnat2Why.Types.Translate_Type *)
module System__wch_con__T3s
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int

 type t3s "bounded_type" 
 
 function first 
   :int =
  1
 
 function last 
   :int =
  6
 
 predicate in_range
   (x : int)  =
  ( ( first <= x ) /\ ( x <= last ) )
 
 clone export "ada__model".Static_Discrete with
 type t = t3s, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "T4s" defined at s-wchcon.ads:170, created in Gnat2Why.Types.Translate_Type *)
module System__wch_con__T4s
 use import "_gnatprove_standard".Main
 use        Standard__character
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Array__1

 function first 
   :int =
  1
 
 function last 
   :int =
  6
 
 clone export "ada__model".Constr_Array with
 type component_type = Standard__character.character, 
 function first = first, 
 function last = last
 
 type t4s  = 
  __t
 
 clone export "ada__model".Array_Comparison_Axiom with
 type component_type = Standard__character.character, 
 function to_int = Standard__character.to_int

end

(* Module for defining the constant "wc_encoding_letters" defined at s-wchcon.ads:169, created in Gnat2Why.Decls.Translate_Constant *)
module System__wch_con__wc_encoding_letters
 use import "_gnatprove_standard".Main
 use        System__wch_con__Twc_encoding_lettersT
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Array__1

 function wc_encoding_letters 
   :System__wch_con__Twc_encoding_lettersT.twc_encoding_lettersT

end

(* Module for defining the value of the aggregate at s-wchcon.ads:170, created in Gnat2Why.Expr.Transform_Aggregate.Generate_Logic_Function *)
module Temp___main_1
 use import "_gnatprove_standard".Main
 use        Standard__character
 use        System__wch_con__T4s
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Array__1

 function temp___main_1 
   (temp___main_3 : Standard__character.character) (temp___main_4 : Standard__character.character) (temp___main_5 : Standard__character.character) (temp___main_6 : Standard__character.character) (temp___main_7 : Standard__character.character) (temp___main_8 : Standard__character.character)  :System__wch_con__T4s.t4s
 
 axiom def_axiom :
  (forall temp___main_3 temp___main_4 temp___main_5 temp___main_6 temp___main_7 temp___main_8  : Standard__character.character [(temp___main_1 temp___main_3 temp___main_4 temp___main_5 temp___main_6 temp___main_7 temp___main_8)].
   (let temp___main_2 = (temp___main_1 temp___main_3 temp___main_4 temp___main_5 temp___main_6 temp___main_7 temp___main_8) in (
    ( ( ( ( ( ( (Array__1.get temp___main_2 1) = temp___main_3 ) /\ ( (Array__1.get temp___main_2 2) = temp___main_4 ) ) /\ ( (Array__1.get temp___main_2 3) = temp___main_5 ) ) /\ ( (Array__1.get temp___main_2 4) = temp___main_6 ) ) /\ ( (Array__1.get temp___main_2 5) = temp___main_7 ) ) /\ ( (Array__1.get temp___main_2 6) = temp___main_8 ) )))
  )

end

(* Module for axiomatizing type "wc_esc_encoding_method" defined at s-wchcon.ads:180, created in Gnat2Why.Types.Translate_Type *)
module System__wch_con__wc_esc_encoding_method
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int

 type wc_esc_encoding_method "bounded_type" 
 
 function first 
   :int =
  1
 
 function last 
   :int =
  1
 
 predicate in_range
   (x : int)  =
  ( ( first <= x ) /\ ( x <= last ) )
 
 clone export "ada__model".Static_Discrete with
 type t = wc_esc_encoding_method, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "wc_upper_half_encoding_method" defined at s-wchcon.ads:184, created in Gnat2Why.Types.Translate_Type *)
module System__wch_con__wc_upper_half_encoding_method
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int

 type wc_upper_half_encoding_method "bounded_type" 
 
 function first 
   :int =
  2
 
 function last 
   :int =
  5
 
 predicate in_range
   (x : int)  =
  ( ( first <= x ) /\ ( x <= last ) )
 
 clone export "ada__model".Static_Discrete with
 type t = wc_upper_half_encoding_method, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "Twc_longest_sequencesB" defined at s-wchcon.ads:193, created in Gnat2Why.Types.Translate_Type *)
module System__wch_con__Twc_longest_sequencesB
 use import "_gnatprove_standard".Main
 use        Standard__natural
 use        System__wch_con__wc_encoding_method
 use        System__wch_con__Twc_encoding_methodB
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Array__1

 clone export "ada__model".Unconstr_Array with
 type component_type = Standard__natural.natural, 
 type base_type = System__wch_con__Twc_encoding_methodB.twc_encoding_methodB, 
 function to_int = System__wch_con__Twc_encoding_methodB.to_int, 
 predicate in_range_base = System__wch_con__Twc_encoding_methodB.in_range, 
 predicate in_range = System__wch_con__wc_encoding_method.in_range
 
 type twc_longest_sequencesB  = 
  __t
 
 clone export "ada__model".Array_Comparison_Axiom with
 type component_type = Standard__natural.natural, 
 function to_int = Standard__natural.to_int

end

(* Module for axiomatizing type "Twc_longest_sequencesT" defined at s-wchcon.ads:193, created in Gnat2Why.Types.Translate_Type *)
module System__wch_con__Twc_longest_sequencesT
 use import "_gnatprove_standard".Main
 use        Standard__natural
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Array__1

 function first 
   :int =
  1
 
 function last 
   :int =
  6
 
 clone export "ada__model".Constr_Array with
 type component_type = Standard__natural.natural, 
 function first = first, 
 function last = last
 
 type twc_longest_sequencesT  = 
  __t
 
 clone export "ada__model".Array_Comparison_Axiom with
 type component_type = Standard__natural.natural, 
 function to_int = Standard__natural.to_int

end

(* Module for axiomatizing type "T7s" defined at s-wchcon.ads:194, created in Gnat2Why.Types.Translate_Type *)
module System__wch_con__T7s
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int

 type t7s "bounded_type" 
 
 function first 
   :int =
  1
 
 function last 
   :int =
  6
 
 predicate in_range
   (x : int)  =
  ( ( first <= x ) /\ ( x <= last ) )
 
 clone export "ada__model".Static_Discrete with
 type t = t7s, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "T8s" defined at s-wchcon.ads:194, created in Gnat2Why.Types.Translate_Type *)
module System__wch_con__T8s
 use import "_gnatprove_standard".Main
 use        Standard__natural
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Array__1

 function first 
   :int =
  1
 
 function last 
   :int =
  6
 
 clone export "ada__model".Constr_Array with
 type component_type = Standard__natural.natural, 
 function first = first, 
 function last = last
 
 type t8s  = 
  __t
 
 clone export "ada__model".Array_Comparison_Axiom with
 type component_type = Standard__natural.natural, 
 function to_int = Standard__natural.to_int

end

(* Module for defining the constant "wc_longest_sequences" defined at s-wchcon.ads:193, created in Gnat2Why.Decls.Translate_Constant *)
module System__wch_con__wc_longest_sequences
 use import "_gnatprove_standard".Main
 use        System__wch_con__Twc_longest_sequencesT
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Array__1

 function wc_longest_sequences 
   :System__wch_con__Twc_longest_sequencesT.twc_longest_sequencesT

end

(* Module for defining the value of the aggregate at s-wchcon.ads:194, created in Gnat2Why.Expr.Transform_Aggregate.Generate_Logic_Function *)
module Temp___main_10
 use import "_gnatprove_standard".Main
 use        Standard__natural
 use        System__wch_con__T8s
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Array__1

 function temp___main_10 
   (temp___main_12 : Standard__natural.natural) (temp___main_13 : Standard__natural.natural) (temp___main_14 : Standard__natural.natural) (temp___main_15 : Standard__natural.natural) (temp___main_16 : Standard__natural.natural) (temp___main_17 : Standard__natural.natural)  :System__wch_con__T8s.t8s
 
 axiom def_axiom :
  (forall temp___main_12 temp___main_13 temp___main_14 temp___main_15 temp___main_16 temp___main_17  : Standard__natural.natural [(temp___main_10 temp___main_12 temp___main_13 temp___main_14 temp___main_15 temp___main_16 temp___main_17)].
   (let temp___main_11 = (temp___main_10 temp___main_12 temp___main_13 temp___main_14 temp___main_15 temp___main_16 temp___main_17) in (
    ( ( ( ( ( ( (Array__1.get temp___main_11 1) = temp___main_12 ) /\ ( (Array__1.get temp___main_11 2) = temp___main_13 ) ) /\ ( (Array__1.get temp___main_11 3) = temp___main_14 ) ) /\ ( (Array__1.get temp___main_11 4) = temp___main_15 ) ) /\ ( (Array__1.get temp___main_11 5) = temp___main_16 ) ) /\ ( (Array__1.get temp___main_11 6) = temp___main_17 ) )))
  )

end

(* Module for defining the constant "c" defined at s-wchcon.ads:203, created in Gnat2Why.Decls.Translate_Constant *)
module System__wch_con__get_wc_encoding_method__c
 use import "_gnatprove_standard".Main
 use        Standard__character
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function c 
   :Standard__character.character

end

(* Module giving an empty axiom for the entity "c" defined at s-wchcon.ads:203, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__wch_con__get_wc_encoding_method__c__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "get_wc_encoding_method" defined at s-wchcon.ads:203, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__wch_con__get_wc_encoding_method
 use import "_gnatprove_standard".Main
 use        System__wch_con__wc_encoding_method
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function get_wc_encoding_method 
   (c : int)  :System__wch_con__wc_encoding_method.wc_encoding_method
 
 val get_wc_encoding_method 
   (c : int)  :System__wch_con__wc_encoding_method.wc_encoding_method
  requires { true }
  ensures { ( result = (get_wc_encoding_method c) ) }


end

(* Module giving an empty axiom for the entity "get_wc_encoding_method" defined at s-wchcon.ads:203, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__wch_con__get_wc_encoding_method__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "s" defined at s-wchcon.ads:207, created in Gnat2Why.Decls.Translate_Constant *)
module System__wch_con__get_wc_encoding_method__2__s
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Array__1

 function s 
   :Standard__string.string

end

(* Module giving an empty axiom for the entity "s" defined at s-wchcon.ads:207, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__wch_con__get_wc_encoding_method__2__s__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "get_wc_encoding_method__2" defined at s-wchcon.ads:207, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__wch_con__get_wc_encoding_method__2
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        System__wch_con__wc_encoding_method
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Array__1

 function get_wc_encoding_method__2 
   (s : Standard__string.string)  :System__wch_con__wc_encoding_method.wc_encoding_method
 
 val get_wc_encoding_method__2 
   (s : Standard__string.string)  :System__wch_con__wc_encoding_method.wc_encoding_method
  requires { true }
  ensures { ( result = (get_wc_encoding_method__2 s) ) }


end

(* Module giving an empty axiom for the entity "get_wc_encoding_method__2" defined at s-wchcon.ads:207, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__wch_con__get_wc_encoding_method__2__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "c" defined at s-wchcon.ads:213, created in Gnat2Why.Decls.Translate_Constant *)
module System__wch_con__is_start_of_encoding__c
 use import "_gnatprove_standard".Main
 use        Standard__character
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function c 
   :Standard__character.character

end

(* Module giving an empty axiom for the entity "c" defined at s-wchcon.ads:213, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__wch_con__is_start_of_encoding__c__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "em" defined at s-wchcon.ads:214, created in Gnat2Why.Decls.Translate_Constant *)
module System__wch_con__is_start_of_encoding__em
 use import "_gnatprove_standard".Main
 use        System__wch_con__wc_encoding_method
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function em 
   :System__wch_con__wc_encoding_method.wc_encoding_method

end

(* Module giving an empty axiom for the entity "em" defined at s-wchcon.ads:214, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__wch_con__is_start_of_encoding__em__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "is_start_of_encoding" defined at s-wchcon.ads:212, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__wch_con__is_start_of_encoding
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function is_start_of_encoding 
   (c : int) (em : int)  :bool
 
 val is_start_of_encoding 
   (c : int) (em : int)  :bool
  requires { true }
  ensures { ( result = (is_start_of_encoding c em) ) }


end

(* Module giving an empty axiom for the entity "is_start_of_encoding" defined at s-wchcon.ads:212, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__wch_con__is_start_of_encoding__axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "file_type" defined at a-textio.ads:52, created in Gnat2Why.Types.Translate_Type *)
module Ada__text_io__file_type
 use import "_gnatprove_standard".Main

 type file_type  = 
  __private
 
 function bool_eq 
   (x : __private) (y : __private)  :bool
 
 function user_eq 
   (x : __private) (y : __private)  :bool

end

(* Module for axiomatizing type "file_mode" defined at a-textio.ads:53, created in Gnat2Why.Types.Translate_Type *)
module Ada__text_io__file_mode
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int

 type file_mode "bounded_type" 
 
 function first 
   :int =
  0
 
 function last 
   :int =
  2
 
 predicate in_range
   (x : int)  =
  ( ( first <= x ) /\ ( x <= last ) )
 
 clone export "ada__model".Static_Discrete with
 type t = file_mode, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "TcountB" defined at a-textio.ads:64, created in Gnat2Why.Types.Translate_Type *)
module Ada__text_io__TcountB
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int

 type tcountB "bounded_type" 
 
 function first 
   :int =
  ( -2147483648 )
 
 function last 
   :int =
  2147483647
 
 predicate in_range
   (x : int)  =
  ( ( first <= x ) /\ ( x <= last ) )
 
 clone export "ada__model".Static_Discrete with
 type t = tcountB, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "count" defined at a-textio.ads:64, created in Gnat2Why.Types.Translate_Type *)
module Ada__text_io__count
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int

 type count "bounded_type" 
 
 function first 
   :int =
  0
 
 function last 
   :int =
  2147483647
 
 predicate in_range
   (x : int)  =
  ( ( first <= x ) /\ ( x <= last ) )
 
 clone export "ada__model".Static_Discrete with
 type t = count, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "positive_count" defined at a-textio.ads:68, created in Gnat2Why.Types.Translate_Type *)
module Ada__text_io__positive_count
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int

 type positive_count "bounded_type" 
 
 function first 
   :int =
  1
 
 function last 
   :int =
  2147483647
 
 predicate in_range
   (x : int)  =
  ( ( first <= x ) /\ ( x <= last ) )
 
 clone export "ada__model".Static_Discrete with
 type t = positive_count, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for defining the constant "unbounded" defined at a-textio.ads:70, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__unbounded
 use import "_gnatprove_standard".Main
 use        Ada__text_io__count
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function unbounded 
   :Ada__text_io__count.count

end

(* Module for axiomatizing type "field" defined at a-textio.ads:73, created in Gnat2Why.Types.Translate_Type *)
module Ada__text_io__field
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int

 type field "bounded_type" 
 
 function first 
   :int =
  0
 
 function last 
   :int =
  255
 
 predicate in_range
   (x : int)  =
  ( ( first <= x ) /\ ( x <= last ) )
 
 clone export "ada__model".Static_Discrete with
 type t = field, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "number_base" defined at a-textio.ads:78, created in Gnat2Why.Types.Translate_Type *)
module Ada__text_io__number_base
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int

 type number_base "bounded_type" 
 
 function first 
   :int =
  2
 
 function last 
   :int =
  16
 
 predicate in_range
   (x : int)  =
  ( ( first <= x ) /\ ( x <= last ) )
 
 clone export "ada__model".Static_Discrete with
 type t = number_base, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "type_set" defined at a-textio.ads:80, created in Gnat2Why.Types.Translate_Type *)
module Ada__text_io__type_set
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int

 type type_set "bounded_type" 
 
 function first 
   :int =
  0
 
 function last 
   :int =
  1
 
 predicate in_range
   (x : int)  =
  ( ( first <= x ) /\ ( x <= last ) )
 
 clone export "ada__model".Static_Discrete with
 type t = type_set, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for defining the constant "mode" defined at a-textio.ads:88, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__create__mode
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_mode
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function mode 
   :Ada__text_io__file_mode.file_mode

end

(* Module giving an empty axiom for the entity "mode" defined at a-textio.ads:88, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__create__mode__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "name" defined at a-textio.ads:89, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__create__name
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Array__1

 function name 
   :Standard__string.string

end

(* Module giving an empty axiom for the entity "name" defined at a-textio.ads:89, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__create__name__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "form" defined at a-textio.ads:90, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__create__form
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Array__1

 function form 
   :Standard__string.string

end

(* Module giving an empty axiom for the entity "form" defined at a-textio.ads:90, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__create__form__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "mode" defined at a-textio.ads:94, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__open__mode
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_mode
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function mode 
   :Ada__text_io__file_mode.file_mode

end

(* Module giving an empty axiom for the entity "mode" defined at a-textio.ads:94, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__open__mode__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "name" defined at a-textio.ads:95, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__open__name
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Array__1

 function name 
   :Standard__string.string

end

(* Module giving an empty axiom for the entity "name" defined at a-textio.ads:95, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__open__name__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "form" defined at a-textio.ads:96, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__open__form
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Array__1

 function form 
   :Standard__string.string

end

(* Module giving an empty axiom for the entity "form" defined at a-textio.ads:96, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__open__form__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "mode" defined at a-textio.ads:100, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__reset__mode
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_mode
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function mode 
   :Ada__text_io__file_mode.file_mode

end

(* Module giving an empty axiom for the entity "mode" defined at a-textio.ads:100, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__reset__mode__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "file" defined at a-textio.ads:103, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__mode__file
 use import "_gnatprove_standard".Main

 function file 
   :__private

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:103, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__mode__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "mode" defined at a-textio.ads:103, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__mode
 use import "_gnatprove_standard".Main
 use        Ada__text_io__file_mode
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function mode 
   (file : __private)  :Ada__text_io__file_mode.file_mode
 
 val mode 
   (file : __private)  :Ada__text_io__file_mode.file_mode
  requires { true }
  ensures { ( result = (mode file) ) }


end

(* Module giving an empty axiom for the entity "mode" defined at a-textio.ads:103, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__mode__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "file" defined at a-textio.ads:104, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__name__file
 use import "_gnatprove_standard".Main

 function file 
   :__private

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:104, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__name__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "name" defined at a-textio.ads:104, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__name
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Array__1

 function name 
   (file : __private)  :Standard__string.string
 
 val name 
   (file : __private)  :Standard__string.string
  requires { true }
  ensures { ( result = (name file) ) }


end

(* Module giving an empty axiom for the entity "name" defined at a-textio.ads:104, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__name__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "file" defined at a-textio.ads:105, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__form__file
 use import "_gnatprove_standard".Main

 function file 
   :__private

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:105, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__form__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "form" defined at a-textio.ads:105, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__form
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Array__1

 function form 
   (file : __private)  :Standard__string.string
 
 val form 
   (file : __private)  :Standard__string.string
  requires { true }
  ensures { ( result = (form file) ) }


end

(* Module giving an empty axiom for the entity "form" defined at a-textio.ads:105, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__form__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "file" defined at a-textio.ads:107, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__is_open__file
 use import "_gnatprove_standard".Main

 function file 
   :__private

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:107, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__is_open__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "is_open" defined at a-textio.ads:107, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__is_open
 use import "_gnatprove_standard".Main

 function is_open 
   (file : __private)  :bool
 
 val is_open 
   (file : __private)  :bool
  requires { true }
  ensures { ( result = (is_open file) ) }


end

(* Module giving an empty axiom for the entity "is_open" defined at a-textio.ads:107, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__is_open__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "file" defined at a-textio.ads:113, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__set_input__file
 use import "_gnatprove_standard".Main

 function file 
   :__private

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:113, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__set_input__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "file" defined at a-textio.ads:114, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__set_output__file
 use import "_gnatprove_standard".Main

 function file 
   :__private

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:114, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__set_output__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "file" defined at a-textio.ads:115, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__set_error__file
 use import "_gnatprove_standard".Main

 function file 
   :__private

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:115, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__set_error__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "standard_input" defined at a-textio.ads:117, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__standard_input
 use import "_gnatprove_standard".Main

 function standard_input 
   (__void_param : unit)  :__private
 
 val standard_input 
   (__void_param : unit)  :__private
  requires { true }
  ensures { ( result = (standard_input ()) ) }


end

(* Module giving an empty axiom for the entity "standard_input" defined at a-textio.ads:117, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__standard_input__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "standard_output" defined at a-textio.ads:118, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__standard_output
 use import "_gnatprove_standard".Main

 function standard_output 
   (__void_param : unit)  :__private
 
 val standard_output 
   (__void_param : unit)  :__private
  requires { true }
  ensures { ( result = (standard_output ()) ) }


end

(* Module giving an empty axiom for the entity "standard_output" defined at a-textio.ads:118, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__standard_output__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "standard_error" defined at a-textio.ads:119, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__standard_error
 use import "_gnatprove_standard".Main

 function standard_error 
   (__void_param : unit)  :__private
 
 val standard_error 
   (__void_param : unit)  :__private
  requires { true }
  ensures { ( result = (standard_error ()) ) }


end

(* Module giving an empty axiom for the entity "standard_error" defined at a-textio.ads:119, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__standard_error__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "current_input" defined at a-textio.ads:121, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__current_input
 use import "_gnatprove_standard".Main

 function current_input 
   (__void_param : unit)  :__private
 
 val current_input 
   (__void_param : unit)  :__private
  requires { true }
  ensures { ( result = (current_input ()) ) }


end

(* Module giving an empty axiom for the entity "current_input" defined at a-textio.ads:121, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__current_input__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "current_output" defined at a-textio.ads:122, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__current_output
 use import "_gnatprove_standard".Main

 function current_output 
   (__void_param : unit)  :__private
 
 val current_output 
   (__void_param : unit)  :__private
  requires { true }
  ensures { ( result = (current_output ()) ) }


end

(* Module giving an empty axiom for the entity "current_output" defined at a-textio.ads:122, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__current_output__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "current_error" defined at a-textio.ads:123, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__current_error
 use import "_gnatprove_standard".Main

 function current_error 
   (__void_param : unit)  :__private
 
 val current_error 
   (__void_param : unit)  :__private
  requires { true }
  ensures { ( result = (current_error ()) ) }


end

(* Module giving an empty axiom for the entity "current_error" defined at a-textio.ads:123, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__current_error__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "file" defined at a-textio.ads:142, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__flush__file
 use import "_gnatprove_standard".Main

 function file 
   :__private

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:142, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__flush__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "file" defined at a-textio.ads:149, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__set_line_length__file
 use import "_gnatprove_standard".Main

 function file 
   :__private

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:149, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__set_line_length__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "to" defined at a-textio.ads:149, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__set_line_length__to
 use import "_gnatprove_standard".Main
 use        Ada__text_io__count
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function to__ 
   :Ada__text_io__count.count

end

(* Module giving an empty axiom for the entity "to" defined at a-textio.ads:149, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__set_line_length__to__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "to" defined at a-textio.ads:150, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__set_line_length__2__to
 use import "_gnatprove_standard".Main
 use        Ada__text_io__count
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function to__ 
   :Ada__text_io__count.count

end

(* Module giving an empty axiom for the entity "to" defined at a-textio.ads:150, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__set_line_length__2__to__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "file" defined at a-textio.ads:152, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__set_page_length__file
 use import "_gnatprove_standard".Main

 function file 
   :__private

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:152, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__set_page_length__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "to" defined at a-textio.ads:152, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__set_page_length__to
 use import "_gnatprove_standard".Main
 use        Ada__text_io__count
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function to__ 
   :Ada__text_io__count.count

end

(* Module giving an empty axiom for the entity "to" defined at a-textio.ads:152, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__set_page_length__to__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "to" defined at a-textio.ads:153, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__set_page_length__2__to
 use import "_gnatprove_standard".Main
 use        Ada__text_io__count
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function to__ 
   :Ada__text_io__count.count

end

(* Module giving an empty axiom for the entity "to" defined at a-textio.ads:153, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__set_page_length__2__to__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "file" defined at a-textio.ads:155, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__line_length__file
 use import "_gnatprove_standard".Main

 function file 
   :__private

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:155, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__line_length__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "line_length" defined at a-textio.ads:155, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__line_length
 use import "_gnatprove_standard".Main
 use        Ada__text_io__count
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function line_length 
   (file : __private)  :Ada__text_io__count.count
 
 val line_length 
   (file : __private)  :Ada__text_io__count.count
  requires { true }
  ensures { ( result = (line_length file) ) }


end

(* Module giving an empty axiom for the entity "line_length" defined at a-textio.ads:155, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__line_length__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "line_length__2" defined at a-textio.ads:156, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__line_length__2
 use import "_gnatprove_standard".Main
 use        Ada__text_io__count
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function line_length__2 
   (__void_param : unit)  :Ada__text_io__count.count
 
 val line_length__2 
   (__void_param : unit)  :Ada__text_io__count.count
  requires { true }
  ensures { ( result = (line_length__2 ()) ) }


end

(* Module giving an empty axiom for the entity "line_length__2" defined at a-textio.ads:156, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__line_length__2__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "file" defined at a-textio.ads:158, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__page_length__file
 use import "_gnatprove_standard".Main

 function file 
   :__private

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:158, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__page_length__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "page_length" defined at a-textio.ads:158, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__page_length
 use import "_gnatprove_standard".Main
 use        Ada__text_io__count
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function page_length 
   (file : __private)  :Ada__text_io__count.count
 
 val page_length 
   (file : __private)  :Ada__text_io__count.count
  requires { true }
  ensures { ( result = (page_length file) ) }


end

(* Module giving an empty axiom for the entity "page_length" defined at a-textio.ads:158, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__page_length__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "page_length__2" defined at a-textio.ads:159, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__page_length__2
 use import "_gnatprove_standard".Main
 use        Ada__text_io__count
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function page_length__2 
   (__void_param : unit)  :Ada__text_io__count.count
 
 val page_length__2 
   (__void_param : unit)  :Ada__text_io__count.count
  requires { true }
  ensures { ( result = (page_length__2 ()) ) }


end

(* Module giving an empty axiom for the entity "page_length__2" defined at a-textio.ads:159, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__page_length__2__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "file" defined at a-textio.ads:165, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__new_line__file
 use import "_gnatprove_standard".Main

 function file 
   :__private

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:165, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__new_line__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "spacing" defined at a-textio.ads:165, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__new_line__spacing
 use import "_gnatprove_standard".Main
 use        Ada__text_io__positive_count
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function spacing 
   :Ada__text_io__positive_count.positive_count

end

(* Module giving an empty axiom for the entity "spacing" defined at a-textio.ads:165, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__new_line__spacing__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "spacing" defined at a-textio.ads:166, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__new_line__2__spacing
 use import "_gnatprove_standard".Main
 use        Ada__text_io__positive_count
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function spacing 
   :Ada__text_io__positive_count.positive_count

end

(* Module giving an empty axiom for the entity "spacing" defined at a-textio.ads:166, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__new_line__2__spacing__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "file" defined at a-textio.ads:168, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__skip_line__file
 use import "_gnatprove_standard".Main

 function file 
   :__private

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:168, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__skip_line__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "spacing" defined at a-textio.ads:168, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__skip_line__spacing
 use import "_gnatprove_standard".Main
 use        Ada__text_io__positive_count
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function spacing 
   :Ada__text_io__positive_count.positive_count

end

(* Module giving an empty axiom for the entity "spacing" defined at a-textio.ads:168, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__skip_line__spacing__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "spacing" defined at a-textio.ads:169, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__skip_line__2__spacing
 use import "_gnatprove_standard".Main
 use        Ada__text_io__positive_count
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function spacing 
   :Ada__text_io__positive_count.positive_count

end

(* Module giving an empty axiom for the entity "spacing" defined at a-textio.ads:169, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__skip_line__2__spacing__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "file" defined at a-textio.ads:171, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__end_of_line__file
 use import "_gnatprove_standard".Main

 function file 
   :__private

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:171, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__end_of_line__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "end_of_line" defined at a-textio.ads:171, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__end_of_line
 use import "_gnatprove_standard".Main

 function end_of_line 
   (file : __private)  :bool
 
 val end_of_line 
   (file : __private)  :bool
  requires { true }
  ensures { ( result = (end_of_line file) ) }


end

(* Module giving an empty axiom for the entity "end_of_line" defined at a-textio.ads:171, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__end_of_line__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "end_of_line__2" defined at a-textio.ads:172, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__end_of_line__2
 use import "_gnatprove_standard".Main

 function end_of_line__2 
   (__void_param : unit)  :bool
 
 val end_of_line__2 
   (__void_param : unit)  :bool
  requires { true }
  ensures { ( result = (end_of_line__2 ()) ) }


end

(* Module giving an empty axiom for the entity "end_of_line__2" defined at a-textio.ads:172, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__end_of_line__2__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "file" defined at a-textio.ads:174, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__new_page__file
 use import "_gnatprove_standard".Main

 function file 
   :__private

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:174, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__new_page__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "file" defined at a-textio.ads:177, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__skip_page__file
 use import "_gnatprove_standard".Main

 function file 
   :__private

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:177, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__skip_page__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "file" defined at a-textio.ads:180, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__end_of_page__file
 use import "_gnatprove_standard".Main

 function file 
   :__private

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:180, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__end_of_page__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "end_of_page" defined at a-textio.ads:180, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__end_of_page
 use import "_gnatprove_standard".Main

 function end_of_page 
   (file : __private)  :bool
 
 val end_of_page 
   (file : __private)  :bool
  requires { true }
  ensures { ( result = (end_of_page file) ) }


end

(* Module giving an empty axiom for the entity "end_of_page" defined at a-textio.ads:180, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__end_of_page__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "end_of_page__2" defined at a-textio.ads:181, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__end_of_page__2
 use import "_gnatprove_standard".Main

 function end_of_page__2 
   (__void_param : unit)  :bool
 
 val end_of_page__2 
   (__void_param : unit)  :bool
  requires { true }
  ensures { ( result = (end_of_page__2 ()) ) }


end

(* Module giving an empty axiom for the entity "end_of_page__2" defined at a-textio.ads:181, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__end_of_page__2__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "file" defined at a-textio.ads:183, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__end_of_file__file
 use import "_gnatprove_standard".Main

 function file 
   :__private

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:183, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__end_of_file__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "end_of_file" defined at a-textio.ads:183, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__end_of_file
 use import "_gnatprove_standard".Main

 function end_of_file 
   (file : __private)  :bool
 
 val end_of_file 
   (file : __private)  :bool
  requires { true }
  ensures { ( result = (end_of_file file) ) }


end

(* Module giving an empty axiom for the entity "end_of_file" defined at a-textio.ads:183, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__end_of_file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "end_of_file__2" defined at a-textio.ads:184, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__end_of_file__2
 use import "_gnatprove_standard".Main

 function end_of_file__2 
   (__void_param : unit)  :bool
 
 val end_of_file__2 
   (__void_param : unit)  :bool
  requires { true }
  ensures { ( result = (end_of_file__2 ()) ) }


end

(* Module giving an empty axiom for the entity "end_of_file__2" defined at a-textio.ads:184, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__end_of_file__2__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "file" defined at a-textio.ads:186, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__set_col__file
 use import "_gnatprove_standard".Main

 function file 
   :__private

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:186, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__set_col__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "to" defined at a-textio.ads:186, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__set_col__to
 use import "_gnatprove_standard".Main
 use        Ada__text_io__positive_count
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function to__ 
   :Ada__text_io__positive_count.positive_count

end

(* Module giving an empty axiom for the entity "to" defined at a-textio.ads:186, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__set_col__to__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "to" defined at a-textio.ads:187, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__set_col__2__to
 use import "_gnatprove_standard".Main
 use        Ada__text_io__positive_count
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function to__ 
   :Ada__text_io__positive_count.positive_count

end

(* Module giving an empty axiom for the entity "to" defined at a-textio.ads:187, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__set_col__2__to__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "file" defined at a-textio.ads:189, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__set_line__file
 use import "_gnatprove_standard".Main

 function file 
   :__private

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:189, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__set_line__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "to" defined at a-textio.ads:189, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__set_line__to
 use import "_gnatprove_standard".Main
 use        Ada__text_io__positive_count
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function to__ 
   :Ada__text_io__positive_count.positive_count

end

(* Module giving an empty axiom for the entity "to" defined at a-textio.ads:189, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__set_line__to__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "to" defined at a-textio.ads:190, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__set_line__2__to
 use import "_gnatprove_standard".Main
 use        Ada__text_io__positive_count
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function to__ 
   :Ada__text_io__positive_count.positive_count

end

(* Module giving an empty axiom for the entity "to" defined at a-textio.ads:190, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__set_line__2__to__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "file" defined at a-textio.ads:192, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__col__file
 use import "_gnatprove_standard".Main

 function file 
   :__private

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:192, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__col__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "col" defined at a-textio.ads:192, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__col
 use import "_gnatprove_standard".Main
 use        Ada__text_io__positive_count
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function col 
   (file : __private)  :Ada__text_io__positive_count.positive_count
 
 val col 
   (file : __private)  :Ada__text_io__positive_count.positive_count
  requires { true }
  ensures { ( result = (col file) ) }


end

(* Module giving an empty axiom for the entity "col" defined at a-textio.ads:192, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__col__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "col__2" defined at a-textio.ads:193, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__col__2
 use import "_gnatprove_standard".Main
 use        Ada__text_io__positive_count
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function col__2 
   (__void_param : unit)  :Ada__text_io__positive_count.positive_count
 
 val col__2 
   (__void_param : unit)  :Ada__text_io__positive_count.positive_count
  requires { true }
  ensures { ( result = (col__2 ()) ) }


end

(* Module giving an empty axiom for the entity "col__2" defined at a-textio.ads:193, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__col__2__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "file" defined at a-textio.ads:195, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__line__file
 use import "_gnatprove_standard".Main

 function file 
   :__private

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:195, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__line__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "line" defined at a-textio.ads:195, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__line
 use import "_gnatprove_standard".Main
 use        Ada__text_io__positive_count
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function line 
   (file : __private)  :Ada__text_io__positive_count.positive_count
 
 val line 
   (file : __private)  :Ada__text_io__positive_count.positive_count
  requires { true }
  ensures { ( result = (line file) ) }


end

(* Module giving an empty axiom for the entity "line" defined at a-textio.ads:195, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__line__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "line__2" defined at a-textio.ads:196, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__line__2
 use import "_gnatprove_standard".Main
 use        Ada__text_io__positive_count
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function line__2 
   (__void_param : unit)  :Ada__text_io__positive_count.positive_count
 
 val line__2 
   (__void_param : unit)  :Ada__text_io__positive_count.positive_count
  requires { true }
  ensures { ( result = (line__2 ()) ) }


end

(* Module giving an empty axiom for the entity "line__2" defined at a-textio.ads:196, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__line__2__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "file" defined at a-textio.ads:198, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__page__file
 use import "_gnatprove_standard".Main

 function file 
   :__private

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:198, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__page__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "page" defined at a-textio.ads:198, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__page
 use import "_gnatprove_standard".Main
 use        Ada__text_io__positive_count
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function page 
   (file : __private)  :Ada__text_io__positive_count.positive_count
 
 val page 
   (file : __private)  :Ada__text_io__positive_count.positive_count
  requires { true }
  ensures { ( result = (page file) ) }


end

(* Module giving an empty axiom for the entity "page" defined at a-textio.ads:198, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__page__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "page__2" defined at a-textio.ads:199, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__page__2
 use import "_gnatprove_standard".Main
 use        Ada__text_io__positive_count
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function page__2 
   (__void_param : unit)  :Ada__text_io__positive_count.positive_count
 
 val page__2 
   (__void_param : unit)  :Ada__text_io__positive_count.positive_count
  requires { true }
  ensures { ( result = (page__2 ()) ) }


end

(* Module giving an empty axiom for the entity "page__2" defined at a-textio.ads:199, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__page__2__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "file" defined at a-textio.ads:205, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__get__file
 use import "_gnatprove_standard".Main

 function file 
   :__private

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:205, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__get__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "file" defined at a-textio.ads:207, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__put__file
 use import "_gnatprove_standard".Main

 function file 
   :__private

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:207, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__put__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "item" defined at a-textio.ads:207, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__put__item
 use import "_gnatprove_standard".Main
 use        Standard__character
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function item 
   :Standard__character.character

end

(* Module giving an empty axiom for the entity "item" defined at a-textio.ads:207, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__put__item__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "item" defined at a-textio.ads:208, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__put__2__item
 use import "_gnatprove_standard".Main
 use        Standard__character
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function item 
   :Standard__character.character

end

(* Module giving an empty axiom for the entity "item" defined at a-textio.ads:208, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__put__2__item__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "file" defined at a-textio.ads:211, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__look_ahead__file
 use import "_gnatprove_standard".Main

 function file 
   :__private

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:211, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__look_ahead__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "file" defined at a-textio.ads:220, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__get_immediate__file
 use import "_gnatprove_standard".Main

 function file 
   :__private

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:220, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__get_immediate__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "file" defined at a-textio.ads:227, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__get_immediate__3__file
 use import "_gnatprove_standard".Main

 function file 
   :__private

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:227, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__get_immediate__3__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "file" defined at a-textio.ads:239, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__get__3__file
 use import "_gnatprove_standard".Main

 function file 
   :__private

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:239, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__get__3__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "file" defined at a-textio.ads:241, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__put__3__file
 use import "_gnatprove_standard".Main

 function file 
   :__private

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:241, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__put__3__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "item" defined at a-textio.ads:241, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__put__3__item
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Array__1

 function item 
   :Standard__string.string

end

(* Module giving an empty axiom for the entity "item" defined at a-textio.ads:241, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__put__3__item__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "item" defined at a-textio.ads:242, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__put__4__item
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Array__1

 function item 
   :Standard__string.string

end

(* Module giving an empty axiom for the entity "item" defined at a-textio.ads:242, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__put__4__item__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "file" defined at a-textio.ads:245, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__get_line__file
 use import "_gnatprove_standard".Main

 function file 
   :__private

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:245, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__get_line__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "file" defined at a-textio.ads:253, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__get_line__3__file
 use import "_gnatprove_standard".Main

 function file 
   :__private

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:253, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__get_line__3__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "get_line__3" defined at a-textio.ads:253, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__get_line__3
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Array__1

 function get_line__3 
   (file : __private)  :Standard__string.string
 
 val get_line__3 
   (file : __private)  :Standard__string.string
  requires { true }
  ensures { ( result = (get_line__3 file) ) }


end

(* Module giving an empty axiom for the entity "get_line__3" defined at a-textio.ads:253, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__get_line__3__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "get_line__4" defined at a-textio.ads:256, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__get_line__4
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Array__1

 function get_line__4 
   (__void_param : unit)  :Standard__string.string
 
 val get_line__4 
   (__void_param : unit)  :Standard__string.string
  requires { true }
  ensures { ( result = (get_line__4 ()) ) }


end

(* Module giving an empty axiom for the entity "get_line__4" defined at a-textio.ads:256, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__get_line__4__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "file" defined at a-textio.ads:260, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__put_line__file
 use import "_gnatprove_standard".Main

 function file 
   :__private

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:260, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__put_line__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "item" defined at a-textio.ads:261, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__put_line__item
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Array__1

 function item 
   :Standard__string.string

end

(* Module giving an empty axiom for the entity "item" defined at a-textio.ads:261, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__put_line__item__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "item" defined at a-textio.ads:264, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__put_line__2__item
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Array__1

 function item 
   :Standard__string.string

end

(* Module giving an empty axiom for the entity "item" defined at a-textio.ads:264, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__put_line__2__item__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "item" defined at a-textio.ads:439, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__write__2__item
 use import "_gnatprove_standard".Main
 use        Ada__streams__stream_element_array
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Array__1

 function item 
   :Ada__streams__stream_element_array.stream_element_array

end

(* Module giving an empty axiom for the entity "item" defined at a-textio.ads:439, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__write__2__item__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "eof_char" defined at a-textio.ads:460, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__eof_char
 use import "_gnatprove_standard".Main
 use        Standard__integer
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function eof_char 
   (__void_param : unit)  :Standard__integer.integer
 
 val eof_char 
   (__void_param : unit)  :Standard__integer.integer
  requires { true }
  ensures { ( result = (eof_char ()) ) }


end

(* Module giving an empty axiom for the entity "eof_char" defined at a-textio.ads:460, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__eof_char__axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "one_signal_state" defined at railway.ads:2, created in Gnat2Why.Types.Translate_Type *)
module Railway__one_signal_state
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int

 type one_signal_state "bounded_type" 
 
 function first 
   :int =
  0
 
 function last 
   :int =
  1
 
 predicate in_range
   (x : int)  =
  ( ( first <= x ) /\ ( x <= last ) )
 
 clone export "ada__model".Static_Discrete with
 type t = one_signal_state, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "route_type" defined at railway.ads:3, created in Gnat2Why.Types.Translate_Type *)
module Railway__route_type
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int

 type route_type "bounded_type" 
 
 function first 
   :int =
  0
 
 function last 
   :int =
  7
 
 predicate in_range
   (x : int)  =
  ( ( first <= x ) /\ ( x <= last ) )
 
 clone export "ada__model".Static_Discrete with
 type t = route_type, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "one_segment_state" defined at railway.ads:12, created in Gnat2Why.Types.Translate_Type *)
module Railway__one_segment_state
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int

 type one_segment_state "bounded_type" 
 
 function first 
   :int =
  0
 
 function last 
   :int =
  5
 
 predicate in_range
   (x : int)  =
  ( ( first <= x ) /\ ( x <= last ) )
 
 clone export "ada__model".Static_Discrete with
 type t = one_segment_state, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "segment_state_type" defined at railway.ads:19, created in Gnat2Why.Types.Translate_Type *)
module Railway__segment_state_type
 use import "_gnatprove_standard".Main
 use        Railway__one_segment_state
 use        "_gnatprove_standard".Integer
 use import "int".Int

 type segment_state_type  = 
  { rec__left : Railway__one_segment_state.one_segment_state; rec__middle : Railway__one_segment_state.one_segment_state; rec__right : Railway__one_segment_state.one_segment_state }
 
 predicate left__pred
   (a : segment_state_type)  =
  true
 
 val rec__left_ 
   (a : segment_state_type)  :Railway__one_segment_state.one_segment_state
  requires { (left__pred a) }
  ensures { ( result = a.rec__left ) }

 
 predicate middle__pred
   (a : segment_state_type)  =
  true
 
 val rec__middle_ 
   (a : segment_state_type)  :Railway__one_segment_state.one_segment_state
  requires { (middle__pred a) }
  ensures { ( result = a.rec__middle ) }

 
 predicate right__pred
   (a : segment_state_type)  =
  true
 
 val rec__right_ 
   (a : segment_state_type)  :Railway__one_segment_state.one_segment_state
  requires { (right__pred a) }
  ensures { ( result = a.rec__right ) }

 
 function bool_eq 
   (a : segment_state_type) (b : segment_state_type)  :bool =
  (if (( ( ( (Railway__one_segment_state.to_int a.rec__left) = (Railway__one_segment_state.to_int b.rec__left) ) /\ ( (Railway__one_segment_state.to_int a.rec__middle) = (Railway__one_segment_state.to_int b.rec__middle) ) ) /\ ( (Railway__one_segment_state.to_int a.rec__right) = (Railway__one_segment_state.to_int b.rec__right) ) )) then (
   True) else (
   False))
 
 function user_eq 
   (a : segment_state_type) (b : segment_state_type)  :bool
 
 function dummy 
   :segment_state_type

end

(* Module for axiomatizing type "signal_state_type" defined at railway.ads:27, created in Gnat2Why.Types.Translate_Type *)
module Railway__signal_state_type
 use import "_gnatprove_standard".Main
 use        Railway__one_signal_state
 use        "_gnatprove_standard".Integer
 use import "int".Int

 type signal_state_type  = 
  { rec__left_middle : Railway__one_signal_state.one_signal_state; rec__middle_left : Railway__one_signal_state.one_signal_state; rec__middle_right : Railway__one_signal_state.one_signal_state; rec__right_middle : Railway__one_signal_state.one_signal_state }
 
 predicate left_middle__pred
   (a : signal_state_type)  =
  true
 
 val rec__left_middle_ 
   (a : signal_state_type)  :Railway__one_signal_state.one_signal_state
  requires { (left_middle__pred a) }
  ensures { ( result = a.rec__left_middle ) }

 
 predicate middle_left__pred
   (a : signal_state_type)  =
  true
 
 val rec__middle_left_ 
   (a : signal_state_type)  :Railway__one_signal_state.one_signal_state
  requires { (middle_left__pred a) }
  ensures { ( result = a.rec__middle_left ) }

 
 predicate middle_right__pred
   (a : signal_state_type)  =
  true
 
 val rec__middle_right_ 
   (a : signal_state_type)  :Railway__one_signal_state.one_signal_state
  requires { (middle_right__pred a) }
  ensures { ( result = a.rec__middle_right ) }

 
 predicate right_middle__pred
   (a : signal_state_type)  =
  true
 
 val rec__right_middle_ 
   (a : signal_state_type)  :Railway__one_signal_state.one_signal_state
  requires { (right_middle__pred a) }
  ensures { ( result = a.rec__right_middle ) }

 
 function bool_eq 
   (a : signal_state_type) (b : signal_state_type)  :bool =
  (if (( ( ( ( (Railway__one_signal_state.to_int a.rec__left_middle) = (Railway__one_signal_state.to_int b.rec__left_middle) ) /\ ( (Railway__one_signal_state.to_int a.rec__middle_left) = (Railway__one_signal_state.to_int b.rec__middle_left) ) ) /\ ( (Railway__one_signal_state.to_int a.rec__middle_right) = (Railway__one_signal_state.to_int b.rec__middle_right) ) ) /\ ( (Railway__one_signal_state.to_int a.rec__right_middle) = (Railway__one_signal_state.to_int b.rec__right_middle) ) )) then (
   True) else (
   False))
 
 function user_eq 
   (a : signal_state_type) (b : signal_state_type)  :bool
 
 function dummy 
   :signal_state_type

end

(* Module for defining the constant "route" defined at railway.ads:67, created in Gnat2Why.Decls.Translate_Constant *)
module Railway__open_route__route
 use import "_gnatprove_standard".Main
 use        Railway__route_type
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function route 
   :Railway__route_type.route_type

end

(* Module giving an empty axiom for the entity "route" defined at railway.ads:67, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railway__open_route__route__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "route" defined at railway.ads:74, created in Gnat2Why.Decls.Translate_Constant *)
module Railway__move_train__route
 use import "_gnatprove_standard".Main
 use        Railway__route_type
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function route 
   :Railway__route_type.route_type

end

(* Module giving an empty axiom for the entity "route" defined at railway.ads:74, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railway__move_train__route__axiom
 use import "_gnatprove_standard".Main


end
(* Module for defining a ref holding the value of variable "v" defined at a-stream.ads:75, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__streams__read_sea__v
 use import "_gnatprove_standard".Main
 use        Ada__streams__stream_element_array
 use        Ada__streams__Tstream_element_offsetB
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Array__1

 type t  = 
  Ada__streams__stream_element_array.__split
 
 val v  : ref t
 
 function v_first 
   :Ada__streams__Tstream_element_offsetB.tstream_element_offsetB
 
 function v_last 
   :Ada__streams__Tstream_element_offsetB.tstream_element_offsetB

end

(* Module giving an empty axiom for the entity "v" defined at a-stream.ads:75, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__streams__read_sea__v__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "file" defined at a-textio.ads:87, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__create__file
 use import "_gnatprove_standard".Main

 type t  = 
  __private
 
 val file  : ref t

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:87, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__create__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "file" defined at a-textio.ads:93, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__open__file
 use import "_gnatprove_standard".Main

 type t  = 
  __private
 
 val file  : ref t

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:93, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__open__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "file" defined at a-textio.ads:98, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__close__file
 use import "_gnatprove_standard".Main

 type t  = 
  __private
 
 val file  : ref t

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:98, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__close__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "file" defined at a-textio.ads:99, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__delete__file
 use import "_gnatprove_standard".Main

 type t  = 
  __private
 
 val file  : ref t

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:99, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__delete__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "file" defined at a-textio.ads:100, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__reset__file
 use import "_gnatprove_standard".Main

 type t  = 
  __private
 
 val file  : ref t

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:100, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__reset__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "file" defined at a-textio.ads:101, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__reset__2__file
 use import "_gnatprove_standard".Main

 type t  = 
  __private
 
 val file  : ref t

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:101, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__reset__2__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "item" defined at a-textio.ads:205, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__get__item
 use import "_gnatprove_standard".Main
 use        Standard__character
 use        "_gnatprove_standard".Integer
 use import "int".Int

 type t  = 
  Standard__character.character
 
 val item  : ref t

end

(* Module giving an empty axiom for the entity "item" defined at a-textio.ads:205, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__get__item__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "item" defined at a-textio.ads:206, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__get__2__item
 use import "_gnatprove_standard".Main
 use        Standard__character
 use        "_gnatprove_standard".Integer
 use import "int".Int

 type t  = 
  Standard__character.character
 
 val item  : ref t

end

(* Module giving an empty axiom for the entity "item" defined at a-textio.ads:206, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__get__2__item__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "item" defined at a-textio.ads:212, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__look_ahead__item
 use import "_gnatprove_standard".Main
 use        Standard__character
 use        "_gnatprove_standard".Integer
 use import "int".Int

 type t  = 
  Standard__character.character
 
 val item  : ref t

end

(* Module giving an empty axiom for the entity "item" defined at a-textio.ads:212, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__look_ahead__item__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "end_of_line" defined at a-textio.ads:213, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__look_ahead__end_of_line
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Boolean

 type t  = 
  bool
 
 val end_of_line  : ref t

end

(* Module giving an empty axiom for the entity "end_of_line" defined at a-textio.ads:213, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__look_ahead__end_of_line__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "item" defined at a-textio.ads:216, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__look_ahead__2__item
 use import "_gnatprove_standard".Main
 use        Standard__character
 use        "_gnatprove_standard".Integer
 use import "int".Int

 type t  = 
  Standard__character.character
 
 val item  : ref t

end

(* Module giving an empty axiom for the entity "item" defined at a-textio.ads:216, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__look_ahead__2__item__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "end_of_line" defined at a-textio.ads:217, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__look_ahead__2__end_of_line
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Boolean

 type t  = 
  bool
 
 val end_of_line  : ref t

end

(* Module giving an empty axiom for the entity "end_of_line" defined at a-textio.ads:217, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__look_ahead__2__end_of_line__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "item" defined at a-textio.ads:221, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__get_immediate__item
 use import "_gnatprove_standard".Main
 use        Standard__character
 use        "_gnatprove_standard".Integer
 use import "int".Int

 type t  = 
  Standard__character.character
 
 val item  : ref t

end

(* Module giving an empty axiom for the entity "item" defined at a-textio.ads:221, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__get_immediate__item__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "item" defined at a-textio.ads:224, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__get_immediate__2__item
 use import "_gnatprove_standard".Main
 use        Standard__character
 use        "_gnatprove_standard".Integer
 use import "int".Int

 type t  = 
  Standard__character.character
 
 val item  : ref t

end

(* Module giving an empty axiom for the entity "item" defined at a-textio.ads:224, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__get_immediate__2__item__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "item" defined at a-textio.ads:228, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__get_immediate__3__item
 use import "_gnatprove_standard".Main
 use        Standard__character
 use        "_gnatprove_standard".Integer
 use import "int".Int

 type t  = 
  Standard__character.character
 
 val item  : ref t

end

(* Module giving an empty axiom for the entity "item" defined at a-textio.ads:228, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__get_immediate__3__item__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "available" defined at a-textio.ads:229, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__get_immediate__3__available
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Boolean

 type t  = 
  bool
 
 val available  : ref t

end

(* Module giving an empty axiom for the entity "available" defined at a-textio.ads:229, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__get_immediate__3__available__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "item" defined at a-textio.ads:232, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__get_immediate__4__item
 use import "_gnatprove_standard".Main
 use        Standard__character
 use        "_gnatprove_standard".Integer
 use import "int".Int

 type t  = 
  Standard__character.character
 
 val item  : ref t

end

(* Module giving an empty axiom for the entity "item" defined at a-textio.ads:232, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__get_immediate__4__item__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "available" defined at a-textio.ads:233, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__get_immediate__4__available
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Boolean

 type t  = 
  bool
 
 val available  : ref t

end

(* Module giving an empty axiom for the entity "available" defined at a-textio.ads:233, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__get_immediate__4__available__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "item" defined at a-textio.ads:239, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__get__3__item
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Standard__integer
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Array__1

 type t  = 
  Standard__string.__split
 
 val item  : ref t
 
 function item_first 
   :Standard__integer.integer
 
 function item_last 
   :Standard__integer.integer

end

(* Module giving an empty axiom for the entity "item" defined at a-textio.ads:239, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__get__3__item__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "item" defined at a-textio.ads:240, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__get__4__item
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Standard__integer
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Array__1

 type t  = 
  Standard__string.__split
 
 val item  : ref t
 
 function item_first 
   :Standard__integer.integer
 
 function item_last 
   :Standard__integer.integer

end

(* Module giving an empty axiom for the entity "item" defined at a-textio.ads:240, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__get__4__item__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "item" defined at a-textio.ads:246, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__get_line__item
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Standard__integer
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Array__1

 type t  = 
  Standard__string.__split
 
 val item  : ref t
 
 function item_first 
   :Standard__integer.integer
 
 function item_last 
   :Standard__integer.integer

end

(* Module giving an empty axiom for the entity "item" defined at a-textio.ads:246, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__get_line__item__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "last" defined at a-textio.ads:247, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__get_line__last
 use import "_gnatprove_standard".Main
 use        Standard__natural
 use        "_gnatprove_standard".Integer
 use import "int".Int

 type t  = 
  Standard__natural.natural
 
 val last  : ref t

end

(* Module giving an empty axiom for the entity "last" defined at a-textio.ads:247, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__get_line__last__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "item" defined at a-textio.ads:250, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__get_line__2__item
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        Standard__integer
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Array__1

 type t  = 
  Standard__string.__split
 
 val item  : ref t
 
 function item_first 
   :Standard__integer.integer
 
 function item_last 
   :Standard__integer.integer

end

(* Module giving an empty axiom for the entity "item" defined at a-textio.ads:250, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__get_line__2__item__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "last" defined at a-textio.ads:251, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__get_line__2__last
 use import "_gnatprove_standard".Main
 use        Standard__natural
 use        "_gnatprove_standard".Integer
 use import "int".Int

 type t  = 
  Standard__natural.natural
 
 val last  : ref t

end

(* Module giving an empty axiom for the entity "last" defined at a-textio.ads:251, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__get_line__2__last__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "default_wcem" defined at a-textio.ads:362, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__default_wcem
 use import "_gnatprove_standard".Main
 use        System__wch_con__wc_encoding_method
 use        "_gnatprove_standard".Integer
 use import "int".Int

 type t  = 
  System__wch_con__wc_encoding_method.wc_encoding_method
 
 val default_wcem  : ref t

end

(* Module giving an empty axiom for the entity "default_wcem" defined at a-textio.ads:362, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__default_wcem__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "file" defined at a-textio.ads:432, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__read__2__file
 use import "_gnatprove_standard".Main

 type t  = 
  __private
 
 val file  : ref t

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:432, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__read__2__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "item" defined at a-textio.ads:433, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__read__2__item
 use import "_gnatprove_standard".Main
 use        Ada__streams__stream_element_array
 use        Ada__streams__Tstream_element_offsetB
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Array__1

 type t  = 
  Ada__streams__stream_element_array.__split
 
 val item  : ref t
 
 function item_first 
   :Ada__streams__Tstream_element_offsetB.tstream_element_offsetB
 
 function item_last 
   :Ada__streams__Tstream_element_offsetB.tstream_element_offsetB

end

(* Module giving an empty axiom for the entity "item" defined at a-textio.ads:433, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__read__2__item__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "last" defined at a-textio.ads:434, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__read__2__last
 use import "_gnatprove_standard".Main
 use        Ada__streams__stream_element_offset
 use        "_gnatprove_standard".Integer
 use import "int".Int

 type t  = 
  Ada__streams__stream_element_offset.stream_element_offset
 
 val last  : ref t

end

(* Module giving an empty axiom for the entity "last" defined at a-textio.ads:434, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__read__2__last__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "file" defined at a-textio.ads:438, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__write__2__file
 use import "_gnatprove_standard".Main

 type t  = 
  __private
 
 val file  : ref t

end

(* Module giving an empty axiom for the entity "file" defined at a-textio.ads:438, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__write__2__file__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "standard_in_afcb" defined at a-textio.ads:446, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__standard_in_afcb
 use import "_gnatprove_standard".Main

 type t  = 
  __private
 
 val standard_in_afcb  : ref t

end

(* Module giving an empty axiom for the entity "standard_in_afcb" defined at a-textio.ads:446, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__standard_in_afcb__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "standard_out_afcb" defined at a-textio.ads:447, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__standard_out_afcb
 use import "_gnatprove_standard".Main

 type t  = 
  __private
 
 val standard_out_afcb  : ref t

end

(* Module giving an empty axiom for the entity "standard_out_afcb" defined at a-textio.ads:447, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__standard_out_afcb__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "standard_err_afcb" defined at a-textio.ads:448, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__standard_err_afcb
 use import "_gnatprove_standard".Main

 type t  = 
  __private
 
 val standard_err_afcb  : ref t

end

(* Module giving an empty axiom for the entity "standard_err_afcb" defined at a-textio.ads:448, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__standard_err_afcb__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "standard_in" defined at a-textio.ads:450, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__standard_in
 use import "_gnatprove_standard".Main

 type t  = 
  __private
 
 val standard_in  : ref t

end

(* Module giving an empty axiom for the entity "standard_in" defined at a-textio.ads:450, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__standard_in__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "standard_out" defined at a-textio.ads:451, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__standard_out
 use import "_gnatprove_standard".Main

 type t  = 
  __private
 
 val standard_out  : ref t

end

(* Module giving an empty axiom for the entity "standard_out" defined at a-textio.ads:451, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__standard_out__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "standard_err" defined at a-textio.ads:452, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__standard_err
 use import "_gnatprove_standard".Main

 type t  = 
  __private
 
 val standard_err  : ref t

end

(* Module giving an empty axiom for the entity "standard_err" defined at a-textio.ads:452, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__standard_err__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "current_in" defined at a-textio.ads:455, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__current_in
 use import "_gnatprove_standard".Main

 type t  = 
  __private
 
 val current_in  : ref t

end

(* Module giving an empty axiom for the entity "current_in" defined at a-textio.ads:455, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__current_in__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "current_out" defined at a-textio.ads:456, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__current_out
 use import "_gnatprove_standard".Main

 type t  = 
  __private
 
 val current_out  : ref t

end

(* Module giving an empty axiom for the entity "current_out" defined at a-textio.ads:456, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__current_out__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "current_err" defined at a-textio.ads:457, created in Gnat2Why.Decls.Translate_Variable *)
module Ada__text_io__current_err
 use import "_gnatprove_standard".Main

 type t  = 
  __private
 
 val current_err  : ref t

end

(* Module giving an empty axiom for the entity "current_err" defined at a-textio.ads:457, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__current_err__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "segment_state" defined at railway.ads:36, created in Gnat2Why.Decls.Translate_Variable *)
module Railway__segment_state
 use import "_gnatprove_standard".Main
 use        Railway__segment_state_type
 use        "_gnatprove_standard".Integer
 use import "int".Int

 type t  = 
  Railway__segment_state_type.segment_state_type
 
 val segment_state  : ref t

end

(* Module giving an empty axiom for the entity "segment_state" defined at railway.ads:36, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railway__segment_state__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "signal_state" defined at railway.ads:37, created in Gnat2Why.Decls.Translate_Variable *)
module Railway__signal_state
 use import "_gnatprove_standard".Main
 use        Railway__signal_state_type
 use        "_gnatprove_standard".Integer
 use import "int".Int

 type t  = 
  Railway__signal_state_type.signal_state_type
 
 val signal_state  : ref t

end

(* Module giving an empty axiom for the entity "signal_state" defined at railway.ads:37, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railway__signal_state__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "success" defined at railway.ads:67, created in Gnat2Why.Decls.Translate_Variable *)
module Railway__open_route__success
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Boolean

 type t  = 
  bool
 
 val success  : ref t

end

(* Module giving an empty axiom for the entity "success" defined at railway.ads:67, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railway__open_route__success__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "success" defined at railway.ads:74, created in Gnat2Why.Decls.Translate_Variable *)
module Railway__move_train__success
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Boolean

 type t  = 
  bool
 
 val success  : ref t

end

(* Module giving an empty axiom for the entity "success" defined at railway.ads:74, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railway__move_train__success__axiom
 use import "_gnatprove_standard".Main


end

(* Module declaring the external object "main__ok," created in Gnat2Why.Decls.Translate_External_Object *)
module Main__ok
 use import "ref".Ref
 use import "_gnatprove_standard".Main

 type t 
 
 val ok  : ref t

end
(* Module for defining the constant "min_int" defined at system.ads:48, created in Gnat2Why.Decls.Translate_Constant *)
module System__min_int
 use import "_gnatprove_standard".Main
 use        Standard__universal_integer
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function min_int 
   :Standard__universal_integer.universal_integer

end

(* Module for defining the constant "max_int" defined at system.ads:49, created in Gnat2Why.Decls.Translate_Constant *)
module System__max_int
 use import "_gnatprove_standard".Main
 use        Standard__universal_integer
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function max_int 
   :Standard__universal_integer.universal_integer

end

(* Module for defining the constant "max_binary_modulus" defined at system.ads:51, created in Gnat2Why.Decls.Translate_Constant *)
module System__max_binary_modulus
 use import "_gnatprove_standard".Main
 use        Standard__universal_integer
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function max_binary_modulus 
   :Standard__universal_integer.universal_integer

end

(* Module for defining the constant "max_nonbinary_modulus" defined at system.ads:52, created in Gnat2Why.Decls.Translate_Constant *)
module System__max_nonbinary_modulus
 use import "_gnatprove_standard".Main
 use        Standard__universal_integer
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function max_nonbinary_modulus 
   :Standard__universal_integer.universal_integer

end

(* Module for defining the constant "max_base_digits" defined at system.ads:54, created in Gnat2Why.Decls.Translate_Constant *)
module System__max_base_digits
 use import "_gnatprove_standard".Main
 use        Standard__universal_integer
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function max_base_digits 
   :Standard__universal_integer.universal_integer

end

(* Module for defining the constant "max_digits" defined at system.ads:55, created in Gnat2Why.Decls.Translate_Constant *)
module System__max_digits
 use import "_gnatprove_standard".Main
 use        Standard__universal_integer
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function max_digits 
   :Standard__universal_integer.universal_integer

end

(* Module for defining the constant "max_mantissa" defined at system.ads:57, created in Gnat2Why.Decls.Translate_Constant *)
module System__max_mantissa
 use import "_gnatprove_standard".Main
 use        Standard__universal_integer
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function max_mantissa 
   :Standard__universal_integer.universal_integer

end

(* Module for defining the constant "fine_delta" defined at system.ads:58, created in Gnat2Why.Decls.Translate_Constant *)
module System__fine_delta
 use import "_gnatprove_standard".Main
 use        Standard__universal_real
 use        "_gnatprove_standard".Floating
 use import "real".RealInfix

 function fine_delta 
   :Standard__universal_real.universal_real

end

(* Module for defining the constant "tick" defined at system.ads:60, created in Gnat2Why.Decls.Translate_Constant *)
module System__tick
 use import "_gnatprove_standard".Main
 use        Standard__universal_real
 use        "_gnatprove_standard".Floating
 use import "real".RealInfix

 function tick 
   :Standard__universal_real.universal_real

end

(* Module for defining the constant "storage_unit" defined at system.ads:68, created in Gnat2Why.Decls.Translate_Constant *)
module System__storage_unit
 use import "_gnatprove_standard".Main
 use        Standard__universal_integer
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function storage_unit 
   :Standard__universal_integer.universal_integer

end

(* Module for defining the constant "word_size" defined at system.ads:69, created in Gnat2Why.Decls.Translate_Constant *)
module System__word_size
 use import "_gnatprove_standard".Main
 use        Standard__universal_integer
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function word_size 
   :Standard__universal_integer.universal_integer

end

(* Module for defining the constant "memory_size" defined at system.ads:70, created in Gnat2Why.Decls.Translate_Constant *)
module System__memory_size
 use import "_gnatprove_standard".Main
 use        Standard__universal_integer
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function memory_size 
   :Standard__universal_integer.universal_integer

end

(* Module for defining the constant "long_bits" defined at s-parame.ads:110, created in Gnat2Why.Decls.Translate_Constant *)
module System__parameters__long_bits
 use import "_gnatprove_standard".Main
 use        Standard__universal_integer
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function long_bits 
   :Standard__universal_integer.universal_integer

end

(* Module for defining the constant "default_attribute_count" defined at s-parame.ads:185, created in Gnat2Why.Decls.Translate_Constant *)
module System__parameters__default_attribute_count
 use import "_gnatprove_standard".Main
 use        Standard__universal_integer
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function default_attribute_count 
   :Standard__universal_integer.universal_integer

end

(* Module for defining the constant "max_task_image_length" defined at s-parame.ads:202, created in Gnat2Why.Decls.Translate_Constant *)
module System__parameters__max_task_image_length
 use import "_gnatprove_standard".Main
 use        Standard__universal_integer
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function max_task_image_length 
   :Standard__universal_integer.universal_integer

end

(* Module for defining the constant "default_exception_msg_max_length" defined at s-parame.ads:209, created in Gnat2Why.Decls.Translate_Constant *)
module System__parameters__default_exception_msg_max_length
 use import "_gnatprove_standard".Main
 use        Standard__universal_integer
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function default_exception_msg_max_length 
   :Standard__universal_integer.universal_integer

end

(* Module for declaring a program function (and possibly a logic function) for "strncpy" defined at s-crtl.ads:81, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__strncpy
 use import "_gnatprove_standard".Main
 use        System__address
 use        "_gnatprove_standard".Integer
 use import "int".Int

 val strncpy 
   (dest : System__address.address) (src : System__address.address) (n : int)  :unit
  requires { true }
  ensures { true }


end

(* Module giving an empty axiom for the entity "strncpy" defined at s-crtl.ads:81, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__strncpy__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "clearerr" defined at s-crtl.ads:91, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__clearerr
 use import "_gnatprove_standard".Main
 use        System__crtl__files
 use        "_gnatprove_standard".Integer
 use import "int".Int

 val clearerr 
   (stream : System__crtl__files.files)  :unit
  requires { true }
  ensures { true }


end

(* Module giving an empty axiom for the entity "clearerr" defined at s-crtl.ads:91, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__clearerr__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "free" defined at s-crtl.ads:131, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__free
 use import "_gnatprove_standard".Main
 use        System__address
 use        "_gnatprove_standard".Integer
 use import "int".Int

 val free 
   (ptr : System__address.address)  :unit
  requires { true }
  ensures { true }


end

(* Module giving an empty axiom for the entity "free" defined at s-crtl.ads:131, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__free__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "memcpy" defined at s-crtl.ads:172, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__memcpy
 use import "_gnatprove_standard".Main
 use        System__address
 use        "_gnatprove_standard".Integer
 use import "int".Int

 val memcpy 
   (s1 : System__address.address) (s2 : System__address.address) (n : int)  :unit
  requires { true }
  ensures { true }


end

(* Module giving an empty axiom for the entity "memcpy" defined at s-crtl.ads:172, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__memcpy__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "memmove" defined at s-crtl.ads:175, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__memmove
 use import "_gnatprove_standard".Main
 use        System__address
 use        "_gnatprove_standard".Integer
 use import "int".Int

 val memmove 
   (s1 : System__address.address) (s2 : System__address.address) (n : int)  :unit
  requires { true }
  ensures { true }


end

(* Module giving an empty axiom for the entity "memmove" defined at s-crtl.ads:175, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__memmove__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "mktemp" defined at s-crtl.ads:178, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__mktemp
 use import "_gnatprove_standard".Main
 use        System__crtl__chars
 use        "_gnatprove_standard".Integer
 use import "int".Int

 val mktemp 
   (template : System__crtl__chars.chars)  :unit
  requires { true }
  ensures { true }


end

(* Module giving an empty axiom for the entity "mktemp" defined at s-crtl.ads:178, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__mktemp__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "rewind" defined at s-crtl.ads:191, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__rewind
 use import "_gnatprove_standard".Main
 use        System__crtl__files
 use        "_gnatprove_standard".Integer
 use import "int".Int

 val rewind 
   (stream : System__crtl__files.files)  :unit
  requires { true }
  ensures { true }


end

(* Module giving an empty axiom for the entity "rewind" defined at s-crtl.ads:191, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__rewind__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "tmpnam" defined at s-crtl.ads:212, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module System__crtl__tmpnam
 use import "_gnatprove_standard".Main
 use        System__crtl__chars
 use        "_gnatprove_standard".Integer
 use import "int".Int

 val tmpnam 
   (str : System__crtl__chars.chars)  :unit
  requires { true }
  ensures { true }


end

(* Module giving an empty axiom for the entity "tmpnam" defined at s-crtl.ads:212, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module System__crtl__tmpnam__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "set_binary_mode" defined at i-cstrea.ads:224, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__c_streams__set_binary_mode
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int

 val set_binary_mode 
   (handle : int)  :unit
  requires { true }
  ensures { true }


end

(* Module giving an empty axiom for the entity "set_binary_mode" defined at i-cstrea.ads:224, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__set_binary_mode__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "set_text_mode" defined at i-cstrea.ads:225, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__c_streams__set_text_mode
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int

 val set_text_mode 
   (handle : int)  :unit
  requires { true }
  ensures { true }


end

(* Module giving an empty axiom for the entity "set_text_mode" defined at i-cstrea.ads:225, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__set_text_mode__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "set_mode" defined at i-cstrea.ads:255, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__c_streams__set_mode
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int

 val set_mode 
   (handle : int) (mode : int)  :unit
  requires { true }
  ensures { true }


end

(* Module giving an empty axiom for the entity "set_mode" defined at i-cstrea.ads:255, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__set_mode__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "full_name" defined at i-cstrea.ads:263, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Interfaces__c_streams__full_name
 use import "_gnatprove_standard".Main
 use        Interfaces__c_streams__chars
 use        "_gnatprove_standard".Integer
 use import "int".Int

 val full_name 
   (nam : Interfaces__c_streams__chars.chars) (buffer : Interfaces__c_streams__chars.chars)  :unit
  requires { true }
  ensures { true }


end

(* Module giving an empty axiom for the entity "full_name" defined at i-cstrea.ads:263, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Interfaces__c_streams__full_name__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "wc_longest_sequence" defined at s-wchcon.ads:189, created in Gnat2Why.Decls.Translate_Constant *)
module System__wch_con__wc_longest_sequence
 use import "_gnatprove_standard".Main
 use        Standard__universal_integer
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function wc_longest_sequence 
   :Standard__universal_integer.universal_integer

end

(* Module for declaring a program function (and possibly a logic function) for "create" defined at a-textio.ads:86, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__create
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Array__1

 val create 
   (file : ref __private) (mode : int) (name : Standard__string.string) (form : Standard__string.string)  :unit
  requires { true }
  ensures { true }
  writes {file }


end

(* Module giving an empty axiom for the entity "create" defined at a-textio.ads:86, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__create__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "open" defined at a-textio.ads:92, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__open
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Array__1

 val open 
   (file : ref __private) (mode : int) (name : Standard__string.string) (form : Standard__string.string)  :unit
  requires { true }
  ensures { true }
  writes {file }


end

(* Module giving an empty axiom for the entity "open" defined at a-textio.ads:92, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__open__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "close" defined at a-textio.ads:98, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__close
 use import "_gnatprove_standard".Main

 val close 
   (file : ref __private)  :unit
  requires { true }
  ensures { true }
  writes {file }


end

(* Module giving an empty axiom for the entity "close" defined at a-textio.ads:98, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__close__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "delete" defined at a-textio.ads:99, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__delete
 use import "_gnatprove_standard".Main

 val delete 
   (file : ref __private)  :unit
  requires { true }
  ensures { true }
  writes {file }


end

(* Module giving an empty axiom for the entity "delete" defined at a-textio.ads:99, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__delete__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "reset" defined at a-textio.ads:100, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__reset
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int

 val reset 
   (file : ref __private) (mode : int)  :unit
  requires { true }
  ensures { true }
  writes {file }


end

(* Module giving an empty axiom for the entity "reset" defined at a-textio.ads:100, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__reset__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "reset__2" defined at a-textio.ads:101, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__reset__2
 use import "_gnatprove_standard".Main

 val reset__2 
   (file : ref __private)  :unit
  requires { true }
  ensures { true }
  writes {file }


end

(* Module giving an empty axiom for the entity "reset__2" defined at a-textio.ads:101, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__reset__2__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "set_input" defined at a-textio.ads:113, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__set_input
 use import "_gnatprove_standard".Main

 val set_input 
   (file : __private)  :unit
  requires { true }
  ensures { true }


end

(* Module giving an empty axiom for the entity "set_input" defined at a-textio.ads:113, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__set_input__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "set_output" defined at a-textio.ads:114, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__set_output
 use import "_gnatprove_standard".Main

 val set_output 
   (file : __private)  :unit
  requires { true }
  ensures { true }


end

(* Module giving an empty axiom for the entity "set_output" defined at a-textio.ads:114, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__set_output__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "set_error" defined at a-textio.ads:115, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__set_error
 use import "_gnatprove_standard".Main

 val set_error 
   (file : __private)  :unit
  requires { true }
  ensures { true }


end

(* Module giving an empty axiom for the entity "set_error" defined at a-textio.ads:115, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__set_error__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "flush" defined at a-textio.ads:142, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__flush
 use import "_gnatprove_standard".Main

 val flush 
   (file : __private)  :unit
  requires { true }
  ensures { true }


end

(* Module giving an empty axiom for the entity "flush" defined at a-textio.ads:142, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__flush__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "flush__2" defined at a-textio.ads:143, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__flush__2
 use import "_gnatprove_standard".Main

 val flush__2 
   (__void_param : unit)  :unit
  requires { true }
  ensures { true }


end

(* Module giving an empty axiom for the entity "flush__2" defined at a-textio.ads:143, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__flush__2__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "set_line_length" defined at a-textio.ads:149, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__set_line_length
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int

 val set_line_length 
   (file : __private) (to__ : int)  :unit
  requires { true }
  ensures { true }


end

(* Module giving an empty axiom for the entity "set_line_length" defined at a-textio.ads:149, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__set_line_length__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "set_line_length__2" defined at a-textio.ads:150, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__set_line_length__2
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int

 val set_line_length__2 
   (to__ : int)  :unit
  requires { true }
  ensures { true }


end

(* Module giving an empty axiom for the entity "set_line_length__2" defined at a-textio.ads:150, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__set_line_length__2__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "set_page_length" defined at a-textio.ads:152, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__set_page_length
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int

 val set_page_length 
   (file : __private) (to__ : int)  :unit
  requires { true }
  ensures { true }


end

(* Module giving an empty axiom for the entity "set_page_length" defined at a-textio.ads:152, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__set_page_length__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "set_page_length__2" defined at a-textio.ads:153, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__set_page_length__2
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int

 val set_page_length__2 
   (to__ : int)  :unit
  requires { true }
  ensures { true }


end

(* Module giving an empty axiom for the entity "set_page_length__2" defined at a-textio.ads:153, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__set_page_length__2__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "new_line" defined at a-textio.ads:165, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__new_line
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int

 val new_line 
   (file : __private) (spacing : int)  :unit
  requires { true }
  ensures { true }


end

(* Module giving an empty axiom for the entity "new_line" defined at a-textio.ads:165, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__new_line__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "new_line__2" defined at a-textio.ads:166, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__new_line__2
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int

 val new_line__2 
   (spacing : int)  :unit
  requires { true }
  ensures { true }


end

(* Module giving an empty axiom for the entity "new_line__2" defined at a-textio.ads:166, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__new_line__2__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "skip_line" defined at a-textio.ads:168, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__skip_line
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int

 val skip_line 
   (file : __private) (spacing : int)  :unit
  requires { true }
  ensures { true }


end

(* Module giving an empty axiom for the entity "skip_line" defined at a-textio.ads:168, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__skip_line__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "skip_line__2" defined at a-textio.ads:169, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__skip_line__2
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int

 val skip_line__2 
   (spacing : int)  :unit
  requires { true }
  ensures { true }


end

(* Module giving an empty axiom for the entity "skip_line__2" defined at a-textio.ads:169, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__skip_line__2__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "new_page" defined at a-textio.ads:174, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__new_page
 use import "_gnatprove_standard".Main

 val new_page 
   (file : __private)  :unit
  requires { true }
  ensures { true }


end

(* Module giving an empty axiom for the entity "new_page" defined at a-textio.ads:174, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__new_page__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "new_page__2" defined at a-textio.ads:175, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__new_page__2
 use import "_gnatprove_standard".Main

 val new_page__2 
   (__void_param : unit)  :unit
  requires { true }
  ensures { true }


end

(* Module giving an empty axiom for the entity "new_page__2" defined at a-textio.ads:175, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__new_page__2__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "skip_page" defined at a-textio.ads:177, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__skip_page
 use import "_gnatprove_standard".Main

 val skip_page 
   (file : __private)  :unit
  requires { true }
  ensures { true }


end

(* Module giving an empty axiom for the entity "skip_page" defined at a-textio.ads:177, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__skip_page__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "skip_page__2" defined at a-textio.ads:178, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__skip_page__2
 use import "_gnatprove_standard".Main

 val skip_page__2 
   (__void_param : unit)  :unit
  requires { true }
  ensures { true }


end

(* Module giving an empty axiom for the entity "skip_page__2" defined at a-textio.ads:178, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__skip_page__2__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "set_col" defined at a-textio.ads:186, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__set_col
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int

 val set_col 
   (file : __private) (to__ : int)  :unit
  requires { true }
  ensures { true }


end

(* Module giving an empty axiom for the entity "set_col" defined at a-textio.ads:186, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__set_col__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "set_col__2" defined at a-textio.ads:187, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__set_col__2
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int

 val set_col__2 
   (to__ : int)  :unit
  requires { true }
  ensures { true }


end

(* Module giving an empty axiom for the entity "set_col__2" defined at a-textio.ads:187, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__set_col__2__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "set_line" defined at a-textio.ads:189, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__set_line
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int

 val set_line 
   (file : __private) (to__ : int)  :unit
  requires { true }
  ensures { true }


end

(* Module giving an empty axiom for the entity "set_line" defined at a-textio.ads:189, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__set_line__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "set_line__2" defined at a-textio.ads:190, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__set_line__2
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int

 val set_line__2 
   (to__ : int)  :unit
  requires { true }
  ensures { true }


end

(* Module giving an empty axiom for the entity "set_line__2" defined at a-textio.ads:190, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__set_line__2__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "get" defined at a-textio.ads:205, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__get
 use import "_gnatprove_standard".Main
 use        Standard__character
 use        "_gnatprove_standard".Integer
 use import "int".Int

 val get 
   (file : __private) (item : ref Standard__character.character)  :unit
  requires { true }
  ensures { true }
  writes {item }


end

(* Module giving an empty axiom for the entity "get" defined at a-textio.ads:205, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__get__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "get__2" defined at a-textio.ads:206, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__get__2
 use import "_gnatprove_standard".Main
 use        Standard__character
 use        "_gnatprove_standard".Integer
 use import "int".Int

 val get__2 
   (item : ref Standard__character.character)  :unit
  requires { true }
  ensures { true }
  writes {item }


end

(* Module giving an empty axiom for the entity "get__2" defined at a-textio.ads:206, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__get__2__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "put" defined at a-textio.ads:207, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__put
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int

 val put 
   (file : __private) (item : int)  :unit
  requires { true }
  ensures { true }


end

(* Module giving an empty axiom for the entity "put" defined at a-textio.ads:207, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__put__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "put__2" defined at a-textio.ads:208, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__put__2
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Integer
 use import "int".Int

 val put__2 
   (item : int)  :unit
  requires { true }
  ensures { true }


end

(* Module giving an empty axiom for the entity "put__2" defined at a-textio.ads:208, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__put__2__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "look_ahead" defined at a-textio.ads:210, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__look_ahead
 use import "_gnatprove_standard".Main
 use        Standard__character
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Boolean

 val look_ahead 
   (file : __private) (item : ref Standard__character.character) (end_of_line : ref bool)  :unit
  requires { true }
  ensures { true }
  writes {item, end_of_line }


end

(* Module giving an empty axiom for the entity "look_ahead" defined at a-textio.ads:210, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__look_ahead__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "look_ahead__2" defined at a-textio.ads:215, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__look_ahead__2
 use import "_gnatprove_standard".Main
 use        Standard__character
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Boolean

 val look_ahead__2 
   (item : ref Standard__character.character) (end_of_line : ref bool)  :unit
  requires { true }
  ensures { true }
  writes {item, end_of_line }


end

(* Module giving an empty axiom for the entity "look_ahead__2" defined at a-textio.ads:215, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__look_ahead__2__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "get_immediate" defined at a-textio.ads:219, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__get_immediate
 use import "_gnatprove_standard".Main
 use        Standard__character
 use        "_gnatprove_standard".Integer
 use import "int".Int

 val get_immediate 
   (file : __private) (item : ref Standard__character.character)  :unit
  requires { true }
  ensures { true }
  writes {item }


end

(* Module giving an empty axiom for the entity "get_immediate" defined at a-textio.ads:219, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__get_immediate__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "get_immediate__2" defined at a-textio.ads:223, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__get_immediate__2
 use import "_gnatprove_standard".Main
 use        Standard__character
 use        "_gnatprove_standard".Integer
 use import "int".Int

 val get_immediate__2 
   (item : ref Standard__character.character)  :unit
  requires { true }
  ensures { true }
  writes {item }


end

(* Module giving an empty axiom for the entity "get_immediate__2" defined at a-textio.ads:223, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__get_immediate__2__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "get_immediate__3" defined at a-textio.ads:226, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__get_immediate__3
 use import "_gnatprove_standard".Main
 use        Standard__character
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Boolean

 val get_immediate__3 
   (file : __private) (item : ref Standard__character.character) (available : ref bool)  :unit
  requires { true }
  ensures { true }
  writes {item, available }


end

(* Module giving an empty axiom for the entity "get_immediate__3" defined at a-textio.ads:226, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__get_immediate__3__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "get_immediate__4" defined at a-textio.ads:231, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__get_immediate__4
 use import "_gnatprove_standard".Main
 use        Standard__character
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Boolean

 val get_immediate__4 
   (item : ref Standard__character.character) (available : ref bool)  :unit
  requires { true }
  ensures { true }
  writes {item, available }


end

(* Module giving an empty axiom for the entity "get_immediate__4" defined at a-textio.ads:231, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__get_immediate__4__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "get__3" defined at a-textio.ads:239, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__get__3
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Array__1

 val get__3 
   (file : __private) (item : ref Standard__string.string)  :unit
  requires { true }
  ensures { true }
  writes {item }


end

(* Module giving an empty axiom for the entity "get__3" defined at a-textio.ads:239, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__get__3__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "get__4" defined at a-textio.ads:240, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__get__4
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Array__1

 val get__4 
   (item : ref Standard__string.string)  :unit
  requires { true }
  ensures { true }
  writes {item }


end

(* Module giving an empty axiom for the entity "get__4" defined at a-textio.ads:240, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__get__4__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "put__3" defined at a-textio.ads:241, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__put__3
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Array__1

 val put__3 
   (file : __private) (item : Standard__string.string)  :unit
  requires { true }
  ensures { true }


end

(* Module giving an empty axiom for the entity "put__3" defined at a-textio.ads:241, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__put__3__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "put__4" defined at a-textio.ads:242, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__put__4
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Array__1

 val put__4 
   (item : Standard__string.string)  :unit
  requires { true }
  ensures { true }


end

(* Module giving an empty axiom for the entity "put__4" defined at a-textio.ads:242, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__put__4__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "get_line" defined at a-textio.ads:244, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__get_line
 use import "_gnatprove_standard".Main
 use        Standard__natural
 use        Standard__string
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Array__1

 val get_line 
   (file : __private) (item : ref Standard__string.string) (last : ref Standard__natural.natural)  :unit
  requires { true }
  ensures { true }
  writes {item, last }


end

(* Module giving an empty axiom for the entity "get_line" defined at a-textio.ads:244, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__get_line__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "get_line__2" defined at a-textio.ads:249, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__get_line__2
 use import "_gnatprove_standard".Main
 use        Standard__natural
 use        Standard__string
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Array__1

 val get_line__2 
   (item : ref Standard__string.string) (last : ref Standard__natural.natural)  :unit
  requires { true }
  ensures { true }
  writes {item, last }


end

(* Module giving an empty axiom for the entity "get_line__2" defined at a-textio.ads:249, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__get_line__2__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "put_line" defined at a-textio.ads:259, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__put_line
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Array__1

 val put_line 
   (file : __private) (item : Standard__string.string)  :unit
  requires { true }
  ensures { true }


end

(* Module giving an empty axiom for the entity "put_line" defined at a-textio.ads:259, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__put_line__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "put_line__2" defined at a-textio.ads:263, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__put_line__2
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Array__1

 val put_line__2 
   (item : Standard__string.string)  :unit
  requires { true }
  ensures { true }


end

(* Module giving an empty axiom for the entity "put_line__2" defined at a-textio.ads:263, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__put_line__2__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "lm" defined at a-textio.ads:352, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__lm
 use import "_gnatprove_standard".Main
 use        Standard__universal_integer
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function lm 
   :Standard__universal_integer.universal_integer

end

(* Module for defining the constant "pm" defined at a-textio.ads:355, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__pm
 use import "_gnatprove_standard".Main
 use        Standard__universal_integer
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function pm 
   :Standard__universal_integer.universal_integer

end

(* Module for declaring a program function (and possibly a logic function) for "initialize_standard_files" defined at a-textio.ads:466, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__initialize_standard_files
 use import "_gnatprove_standard".Main

 val initialize_standard_files 
   (__void_param : unit)  :unit
  requires { true }
  ensures { true }


end

(* Module giving an empty axiom for the entity "initialize_standard_files" defined at a-textio.ads:466, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__initialize_standard_files__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "correct_signals" defined at railway.ads:39, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Railway__correct_signals
 use        Railway__segment_state
 use        Railway__signal_state
 use import "_gnatprove_standard".Main
 use        Railway__segment_state_type
 use        Railway__signal_state_type
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function correct_signals 
   (railway__segment_state : Railway__segment_state_type.segment_state_type) (railway__signal_state : Railway__signal_state_type.signal_state_type)  :bool
 
 val correct_signals 
   (__void_param : unit)  :bool
  requires { true }
  ensures { ( result = (correct_signals !Railway__segment_state.segment_state !Railway__signal_state.signal_state) ) }
  reads {Railway__segment_state.segment_state, Railway__signal_state.signal_state }


end

(* Module giving a defining axiom for the expression function "correct_signals" defined at railway.ads:39, created in Gnat2Why.Subprograms.Translate_Expression_Function_Body *)
module Railway__correct_signals__axiom
 use        Railway__segment_state
 use        Railway__signal_state
 use import "_gnatprove_standard".Main
 use        Railway__one_signal_state
 use        Railway__one_segment_state
 use        Railway__segment_state_type
 use        Railway__signal_state_type
 use        Railway__correct_signals
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Boolean

 axiom def_axiom :
  (forall railway__segment_state  : Railway__segment_state_type.segment_state_type.
  (forall railway__signal_state  : Railway__signal_state_type.signal_state_type [(Railway__correct_signals.correct_signals railway__segment_state railway__signal_state)].
   ( ( (Railway__correct_signals.correct_signals railway__segment_state railway__signal_state) = True ) <-> ( ( ( (if (( (Railway__one_signal_state.to_int (Railway__signal_state_type.rec__left_middle railway__signal_state)) = 1 )) then (
    ( ( (Railway__one_segment_state.to_int (Railway__segment_state_type.rec__left railway__segment_state)) = 2 ) /\ ( (Railway__one_segment_state.to_int (Railway__segment_state_type.rec__middle railway__segment_state)) = 3 ) )) else (
    true)) /\ (if (( (Railway__one_signal_state.to_int (Railway__signal_state_type.rec__middle_left railway__signal_state)) = 1 )) then (
    ( ( (Railway__one_segment_state.to_int (Railway__segment_state_type.rec__middle railway__segment_state)) = 1 ) /\ ( (Railway__one_segment_state.to_int (Railway__segment_state_type.rec__left railway__segment_state)) = 4 ) )) else (
    true)) ) /\ (if (( (Railway__one_signal_state.to_int (Railway__signal_state_type.rec__middle_right railway__signal_state)) = 1 )) then (
    ( ( (Railway__one_segment_state.to_int (Railway__segment_state_type.rec__middle railway__segment_state)) = 2 ) /\ ( (Railway__one_segment_state.to_int (Railway__segment_state_type.rec__right railway__segment_state)) = 3 ) )) else (
    true)) ) /\ (if (( (Railway__one_signal_state.to_int (Railway__signal_state_type.rec__right_middle railway__signal_state)) = 1 )) then (
    ( ( (Railway__one_segment_state.to_int (Railway__segment_state_type.rec__right railway__segment_state)) = 1 ) /\ ( (Railway__one_segment_state.to_int (Railway__segment_state_type.rec__middle railway__segment_state)) = 4 ) )) else (
    true)) ) )))

end

(* Module for declaring a program function (and possibly a logic function) for "correct_segments" defined at railway.ads:55, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Railway__correct_segments
 use        Railway__segment_state
 use        Railway__signal_state
 use import "_gnatprove_standard".Main
 use        Railway__segment_state_type
 use        Railway__signal_state_type
 use        "_gnatprove_standard".Integer
 use import "int".Int

 function correct_segments 
   (railway__segment_state : Railway__segment_state_type.segment_state_type) (railway__signal_state : Railway__signal_state_type.signal_state_type)  :bool
 
 val correct_segments 
   (__void_param : unit)  :bool
  requires { true }
  ensures { ( result = (correct_segments !Railway__segment_state.segment_state !Railway__signal_state.signal_state) ) }
  reads {Railway__segment_state.segment_state, Railway__signal_state.signal_state }


end

(* Module giving a defining axiom for the expression function "correct_segments" defined at railway.ads:55, created in Gnat2Why.Subprograms.Translate_Expression_Function_Body *)
module Railway__correct_segments__axiom
 use        Railway__segment_state
 use        Railway__signal_state
 use import "_gnatprove_standard".Main
 use        Railway__one_signal_state
 use        Railway__one_segment_state
 use        Railway__segment_state_type
 use        Railway__signal_state_type
 use        Railway__correct_segments
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Boolean

 axiom def_axiom :
  (forall railway__segment_state  : Railway__segment_state_type.segment_state_type.
  (forall railway__signal_state  : Railway__signal_state_type.signal_state_type [(Railway__correct_segments.correct_segments railway__segment_state railway__signal_state)].
   ( ( (Railway__correct_segments.correct_segments railway__segment_state railway__signal_state) = True ) <-> ( ( ( (if (( (Railway__one_segment_state.to_int (Railway__segment_state_type.rec__left railway__segment_state)) <> 4 )) then (
    ( (Railway__one_signal_state.to_int (Railway__signal_state_type.rec__middle_left railway__signal_state)) = 0 )) else (
    true)) /\ (if (( (Railway__one_segment_state.to_int (Railway__segment_state_type.rec__middle railway__segment_state)) <> 3 )) then (
    ( (Railway__one_signal_state.to_int (Railway__signal_state_type.rec__left_middle railway__signal_state)) = 0 )) else (
    true)) ) /\ (if (( (Railway__one_segment_state.to_int (Railway__segment_state_type.rec__middle railway__segment_state)) <> 4 )) then (
    ( (Railway__one_signal_state.to_int (Railway__signal_state_type.rec__right_middle railway__signal_state)) = 0 )) else (
    true)) ) /\ (if (( (Railway__one_segment_state.to_int (Railway__segment_state_type.rec__right railway__segment_state)) <> 3 )) then (
    ( (Railway__one_signal_state.to_int (Railway__signal_state_type.rec__middle_right railway__signal_state)) = 0 )) else (
    true)) ) )))

end

(* Module for declaring a program function (and possibly a logic function) for "open_route" defined at railway.ads:67, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Railway__open_route
 use        Railway__segment_state
 use        Railway__signal_state
 use        Railway__segment_state
 use        Railway__signal_state
 use        Railway__segment_state
 use        Railway__signal_state
 use        Railway__segment_state
 use        Railway__signal_state
 use import "_gnatprove_standard".Main
 use        Railway__segment_state_type
 use        Railway__signal_state_type
 use        Railway__segment_state
 use        Railway__signal_state
 use        Railway__correct_signals
 use        Railway__correct_segments
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Boolean

 val open_route 
   (route : int) (success : ref bool)  :unit
  requires { true }
  ensures { ( ( (Railway__correct_signals.correct_signals !Railway__segment_state.segment_state !Railway__signal_state.signal_state) = True ) /\ ( (Railway__correct_segments.correct_segments !Railway__segment_state.segment_state !Railway__signal_state.signal_state) = True ) ) }
  reads {Railway__segment_state.segment_state, Railway__signal_state.signal_state }
  writes {Railway__segment_state.segment_state, Railway__signal_state.signal_state, success }


end

(* Module giving an empty axiom for the entity "open_route" defined at railway.ads:67, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railway__open_route__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "move_train" defined at railway.ads:74, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Railway__move_train
 use        Railway__segment_state
 use        Railway__signal_state
 use        Railway__segment_state
 use        Railway__signal_state
 use        Railway__segment_state
 use        Railway__signal_state
 use        Railway__segment_state
 use        Railway__signal_state
 use import "_gnatprove_standard".Main
 use        Railway__segment_state_type
 use        Railway__signal_state_type
 use        Railway__segment_state
 use        Railway__signal_state
 use        Railway__correct_signals
 use        Railway__correct_segments
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Boolean

 val move_train 
   (route : int) (success : ref bool)  :unit
  requires { true }
  ensures { ( ( (Railway__correct_signals.correct_signals !Railway__segment_state.segment_state !Railway__signal_state.signal_state) = True ) /\ ( (Railway__correct_segments.correct_segments !Railway__segment_state.segment_state !Railway__signal_state.signal_state) = True ) ) }
  reads {Railway__segment_state.segment_state, Railway__signal_state.signal_state }
  writes {Railway__segment_state.segment_state, Railway__signal_state.signal_state, success }


end

(* Module giving an empty axiom for the entity "move_train" defined at railway.ads:74, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Railway__move_train__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly a logic function) for "main" defined at main.adb:4, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Main
 use        Railway__segment_state
 use        Railway__signal_state
 use        Railway__segment_state
 use        Railway__signal_state
 use import "_gnatprove_standard".Main

 val main 
   (__void_param : unit)  :unit
  requires { true }
  ensures { true }
  reads {Railway__segment_state.segment_state, Railway__signal_state.signal_state }
  writes {Railway__segment_state.segment_state, Railway__signal_state.signal_state }


end

(* Module giving an empty axiom for the entity "main" defined at main.adb:4, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Main__axiom
 use import "_gnatprove_standard".Main


end
(* Module giving axioms for the type entity "short_short_integer", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__short_short_integer__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "short_integer", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__short_integer__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "integer", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__integer__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "long_integer", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__long_integer__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "long_long_integer", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__long_long_integer__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "natural", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__natural__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "positive", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__positive__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "short_float", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__short_float__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "float", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__float__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "long_float", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__long_float__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "long_long_float", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__long_long_float__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "character", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__character__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "wide_character", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__wide_character__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "wide_wide_character", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__wide_wide_character__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "string", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__string__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "wide_string", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__wide_string__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "wide_wide_string", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__wide_wide_string__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "duration", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__duration__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "integer_8", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__integer_8__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "integer_16", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__integer_16__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "integer_32", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__integer_32__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "integer_64", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__integer_64__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "universal_integer", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__universal_integer__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "universal_real", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__universal_real__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "stream_element" defined at a-stream.ads:42, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada__streams__stream_element__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "Tstream_element_offsetB" defined at a-stream.ads:44, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada__streams__Tstream_element_offsetB__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "stream_element_offset" defined at a-stream.ads:44, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada__streams__stream_element_offset__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "stream_element_count" defined at a-stream.ads:48, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada__streams__stream_element_count__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "stream_element_array" defined at a-stream.ads:51, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada__streams__stream_element_array__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "name" defined at system.ads:43, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__name__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "system_name" defined at system.ads:44, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__system_name__axiom
 use import "_gnatprove_standard".Main
 use        System__name
 use        System__system_name
 use        "_gnatprove_standard".Integer
 use import "int".Int

 axiom def_axiom :
  ( (System__system_name.system_name ) = (System__name.of_int 0) )

end

(* Module for defining the value of constant "min_int" defined at system.ads:48, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__min_int__axiom
 use import "_gnatprove_standard".Main
 use        Standard__universal_integer
 use        System__min_int
 use        "_gnatprove_standard".Integer
 use import "int".Int

 axiom def_axiom :
  ( (System__min_int.min_int ) = (Standard__universal_integer.of_int ( -9223372036854775808 )) )

end

(* Module for defining the value of constant "max_int" defined at system.ads:49, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__max_int__axiom
 use import "_gnatprove_standard".Main
 use        Standard__universal_integer
 use        System__max_int
 use        "_gnatprove_standard".Integer
 use import "int".Int

 axiom def_axiom :
  ( (System__max_int.max_int ) = (Standard__universal_integer.of_int 9223372036854775807) )

end

(* Module for defining the value of constant "max_binary_modulus" defined at system.ads:51, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__max_binary_modulus__axiom
 use import "_gnatprove_standard".Main
 use        Standard__universal_integer
 use        System__max_binary_modulus
 use        "_gnatprove_standard".Integer
 use import "int".Int

 axiom def_axiom :
  ( (System__max_binary_modulus.max_binary_modulus ) = (Standard__universal_integer.of_int 18446744073709551616) )

end

(* Module for defining the value of constant "max_nonbinary_modulus" defined at system.ads:52, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__max_nonbinary_modulus__axiom
 use import "_gnatprove_standard".Main
 use        Standard__universal_integer
 use        System__max_nonbinary_modulus
 use        "_gnatprove_standard".Integer
 use import "int".Int

 axiom def_axiom :
  ( (System__max_nonbinary_modulus.max_nonbinary_modulus ) = (Standard__universal_integer.of_int 4294967295) )

end

(* Module for defining the value of constant "max_base_digits" defined at system.ads:54, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__max_base_digits__axiom
 use import "_gnatprove_standard".Main
 use        Standard__universal_integer
 use        System__max_base_digits
 use        "_gnatprove_standard".Integer
 use import "int".Int

 axiom def_axiom :
  ( (System__max_base_digits.max_base_digits ) = (Standard__universal_integer.of_int 18) )

end

(* Module for defining the value of constant "max_digits" defined at system.ads:55, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__max_digits__axiom
 use import "_gnatprove_standard".Main
 use        Standard__universal_integer
 use        System__max_digits
 use        "_gnatprove_standard".Integer
 use import "int".Int

 axiom def_axiom :
  ( (System__max_digits.max_digits ) = (Standard__universal_integer.of_int 18) )

end

(* Module for defining the value of constant "max_mantissa" defined at system.ads:57, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__max_mantissa__axiom
 use import "_gnatprove_standard".Main
 use        Standard__universal_integer
 use        System__max_mantissa
 use        "_gnatprove_standard".Integer
 use import "int".Int

 axiom def_axiom :
  ( (System__max_mantissa.max_mantissa ) = (Standard__universal_integer.of_int 63) )

end

(* Module for defining the value of constant "fine_delta" defined at system.ads:58, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__fine_delta__axiom
 use import "_gnatprove_standard".Main
 use        Standard__universal_real
 use        System__fine_delta
 use        "_gnatprove_standard".Floating
 use import "real".RealInfix

 axiom def_axiom :
  ( (System__fine_delta.fine_delta ) = (Standard__universal_real.of_real (0.000000000000000000108420217248550443400745280086994171142578125)) )

end

(* Module for defining the value of constant "tick" defined at system.ads:60, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__tick__axiom
 use import "_gnatprove_standard".Main
 use        Standard__universal_real
 use        System__tick
 use        "_gnatprove_standard".Floating
 use import "real".RealInfix

 axiom def_axiom :
  ( (System__tick.tick ) = (Standard__universal_real.of_real (1.0E-6)) )

end

(* Module giving axioms for the type entity "address" defined at system.ads:113, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__address__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "storage_unit" defined at system.ads:68, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__storage_unit__axiom
 use import "_gnatprove_standard".Main
 use        Standard__universal_integer
 use        System__storage_unit
 use        "_gnatprove_standard".Integer
 use import "int".Int

 axiom def_axiom :
  ( (System__storage_unit.storage_unit ) = (Standard__universal_integer.of_int 8) )

end

(* Module for defining the value of constant "word_size" defined at system.ads:69, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__word_size__axiom
 use import "_gnatprove_standard".Main
 use        Standard__universal_integer
 use        System__word_size
 use        "_gnatprove_standard".Integer
 use import "int".Int

 axiom def_axiom :
  ( (System__word_size.word_size ) = (Standard__universal_integer.of_int 32) )

end

(* Module for defining the value of constant "memory_size" defined at system.ads:70, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__memory_size__axiom
 use import "_gnatprove_standard".Main
 use        Standard__universal_integer
 use        System__memory_size
 use        "_gnatprove_standard".Integer
 use import "int".Int

 axiom def_axiom :
  ( (System__memory_size.memory_size ) = (Standard__universal_integer.of_int 4294967296) )

end

(* Module giving axioms for the type entity "bit_order" defined at system.ads:88, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__bit_order__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "default_bit_order" defined at system.ads:89, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__default_bit_order__axiom
 use import "_gnatprove_standard".Main
 use        System__bit_order
 use        System__default_bit_order
 use        "_gnatprove_standard".Integer
 use import "int".Int

 axiom def_axiom :
  ( (System__default_bit_order.default_bit_order ) = (System__bit_order.of_int 1) )

end

(* Module for defining the value of constant "max_priority" defined at system.ads:102, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__max_priority__axiom
 use import "_gnatprove_standard".Main
 use        Standard__positive
 use        System__max_priority
 use        "_gnatprove_standard".Integer
 use import "int".Int

 axiom def_axiom :
  ( (System__max_priority.max_priority ) = (Standard__positive.of_int 97) )

end

(* Module for defining the value of constant "max_interrupt_priority" defined at system.ads:103, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__max_interrupt_priority__axiom
 use import "_gnatprove_standard".Main
 use        Standard__positive
 use        System__max_interrupt_priority
 use        "_gnatprove_standard".Integer
 use import "int".Int

 axiom def_axiom :
  ( (System__max_interrupt_priority.max_interrupt_priority ) = (Standard__positive.of_int 98) )

end

(* Module giving axioms for the type entity "any_priority" defined at system.ads:105, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__any_priority__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "priority" defined at system.ads:106, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__priority__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "interrupt_priority" defined at system.ads:107, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__interrupt_priority__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "default_priority" defined at system.ads:109, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__default_priority__axiom
 use import "_gnatprove_standard".Main
 use        System__priority
 use        System__default_priority
 use        "_gnatprove_standard".Integer
 use import "int".Int

 axiom def_axiom :
  ( (System__default_priority.default_priority ) = (System__priority.of_int 48) )

end

(* Module for defining the value of constant "null_address" defined at system.ads:114, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__null_address__axiom
 use import "_gnatprove_standard".Main
 use        System__address
 use        System__address
 use        System__null_address
 use        "_gnatprove_standard".Integer
 use import "int".Int

 axiom def_axiom :
  ( (System__null_address.null_address ) = (System__address.of_int 0) )

end

(* Module for defining the value of constant "backend_divide_checks" defined at system.ads:126, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__backend_divide_checks__axiom
 use import "_gnatprove_standard".Main
 use        System__backend_divide_checks
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Boolean

 axiom def_axiom :
  ( (System__backend_divide_checks.backend_divide_checks ) = (Boolean.of_int 0) )

end

(* Module for defining the value of constant "backend_overflow_checks" defined at system.ads:127, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__backend_overflow_checks__axiom
 use import "_gnatprove_standard".Main
 use        System__backend_overflow_checks
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Boolean

 axiom def_axiom :
  ( (System__backend_overflow_checks.backend_overflow_checks ) = (Boolean.of_int 1) )

end

(* Module for defining the value of constant "command_line_args" defined at system.ads:128, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__command_line_args__axiom
 use import "_gnatprove_standard".Main
 use        System__command_line_args
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Boolean

 axiom def_axiom :
  ( (System__command_line_args.command_line_args ) = (Boolean.of_int 1) )

end

(* Module for defining the value of constant "configurable_run_time" defined at system.ads:129, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__configurable_run_time__axiom
 use import "_gnatprove_standard".Main
 use        System__configurable_run_time
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Boolean

 axiom def_axiom :
  ( (System__configurable_run_time.configurable_run_time ) = (Boolean.of_int 0) )

end

(* Module for defining the value of constant "denorm" defined at system.ads:130, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__denorm__axiom
 use import "_gnatprove_standard".Main
 use        System__denorm
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Boolean

 axiom def_axiom :
  ( (System__denorm.denorm ) = (Boolean.of_int 1) )

end

(* Module for defining the value of constant "duration_32_bits" defined at system.ads:131, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__duration_32_bits__axiom
 use import "_gnatprove_standard".Main
 use        System__duration_32_bits
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Boolean

 axiom def_axiom :
  ( (System__duration_32_bits.duration_32_bits ) = (Boolean.of_int 0) )

end

(* Module for defining the value of constant "exit_status_supported" defined at system.ads:132, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__exit_status_supported__axiom
 use import "_gnatprove_standard".Main
 use        System__exit_status_supported
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Boolean

 axiom def_axiom :
  ( (System__exit_status_supported.exit_status_supported ) = (Boolean.of_int 1) )

end

(* Module for defining the value of constant "fractional_fixed_ops" defined at system.ads:133, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__fractional_fixed_ops__axiom
 use import "_gnatprove_standard".Main
 use        System__fractional_fixed_ops
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Boolean

 axiom def_axiom :
  ( (System__fractional_fixed_ops.fractional_fixed_ops ) = (Boolean.of_int 0) )

end

(* Module for defining the value of constant "frontend_layout" defined at system.ads:134, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__frontend_layout__axiom
 use import "_gnatprove_standard".Main
 use        System__frontend_layout
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Boolean

 axiom def_axiom :
  ( (System__frontend_layout.frontend_layout ) = (Boolean.of_int 0) )

end

(* Module for defining the value of constant "machine_overflows" defined at system.ads:135, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__machine_overflows__axiom
 use import "_gnatprove_standard".Main
 use        System__machine_overflows
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Boolean

 axiom def_axiom :
  ( (System__machine_overflows.machine_overflows ) = (Boolean.of_int 0) )

end

(* Module for defining the value of constant "machine_rounds" defined at system.ads:136, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__machine_rounds__axiom
 use import "_gnatprove_standard".Main
 use        System__machine_rounds
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Boolean

 axiom def_axiom :
  ( (System__machine_rounds.machine_rounds ) = (Boolean.of_int 1) )

end

(* Module for defining the value of constant "preallocated_stacks" defined at system.ads:137, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__preallocated_stacks__axiom
 use import "_gnatprove_standard".Main
 use        System__preallocated_stacks
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Boolean

 axiom def_axiom :
  ( (System__preallocated_stacks.preallocated_stacks ) = (Boolean.of_int 0) )

end

(* Module for defining the value of constant "signed_zeros" defined at system.ads:138, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__signed_zeros__axiom
 use import "_gnatprove_standard".Main
 use        System__signed_zeros
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Boolean

 axiom def_axiom :
  ( (System__signed_zeros.signed_zeros ) = (Boolean.of_int 1) )

end

(* Module for defining the value of constant "stack_check_default" defined at system.ads:139, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__stack_check_default__axiom
 use import "_gnatprove_standard".Main
 use        System__stack_check_default
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Boolean

 axiom def_axiom :
  ( (System__stack_check_default.stack_check_default ) = (Boolean.of_int 0) )

end

(* Module for defining the value of constant "stack_check_probes" defined at system.ads:140, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__stack_check_probes__axiom
 use import "_gnatprove_standard".Main
 use        System__stack_check_probes
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Boolean

 axiom def_axiom :
  ( (System__stack_check_probes.stack_check_probes ) = (Boolean.of_int 1) )

end

(* Module for defining the value of constant "stack_check_limits" defined at system.ads:141, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__stack_check_limits__axiom
 use import "_gnatprove_standard".Main
 use        System__stack_check_limits
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Boolean

 axiom def_axiom :
  ( (System__stack_check_limits.stack_check_limits ) = (Boolean.of_int 0) )

end

(* Module for defining the value of constant "support_aggregates" defined at system.ads:142, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__support_aggregates__axiom
 use import "_gnatprove_standard".Main
 use        System__support_aggregates
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Boolean

 axiom def_axiom :
  ( (System__support_aggregates.support_aggregates ) = (Boolean.of_int 1) )

end

(* Module for defining the value of constant "support_atomic_primitives" defined at system.ads:143, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__support_atomic_primitives__axiom
 use import "_gnatprove_standard".Main
 use        System__support_atomic_primitives
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Boolean

 axiom def_axiom :
  ( (System__support_atomic_primitives.support_atomic_primitives ) = (Boolean.of_int 1) )

end

(* Module for defining the value of constant "support_composite_assign" defined at system.ads:144, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__support_composite_assign__axiom
 use import "_gnatprove_standard".Main
 use        System__support_composite_assign
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Boolean

 axiom def_axiom :
  ( (System__support_composite_assign.support_composite_assign ) = (Boolean.of_int 1) )

end

(* Module for defining the value of constant "support_composite_compare" defined at system.ads:145, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__support_composite_compare__axiom
 use import "_gnatprove_standard".Main
 use        System__support_composite_compare
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Boolean

 axiom def_axiom :
  ( (System__support_composite_compare.support_composite_compare ) = (Boolean.of_int 1) )

end

(* Module for defining the value of constant "support_long_shifts" defined at system.ads:146, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__support_long_shifts__axiom
 use import "_gnatprove_standard".Main
 use        System__support_long_shifts
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Boolean

 axiom def_axiom :
  ( (System__support_long_shifts.support_long_shifts ) = (Boolean.of_int 1) )

end

(* Module for defining the value of constant "always_compatible_rep" defined at system.ads:147, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__always_compatible_rep__axiom
 use import "_gnatprove_standard".Main
 use        System__always_compatible_rep
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Boolean

 axiom def_axiom :
  ( (System__always_compatible_rep.always_compatible_rep ) = (Boolean.of_int 0) )

end

(* Module for defining the value of constant "suppress_standard_library" defined at system.ads:148, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__suppress_standard_library__axiom
 use import "_gnatprove_standard".Main
 use        System__suppress_standard_library
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Boolean

 axiom def_axiom :
  ( (System__suppress_standard_library.suppress_standard_library ) = (Boolean.of_int 0) )

end

(* Module for defining the value of constant "use_ada_main_program_name" defined at system.ads:149, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__use_ada_main_program_name__axiom
 use import "_gnatprove_standard".Main
 use        System__use_ada_main_program_name
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Boolean

 axiom def_axiom :
  ( (System__use_ada_main_program_name.use_ada_main_program_name ) = (Boolean.of_int 0) )

end

(* Module for defining the value of constant "zcx_by_default" defined at system.ads:150, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__zcx_by_default__axiom
 use import "_gnatprove_standard".Main
 use        System__zcx_by_default
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Boolean

 axiom def_axiom :
  ( (System__zcx_by_default.zcx_by_default ) = (Boolean.of_int 1) )

end

(* Module giving axioms for the type entity "Ttask_storage_sizeB" defined at s-parame.ads:58, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__parameters__Ttask_storage_sizeB__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "task_storage_size" defined at s-parame.ads:58, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__parameters__task_storage_size__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "Tsize_typeB" defined at s-parame.ads:61, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__parameters__Tsize_typeB__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "size_type" defined at s-parame.ads:61, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__parameters__size_type__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "unspecified_size" defined at s-parame.ads:64, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__parameters__unspecified_size__axiom
 use import "_gnatprove_standard".Main
 use        System__parameters__size_type
 use        System__parameters__unspecified_size
 use        "_gnatprove_standard".Integer
 use import "int".Int

 axiom def_axiom :
  ( (System__parameters__unspecified_size.unspecified_size ) = (System__parameters__size_type.of_int ( -2147483648 )) )

end

(* Module giving axioms for the type entity "percentage" defined at s-parame.ads:67, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__parameters__percentage__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "dynamic" defined at s-parame.ads:68, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__parameters__dynamic__axiom
 use import "_gnatprove_standard".Main
 use        System__parameters__size_type
 use        System__parameters__dynamic
 use        "_gnatprove_standard".Integer
 use import "int".Int

 axiom def_axiom :
  ( (System__parameters__dynamic.dynamic ) = (System__parameters__size_type.of_int ( -1 )) )

end

(* Module for defining the value of constant "sec_stack_percentage" defined at s-parame.ads:75, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__parameters__sec_stack_percentage__axiom
 use import "_gnatprove_standard".Main
 use        System__parameters__percentage
 use        System__parameters__sec_stack_percentage
 use        "_gnatprove_standard".Integer
 use import "int".Int

 axiom def_axiom :
  ( (System__parameters__sec_stack_percentage.sec_stack_percentage ) = (System__parameters__percentage.of_int ( -1 )) )

end

(* Module for defining the value of constant "sec_stack_dynamic" defined at s-parame.ads:78, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__parameters__sec_stack_dynamic__axiom
 use import "_gnatprove_standard".Main
 use        System__parameters__sec_stack_dynamic
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Boolean

 axiom def_axiom :
  ( (System__parameters__sec_stack_dynamic.sec_stack_dynamic ) = (Boolean.of_int 1) )

end

(* Module for defining the value of constant "default_env_stack_size" defined at s-parame.ads:96, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__parameters__default_env_stack_size__axiom
 use import "_gnatprove_standard".Main
 use        System__parameters__size_type
 use        System__parameters__default_env_stack_size
 use        "_gnatprove_standard".Integer
 use import "int".Int

 axiom def_axiom :
  ( (System__parameters__default_env_stack_size.default_env_stack_size ) = (System__parameters__size_type.of_int 8192000) )

end

(* Module for defining the value of constant "stack_grows_down" defined at s-parame.ads:101, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__parameters__stack_grows_down__axiom
 use import "_gnatprove_standard".Main
 use        System__parameters__stack_grows_down
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Boolean

 axiom def_axiom :
  ( (System__parameters__stack_grows_down.stack_grows_down ) = (Boolean.of_int 1) )

end

(* Module for defining the value of constant "long_bits" defined at s-parame.ads:110, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__parameters__long_bits__axiom
 use import "_gnatprove_standard".Main
 use        Standard__universal_integer
 use        System__parameters__long_bits
 use        "_gnatprove_standard".Integer
 use import "int".Int

 axiom def_axiom :
  ( (System__parameters__long_bits.long_bits ) = (Standard__universal_integer.of_int 32) )

end

(* Module giving axioms for the type entity "c_address" defined at s-parame.ads:116, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__parameters__c_address__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "T1s" defined at s-parame.ads:121, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__parameters__T1s__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "c_malloc_linkname" defined at s-parame.ads:121, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__parameters__c_malloc_linkname__axiom
 use import "_gnatprove_standard".Main
 use        Standard__string
 use        System__parameters__c_malloc_linkname
 use        Temp___main_0
 use        System__parameters__T1s
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Array__1

 axiom def_axiom :
  ( (System__parameters__c_malloc_linkname.c_malloc_linkname ) = (Standard__string.of_array Temp___main_0.temp___main_0 1 13) )

end

(* Module for defining the value of constant "garbage_collected" defined at s-parame.ads:144, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__parameters__garbage_collected__axiom
 use import "_gnatprove_standard".Main
 use        System__parameters__garbage_collected
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Boolean

 axiom def_axiom :
  ( (System__parameters__garbage_collected.garbage_collected ) = (Boolean.of_int 0) )

end

(* Module for defining the value of constant "single_lock" defined at s-parame.ads:159, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__parameters__single_lock__axiom
 use import "_gnatprove_standard".Main
 use        System__parameters__single_lock
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Boolean

 axiom def_axiom :
  ( (System__parameters__single_lock.single_lock ) = (Boolean.of_int 0) )

end

(* Module for defining the value of constant "no_abort" defined at s-parame.ads:172, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__parameters__no_abort__axiom
 use import "_gnatprove_standard".Main
 use        System__parameters__no_abort
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Boolean

 axiom def_axiom :
  ( (System__parameters__no_abort.no_abort ) = (Boolean.of_int 0) )

end

(* Module for defining the value of constant "default_attribute_count" defined at s-parame.ads:185, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__parameters__default_attribute_count__axiom
 use import "_gnatprove_standard".Main
 use        Standard__universal_integer
 use        System__parameters__default_attribute_count
 use        "_gnatprove_standard".Integer
 use import "int".Int

 axiom def_axiom :
  ( (System__parameters__default_attribute_count.default_attribute_count ) = (Standard__universal_integer.of_int 16) )

end

(* Module for defining the value of constant "runtime_traces" defined at s-parame.ads:193, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__parameters__runtime_traces__axiom
 use import "_gnatprove_standard".Main
 use        System__parameters__runtime_traces
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Boolean

 axiom def_axiom :
  ( (System__parameters__runtime_traces.runtime_traces ) = (Boolean.of_int 0) )

end

(* Module for defining the value of constant "max_task_image_length" defined at s-parame.ads:202, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__parameters__max_task_image_length__axiom
 use import "_gnatprove_standard".Main
 use        Standard__universal_integer
 use        System__parameters__max_task_image_length
 use        "_gnatprove_standard".Integer
 use import "int".Int

 axiom def_axiom :
  ( (System__parameters__max_task_image_length.max_task_image_length ) = (Standard__universal_integer.of_int 256) )

end

(* Module for defining the value of constant "default_exception_msg_max_length" defined at s-parame.ads:209, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__parameters__default_exception_msg_max_length__axiom
 use import "_gnatprove_standard".Main
 use        Standard__universal_integer
 use        System__parameters__default_exception_msg_max_length
 use        "_gnatprove_standard".Integer
 use import "int".Int

 axiom def_axiom :
  ( (System__parameters__default_exception_msg_max_length.default_exception_msg_max_length ) = (Standard__universal_integer.of_int 200) )

end

(* Module giving axioms for the type entity "chars" defined at s-crtl.ads:41, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__crtl__chars__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "dirs" defined at s-crtl.ads:47, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__crtl__dirs__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "files" defined at s-crtl.ads:50, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__crtl__files__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "int" defined at s-crtl.ads:53, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__crtl__int__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "TlongB" defined at s-crtl.ads:55, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__crtl__TlongB__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "long" defined at s-crtl.ads:55, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__crtl__long__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "off_t" defined at s-crtl.ads:58, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__crtl__off_t__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "size_t" defined at s-crtl.ads:60, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__crtl__size_t__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "Tssize_tB" defined at s-crtl.ads:62, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__crtl__Tssize_tB__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "ssize_t" defined at s-crtl.ads:62, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__crtl__ssize_t__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "filename_encoding" defined at s-crtl.ads:65, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__crtl__filename_encoding__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "Tinteger_8B" defined at interfac.ads:45, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__Tinteger_8B__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "integer_8" defined at interfac.ads:45, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__integer_8__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "Tinteger_16B" defined at interfac.ads:48, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__Tinteger_16B__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "integer_16" defined at interfac.ads:48, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__integer_16__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "Tinteger_32B" defined at interfac.ads:51, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__Tinteger_32B__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "integer_32" defined at interfac.ads:51, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__integer_32__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "Tinteger_64B" defined at interfac.ads:54, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__Tinteger_64B__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "integer_64" defined at interfac.ads:54, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__integer_64__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "unsigned_8" defined at interfac.ads:57, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__unsigned_8__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "unsigned_16" defined at interfac.ads:60, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__unsigned_16__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "unsigned_32" defined at interfac.ads:63, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__unsigned_32__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "unsigned_64" defined at interfac.ads:66, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__unsigned_64__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "Tieee_float_32B" defined at interfac.ads:162, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__Tieee_float_32B__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "ieee_float_32" defined at interfac.ads:162, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__ieee_float_32__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "Tieee_float_64B" defined at interfac.ads:166, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__Tieee_float_64B__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "ieee_float_64" defined at interfac.ads:166, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__ieee_float_64__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "Tieee_extended_floatB" defined at interfac.ads:177, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__Tieee_extended_floatB__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "ieee_extended_float" defined at interfac.ads:177, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__ieee_extended_float__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "chars" defined at i-cstrea.ads:40, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__c_streams__chars__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "files" defined at i-cstrea.ads:41, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__c_streams__files__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "int" defined at i-cstrea.ads:42, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__c_streams__int__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "long" defined at i-cstrea.ads:43, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__c_streams__long__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "size_t" defined at i-cstrea.ads:44, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__c_streams__size_t__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "ssize_t" defined at i-cstrea.ads:45, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__c_streams__ssize_t__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "voids" defined at i-cstrea.ads:46, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__c_streams__voids__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "eof" defined at i-cstrea.ads:55, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Interfaces__c_streams__eof__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "iofbf" defined at i-cstrea.ads:58, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Interfaces__c_streams__iofbf__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "iolbf" defined at i-cstrea.ads:59, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Interfaces__c_streams__iolbf__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "ionbf" defined at i-cstrea.ads:60, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Interfaces__c_streams__ionbf__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "l_tmpnam" defined at i-cstrea.ads:63, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Interfaces__c_streams__l_tmpnam__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "seek_cur" defined at i-cstrea.ads:66, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Interfaces__c_streams__seek_cur__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "seek_end" defined at i-cstrea.ads:67, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Interfaces__c_streams__seek_end__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "seek_set" defined at i-cstrea.ads:68, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Interfaces__c_streams__seek_set__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "content_encoding" defined at i-cstrea.ads:231, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__c_streams__content_encoding__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "text_content_encoding" defined at i-cstrea.ads:249, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__c_streams__text_content_encoding__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "non_default_text_content_encoding" defined at i-cstrea.ads:252, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__c_streams__non_default_text_content_encoding__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "max_path_len" defined at i-cstrea.ads:271, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Interfaces__c_streams__max_path_len__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "null_stream" defined at i-cstrea.ads:314, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Interfaces__c_streams__null_stream__axiom
 use import "_gnatprove_standard".Main
 use        System__null_address
 use        System__address
 use        Interfaces__c_streams__null_stream
 use        Interfaces__c_streams__files
 use        "_gnatprove_standard".Integer
 use import "int".Int

 axiom def_axiom :
  ( (Interfaces__c_streams__null_stream.null_stream ) = (Interfaces__c_streams__files.of_int (System__address.to_int System__null_address.null_address)) )

end

(* Module giving axioms for the type entity "file_mode" defined at s-ficobl.ads:63, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__file_control_block__file_mode__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "read_file_mode" defined at s-ficobl.ads:64, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__file_control_block__read_file_mode__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "shared_status_type" defined at s-ficobl.ads:69, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__file_control_block__shared_status_type__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "Twc_encoding_methodB" defined at s-wchcon.ads:94, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__wch_con__Twc_encoding_methodB__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "wc_encoding_method" defined at s-wchcon.ads:94, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__wch_con__wc_encoding_method__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "wcem_hex" defined at s-wchcon.ads:100, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__wch_con__wcem_hex__axiom
 use import "_gnatprove_standard".Main
 use        System__wch_con__wc_encoding_method
 use        System__wch_con__wcem_hex
 use        "_gnatprove_standard".Integer
 use import "int".Int

 axiom def_axiom :
  ( (System__wch_con__wcem_hex.wcem_hex ) = (System__wch_con__wc_encoding_method.of_int 1) )

end

(* Module for defining the value of constant "wcem_upper" defined at s-wchcon.ads:108, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__wch_con__wcem_upper__axiom
 use import "_gnatprove_standard".Main
 use        System__wch_con__wc_encoding_method
 use        System__wch_con__wcem_upper
 use        "_gnatprove_standard".Integer
 use import "int".Int

 axiom def_axiom :
  ( (System__wch_con__wcem_upper.wcem_upper ) = (System__wch_con__wc_encoding_method.of_int 2) )

end

(* Module for defining the value of constant "wcem_shift_jis" defined at s-wchcon.ads:117, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__wch_con__wcem_shift_jis__axiom
 use import "_gnatprove_standard".Main
 use        System__wch_con__wc_encoding_method
 use        System__wch_con__wcem_shift_jis
 use        "_gnatprove_standard".Integer
 use import "int".Int

 axiom def_axiom :
  ( (System__wch_con__wcem_shift_jis.wcem_shift_jis ) = (System__wch_con__wc_encoding_method.of_int 3) )

end

(* Module for defining the value of constant "wcem_euc" defined at s-wchcon.ads:126, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__wch_con__wcem_euc__axiom
 use import "_gnatprove_standard".Main
 use        System__wch_con__wc_encoding_method
 use        System__wch_con__wcem_euc
 use        "_gnatprove_standard".Integer
 use import "int".Int

 axiom def_axiom :
  ( (System__wch_con__wcem_euc.wcem_euc ) = (System__wch_con__wc_encoding_method.of_int 4) )

end

(* Module for defining the value of constant "wcem_utf8" defined at s-wchcon.ads:134, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__wch_con__wcem_utf8__axiom
 use import "_gnatprove_standard".Main
 use        System__wch_con__wc_encoding_method
 use        System__wch_con__wcem_utf8
 use        "_gnatprove_standard".Integer
 use import "int".Int

 axiom def_axiom :
  ( (System__wch_con__wcem_utf8.wcem_utf8 ) = (System__wch_con__wc_encoding_method.of_int 5) )

end

(* Module for defining the value of constant "wcem_brackets" defined at s-wchcon.ads:156, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__wch_con__wcem_brackets__axiom
 use import "_gnatprove_standard".Main
 use        System__wch_con__wc_encoding_method
 use        System__wch_con__wcem_brackets
 use        "_gnatprove_standard".Integer
 use import "int".Int

 axiom def_axiom :
  ( (System__wch_con__wcem_brackets.wcem_brackets ) = (System__wch_con__wc_encoding_method.of_int 6) )

end

(* Module giving axioms for the type entity "Twc_encoding_lettersB" defined at s-wchcon.ads:169, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__wch_con__Twc_encoding_lettersB__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "Twc_encoding_lettersT" defined at s-wchcon.ads:169, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__wch_con__Twc_encoding_lettersT__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "T3s" defined at s-wchcon.ads:170, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__wch_con__T3s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "T4s" defined at s-wchcon.ads:170, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__wch_con__T4s__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "wc_encoding_letters" defined at s-wchcon.ads:169, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__wch_con__wc_encoding_letters__axiom
 use import "_gnatprove_standard".Main
 use        Standard__character
 use        System__wch_con__wc_encoding_letters
 use        Temp___main_1
 use        System__wch_con__Twc_encoding_lettersT
 use        System__wch_con__T4s
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Array__1

 axiom def_axiom :
  ( (System__wch_con__wc_encoding_letters.wc_encoding_letters ) = (Temp___main_1.temp___main_1 (Standard__character.of_int 104) (Standard__character.of_int 117) (Standard__character.of_int 115) (Standard__character.of_int 101) (Standard__character.of_int 56) (Standard__character.of_int 98)) )

end

(* Module giving axioms for the type entity "wc_esc_encoding_method" defined at s-wchcon.ads:180, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__wch_con__wc_esc_encoding_method__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "wc_upper_half_encoding_method" defined at s-wchcon.ads:184, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__wch_con__wc_upper_half_encoding_method__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "wc_longest_sequence" defined at s-wchcon.ads:189, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__wch_con__wc_longest_sequence__axiom
 use import "_gnatprove_standard".Main
 use        Standard__universal_integer
 use        System__wch_con__wc_longest_sequence
 use        "_gnatprove_standard".Integer
 use import "int".Int

 axiom def_axiom :
  ( (System__wch_con__wc_longest_sequence.wc_longest_sequence ) = (Standard__universal_integer.of_int 12) )

end

(* Module giving axioms for the type entity "Twc_longest_sequencesB" defined at s-wchcon.ads:193, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__wch_con__Twc_longest_sequencesB__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "Twc_longest_sequencesT" defined at s-wchcon.ads:193, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__wch_con__Twc_longest_sequencesT__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "T7s" defined at s-wchcon.ads:194, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__wch_con__T7s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "T8s" defined at s-wchcon.ads:194, created in Gnat2Why.Types.Generate_Type_Completion *)
module System__wch_con__T8s__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "wc_longest_sequences" defined at s-wchcon.ads:193, created in Gnat2Why.Decls.Translate_Constant_Value *)
module System__wch_con__wc_longest_sequences__axiom
 use import "_gnatprove_standard".Main
 use        Standard__natural
 use        System__wch_con__wc_longest_sequences
 use        Temp___main_10
 use        System__wch_con__Twc_longest_sequencesT
 use        System__wch_con__T8s
 use        "_gnatprove_standard".Integer
 use import "int".Int
 use        "_gnatprove_standard".Array__1

 axiom def_axiom :
  ( (System__wch_con__wc_longest_sequences.wc_longest_sequences ) = (Temp___main_10.temp___main_10 (Standard__natural.of_int 5) (Standard__natural.of_int 2) (Standard__natural.of_int 2) (Standard__natural.of_int 2) (Standard__natural.of_int 6) (Standard__natural.of_int 12)) )

end

(* Module giving axioms for the type entity "file_type" defined at a-textio.ads:52, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada__text_io__file_type__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "file_mode" defined at a-textio.ads:53, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada__text_io__file_mode__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "TcountB" defined at a-textio.ads:64, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada__text_io__TcountB__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "count" defined at a-textio.ads:64, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada__text_io__count__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "positive_count" defined at a-textio.ads:68, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada__text_io__positive_count__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "unbounded" defined at a-textio.ads:70, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__text_io__unbounded__axiom
 use import "_gnatprove_standard".Main
 use        Ada__text_io__count
 use        Ada__text_io__unbounded
 use        "_gnatprove_standard".Integer
 use import "int".Int

 axiom def_axiom :
  ( (Ada__text_io__unbounded.unbounded ) = (Ada__text_io__count.of_int 0) )

end

(* Module giving axioms for the type entity "field" defined at a-textio.ads:73, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada__text_io__field__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "number_base" defined at a-textio.ads:78, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada__text_io__number_base__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "type_set" defined at a-textio.ads:80, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada__text_io__type_set__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "lm" defined at a-textio.ads:352, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__text_io__lm__axiom
 use import "_gnatprove_standard".Main
 use        Standard__universal_integer
 use        Ada__text_io__lm
 use        "_gnatprove_standard".Integer
 use import "int".Int

 axiom def_axiom :
  ( (Ada__text_io__lm.lm ) = (Standard__universal_integer.of_int 10) )

end

(* Module for defining the value of constant "pm" defined at a-textio.ads:355, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Ada__text_io__pm__axiom
 use import "_gnatprove_standard".Main
 use        Standard__universal_integer
 use        Ada__text_io__pm
 use        "_gnatprove_standard".Integer
 use import "int".Int

 axiom def_axiom :
  ( (Ada__text_io__pm.pm ) = (Standard__universal_integer.of_int 12) )

end

(* Module giving axioms for the type entity "one_signal_state" defined at railway.ads:2, created in Gnat2Why.Types.Generate_Type_Completion *)
module Railway__one_signal_state__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "route_type" defined at railway.ads:3, created in Gnat2Why.Types.Generate_Type_Completion *)
module Railway__route_type__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "one_segment_state" defined at railway.ads:12, created in Gnat2Why.Types.Generate_Type_Completion *)
module Railway__one_segment_state__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "segment_state_type" defined at railway.ads:19, created in Gnat2Why.Types.Generate_Type_Completion *)
module Railway__segment_state_type__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "signal_state_type" defined at railway.ads:27, created in Gnat2Why.Types.Generate_Type_Completion *)
module Railway__signal_state_type__axiom
 use import "_gnatprove_standard".Main


end
